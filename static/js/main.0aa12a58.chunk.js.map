{"version":3,"sources":["utils/history.js","constants/actions.js","reducers/loading.reducer.js","reducers/shows.reducer.js","constants/regex.js","constants/storage.js","constants/urls.js","constants/utils.js","schemas/static.schema.js","utils/users.js","reducers/static.reducer.js","reducers/toast.reducer.js","reducers/user.reducer.js","reducers/index.js","actions/loading.action.js","actions/login.action.js","actions/register.action.js","actions/shows.action.js","actions/static.action.js","actions/toast.action.js","actions/user.action.js","utils/errorHandler.js","sagas/login.saga.js","sagas/register.saga.js","selectors/loading.selector.js","selectors/shows.selector.js","selectors/static.selector.js","selectors/toast.selector.js","selectors/user.selector.js","sagas/shows.saga.js","sagas/static.saga.js","sagas/toast.saga.js","sagas/index.js","utils/token.js","utils/store.js","utils/theme.js","components/ListFilters/style.js","components/ListFilters/index.js","components/FilterArea/style.js","components/FilterArea/index.js","components/SlideTransition/index.js","components/FilterAreaMobile/index.js","components/FilterAreaWeb/style.js","components/FilterAreaWeb/index.js","components/Loading/index.js","components/MovieDescriptionCard/style.js","components/MovieDescriptionCard/index.js","components/VoteArea/style.js","components/VoteArea/index.js","components/MovieDescription/style.js","components/MovieDescription/index.js","components/AddShow/style.js","components/AddShow/index.js","components/ElevationScroll/index.js","components/Login/style.js","components/Login/index.js","components/Register/style.js","components/Register/index.js","components/Search/style.js","components/Search/index.js","components/Navbar/style.js","components/Navbar/index.js","pages/Index.page.js","components/Toast/style.js","components/Toast/index.js","App.js","serviceWorker.js","index.js"],"names":["history","createBrowserHistory","LOADING","START_GET_STATICS_LOADING","STOP_GET_STATICS_LOADING","START_GET_ALL_SHOWS_LOADING","STOP_GET_ALL_SHOWS_LOADING","START_CHECK_USERNAME_LOADING","STOP_CHECK_USERNAME_LOADING","START_REGISTER_LOADING","STOP_REGISTER_LOADING","START_LOGIN_LOADING","STOP_LOGIN_LOADING","START_ADD_SHOW_LOADING","STOP_ADD_SHOW_LOADING","START_VOTE_SHOW_LOADING","STOP_VOTE_SHOW_LOADING","TOAST","REQUEST_TO_SHOW_TOAST","SHOW_TOAST","HIDE_TOAST","REGISTER","CHECK_USERNAME","REGISTER_USER","LOGIN","SUBMIT_FOR_LOGIN","RESET_LOGIN_STATE","USER","UPDATE_USER_DATA","SET_USERNAME_STATUS","RESET_USER_DATA","STATIC","GET_ALL_STATICS","UPDATE_TYPE_DATA","UPDATE_LANGUAGE_DATA","UPDATE_GENRE_DATA","ADD_FILTER","REMOVE_FILTER","RESET_FILTERS","SHOWS","GET_ALL_SHOWS","ADD_SHOW","APPEND_SHOWS","UPDATE_SHOWS","RESET_VOTES","UPVOTE_SHOW","DOWNVOTE_SHOW","initialState","isGetStaticsLoading","isGetAllShowsLoading","isCheckUsernameLoading","isRegisterSubmitLoading","isLoginSubmitLoading","isAddShowSubmitLoading","loadingReducer","state","action","type","shows","staticReducer","currentShows","newShows","payload","newShowIds","Set","map","show","_id","mergedShows","filter","has","haveUpvoted","haveDownvoted","USERNAME","USERNAME_TYPING","URL","IS_LOGGED_IN","EXPIRE_AT","ID","TOKEN","BASE_URL","process","REGISTER_URL","LOGIN_URL","GET_STATICS","ADD_SHOWS","MESSAGE_VARIANTS","SUCCESS","WARNING","INFO","ERROR","APPLICATION_ERROR_STATUS_CODES","INTERNAL_SERVER_ERROR","UNAUTHORIZED","FORBIDDEN","MISSING_PARAMS","NOT_FOUND","NOT_ALLOWED","FILTER_TYPES","TYPE","LANGUAGE","GENRE","formatData","schema","Entity","idAttribute","processStrategy","value","isChecked","normalizeData","data","normalize","mergeData","currentData","newData","newDataIds","Object","keys","id","updateUserLoginInfo","userInfo","decodedToken","decode","token","expiryEpoch","exp","localStorage","setItem","username","updateUserInfo","checkIfUserIsLoggedIn","isLoggedIn","getItem","expireAt","Date","logoutUser","removeItem","types","languages","genres","appliedFilters","user_id","q","staticSchema","utils","entities","formattedData","filterObj","language","genre","newFilterData","find","console","log","typeId","languageId","genreId","message","variant","toastReducer","notLoggedInState","isValidUsername","userReducer","status","rootReducer","combineReducers","router","connectRouter","toast","loading","static","user","showsReducer","startGetStaticsLoading","stopGetStaticsLoading","startGetAllShowsLoading","stopGetAllShowsLoading","startCheckUsernameLoading","stopCheckUsernameLoading","startRegisterLoading","stopRegisterLoading","startLoginLoading","stopLoginLoading","startAddShowLoading","stopAddShowLoading","startVoteShowLoading","stopVoteShowLoading","submitForLogin","password","resetLoginState","checkUsername","registerUser","getAllShows","addShow","appendShows","updateShows","resetVotes","upvoteShow","showId","isUpvote","downvoteShow","isDownvote","getAllStatics","updateTypeData","updateLanguageData","updateGenreData","addFilter","removeFilter","resetFilter","requestToShowToast","showToast","hideToast","updateUserData","setUsernameStatus","resetUserData","handleError","axios","interceptors","response","use","error","store","dispatch","toastAction","Promise","reject","loginSubmitWorker","loginSubmitWatcher","loginSaga","requestURL","urls","body","headers","post","put","loadingAction","userAction","showsAction","userId","takeLatest","actions","all","checkUsernameWorker","registerSubmitWorker","checkUsernameWatcher","registerSubmitWatcher","registerSaga","replace","get","success","debounce","selectLoadingState","getStaticsLoadingState","createSelector","loadingState","getAllShowsLoadingState","getRegisterLoadingState","getLoginLoadingState","getCheckUsernameLoadingState","getAddShowSubmitLoadingState","selectShowsState","showState","sort","showA","showB","created_at","selectTypes","selectLanguages","selectGenres","selectFilter","selectAppliedFilters","getAllTypes","allTypeIds","newTypes","getAllLanguages","allLanguageIds","newLanguages","getAllGenres","allGenreIds","newGenres","getFilters","filterState","getAppliedFilters","appliedFilterState","selectToastState","getToastState","toastState","getToastMessage","getToastVariant","selectUserState","isUserLoggedIn","userState","getAuthToken","getCurrentUserId","getCurrentUsername","getAllShowsWorker","addShowWorker","upvoteShowWorker","downvoteShowWorker","getAllShowsWatcher","addShowWatcher","upvoteShowWatcher","downvoteShowWatcher","showsSaga","select","userSelector","authToken","staticSelector","filters","Authorization","params","length","join","isFilterApiCall","takeEvery","getAllStaticsWorker","getAllStaticsWatcher","staticSaga","staticAction","showToastWorker","showToastWatcher","toastSaga","toastSelector","toastVariant","toastMessage","delay","rootSaga","fork","checkTokenExpiration","next","tokenExpireAt","storage","sagaMiddleWare","createSagaMiddleware","composeEnhancers","compose","enhancers","applyMiddleware","routerMiddleware","createStore","run","CustomTheme","createMuiTheme","typography","fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","palette","primary","light","main","dark","secondary","style","filterArea","paddingTop","paddingBottom","expansionPanelHeading","borderBottom","expansionPanelBody","padding","filterListArea","width","maxHeight","overflow","ListFilters","props","title","values","expanded","handleExpansion","handleOnCheckBoxClick","classes","makeStyles","Grid","className","item","xs","ExpansionPanel","square","ExpansionPanelSummary","clsx","expandIcon","onClick","Typography","ExpansionPanelDetails","List","ListItem","key","role","undefined","dense","button","ListItemIcon","Checkbox","edge","checked","tabIndex","disableRipple","ListItemText","name","theme","margin","spacing","filterChipsArea","marginTop","marginBottom","backgroundColor","chips","divider","FilterArea","React","useState","typeExpanded","setTypeExpansion","languageExpanded","setLanguageExpansion","genreExpanded","setGenreExpansion","currentValue","applyFilter","handleCloseFilterArea","filterChipComponent","Chip","color","label","onDelete","container","justify","Button","fullWidth","disabled","Paper","elevation","Hidden","smDown","md","mdUp","Divider","SlideTransition","forwardRef","ref","Slide","direction","FilterAreaMobile","openFilterArea","setFilterAreaState","size","startIcon","Dialog","open","keepMounted","TransitionComponent","fullScreen","maxWidth","onClose","AppBar","position","Toolbar","IconButton","FilterAreaWeb","Card","CardContent","Loading","alignItems","height","descriptionArea","paddingRight","breakpoints","down","titleArea","fontWeight","watchButton","paddingLeft","metadataArea","tabArea","languageIcon","languageText","marginLeft","typeIcon","typeText","genreIcon","genreTab","MovieDescriptionCard","useTheme","isMobileView","useMediaQuery","url","genreComponent","index","endIcon","disableElevation","window","sm","display","element","icons","text","upvoted","downvoted","vote","marginRight","voteExpanded","voteExpandedDivider","marginBotton","VoteArea","setLoginPopupState","onUpvoteShow","onDownvoteShow","upvotes","downvotes","votes","expandedView","setExpandedView","shortView","setShortView","expandedVoteArea","Grow","in","timeout","disableTouchRipple","disableFocusRipple","setTimeout","cardArea","dividerArea","MovieDescription","orientation","flexItem","addShowElement","multipleSelect","border","borderRadius","multipleSelectError","multipleSelectLabel","background","flexWrap","chip","lastElement","AddShow","onAddShowSubmit","setNameValue","setUrlValue","urlError","setUrlError","setTypeValue","setLanguageValue","genreIds","setGenresValue","genreError","setGenreError","handleAddShowSubmit","event","preventDefault","alignContent","onSubmit","TextField","placeholder","onChange","target","InputLabelProps","shrink","autoFocus","onBlur","regex","test","trim","helperText","FormControl","InputLabel","Select","labelId","labelWidth","MenuItem","input","Input","renderValue","selected","multiple","indexOf","FormHelperText","CircularProgress","ElevationScroll","children","trigger","useScrollTrigger","disableHysteresis","threshold","cloneElement","boxShadow","loginElement","Login","handleOpenRegisterPopup","handleCloseLoginPopup","onLoginSubmit","isSubmitLoginLoading","setUsernameValue","usernameError","setUsernameError","setPasswordValue","passwordVisible","setPasswordVisibility","handleLoginSubmit","InputProps","endAdornment","InputAdornment","aria-label","autoComplete","Link","href","registerElement","Register","handleOpenLoginPopup","handleCloseRegisterPopup","checkForUsername","isSubmitRegisterLoading","onRegisterSubmit","useEffect","handleRegisterSubmit","search","shape","fade","up","searchIcon","pointerEvents","justifyContent","inputRoot","inputInput","transition","transitions","create","Search","InputBase","root","inputProps","navbar","logo","cursor","Navbar","redirectToPage","loginPopupState","registerPopupState","setRegisterPopupState","addShowPopupState","setAddShowPopupState","handleOpenAddShowPopup","handleCloseAddShowPopup","src","alt","DialogContent","IndexPage","popupState","setState","handleOnDeleteValue","this","Component","mapStateToProps","createStructuredSelector","loadingSelector","showsSelector","connect","push","registerAction","loginAction","green","red","info","blue","warning","amber","icon","iconVariant","opacity","Toast","ToastIcon","CheckCircleIcon","WarningIcon","ErrorIcon","InfoIcon","toastIcon","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","transitionDuration","SnackbarContent","withStyles","NotFoundPage","lazy","App","reduxStore","Helmet","titleTemplate","defaultTitle","content","ThemeProvider","fallback","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.0aa12a58.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport default history;\n","// ------------------ LOADING ACTIONS ------------------ //\nexport const LOADING = {\n  START_GET_STATICS_LOADING: 'bwg/Loading/START_GET_STATICS_LOADING',\n  STOP_GET_STATICS_LOADING: 'bwg/Loading/STOP_GET_STATICS_LOADING',\n  START_GET_ALL_SHOWS_LOADING: 'bwg/Loading/START_GET_ALL_SHOWS_LOADING',\n  STOP_GET_ALL_SHOWS_LOADING: 'bwg/Loading/STOP_GET_ALL_SHOWS_LOADING',\n  START_CHECK_USERNAME_LOADING: 'bwg/Loading/START_CHECK_USERNAME_LOADING',\n  STOP_CHECK_USERNAME_LOADING: 'bwg/Loading/STOP_CHECK_USERNAME_LOADING',\n  START_REGISTER_LOADING: 'bwg/Loading/START_REGISTER_LOADING',\n  STOP_REGISTER_LOADING: 'bwg/Loading/STOP_REGISTER_LOADING',\n  START_LOGIN_LOADING: 'bwg/Loading/START_LOGIN_LOADING',\n  STOP_LOGIN_LOADING: 'bwg/Loading/STOP_LOGIN_LOADING',\n  START_ADD_SHOW_LOADING: 'bwg/Loading/START_ADD_SHOW_LOADING',\n  STOP_ADD_SHOW_LOADING: 'bwg/Loading/STOP_ADD_SHOW_LOADING',\n  START_VOTE_SHOW_LOADING: 'bwg/Loading/START_VOTE_SHOW_LOADING',\n  STOP_VOTE_SHOW_LOADING: 'bwg/Loading/STOP_VOTE_SHOW_LOADING',\n};\n\n// ------------------ TOAST ACTIONS ------------------ //\nexport const TOAST = {\n  REQUEST_TO_SHOW_TOAST: 'bwg/Toast/REQUEST_TO_SHOW_TOAST',\n  SHOW_TOAST: 'bwg/Toast/SHOW_TOAST',\n  HIDE_TOAST: 'bwg/Toast/HIDE_TOAST',\n};\n\n// ------------------ REGISTER ACTIONS ------------------ //\nexport const REGISTER = {\n  CHECK_USERNAME: 'bwg/Register/CHECK_USERNAME',\n  REGISTER_USER: 'bwg/Register/REGISTER_USER',\n};\n\n// ------------------ LOGIN ACTIONS ------------------ //\nexport const LOGIN = {\n  SUBMIT_FOR_LOGIN: 'bwg/Login/SUBMIT_FOR_LOGIN',\n  RESET_LOGIN_STATE: 'bwg/Login/RESET_LOGIN_STATE',\n};\n\n// ------------------ USER ACTIONS ------------------ //\nexport const USER = {\n  UPDATE_USER_DATA: 'bwg/User/UPDATE_USER_DATA',\n  SET_USERNAME_STATUS: 'bwg/User/SET_USERNAME_STATUS',\n  RESET_USER_DATA: 'bwg/User/RESET_USER_DATA',\n};\n\n// ------------------ STATIC ACTIONS ------------------ //\nexport const STATIC = {\n  GET_ALL_STATICS: 'bwg/Static/GET_ALL_STATICS',\n  UPDATE_TYPE_DATA: 'bwg/Static/UPDATE_TYPE_DATA',\n  UPDATE_LANGUAGE_DATA: 'bwg/Static/UPDATE_LANGUAGE_DATA',\n  UPDATE_GENRE_DATA: 'bwg/Static/UPDATE_GENRE_DATA',\n  ADD_FILTER: 'bwg/Static/ADD_FILTER',\n  REMOVE_FILTER: 'bwg/Static/REMOVE_FILTER',\n  RESET_FILTERS: 'bwg/Static/RESET_FILTERS',\n};\n\n// ------------------ SHOWS ACTIONS ------------------ //\nexport const SHOWS = {\n  GET_ALL_SHOWS: 'bwg/Shows/GET_ALL_SHOWS',\n  ADD_SHOW: 'bwg/Shows/ADD_SHOW',\n  APPEND_SHOWS: 'bwg/Shows/APPEND_SHOWS',\n  UPDATE_SHOWS: 'bwg/Shows/UPDATE_SHOWS',\n  RESET_VOTES: 'bwg/Shows/RESET_VOTES',\n  UPVOTE_SHOW: 'bwg/Shows/UPVOTE_SHOW',\n  DOWNVOTE_SHOW: 'bwg/Shows/DOWNVOTE_SHOW',\n};\n","import { LOADING } from '../constants/actions';\n\nconst initialState = {\n  isGetStaticsLoading: false,\n  isGetAllShowsLoading: false,\n  isCheckUsernameLoading: false,\n  isRegisterSubmitLoading: false,\n  isLoginSubmitLoading: false,\n  isAddShowSubmitLoading: false,\n};\n\nexport default function loadingReducer(state = initialState, action) {\n  switch (action.type) {\n    case LOADING.START_GET_STATICS_LOADING:\n      return {\n        ...state,\n        isGetStaticsLoading: true,\n      };\n\n    case LOADING.STOP_GET_STATICS_LOADING:\n      return {\n        ...state,\n        isGetStaticsLoading: false,\n      };\n\n    case LOADING.START_GET_ALL_SHOWS_LOADING:\n      return {\n        ...state,\n        isGetAllShowsLoading: true,\n      };\n\n    case LOADING.STOP_GET_ALL_SHOWS_LOADING:\n      return {\n        ...state,\n        isGetAllShowsLoading: false,\n      };\n\n    case LOADING.START_CHECK_USERNAME_LOADING:\n      return {\n        ...state,\n        isCheckUsernameLoading: true,\n      };\n\n    case LOADING.STOP_CHECK_USERNAME_LOADING:\n      return {\n        ...state,\n        isCheckUsernameLoading: false,\n      };\n\n    case LOADING.START_REGISTER_LOADING:\n      return {\n        ...state,\n        isRegisterSubmitLoading: true,\n      };\n\n    case LOADING.STOP_REGISTER_LOADING:\n      return {\n        ...state,\n        isRegisterSubmitLoading: false,\n      };\n\n    case LOADING.START_LOGIN_LOADING:\n      return {\n        ...state,\n        isLoginSubmitLoading: true,\n      };\n\n    case LOADING.STOP_LOGIN_LOADING:\n      return {\n        ...state,\n        isLoginSubmitLoading: false,\n      };\n\n    case LOADING.START_ADD_SHOW_LOADING:\n      return {\n        ...state,\n        isAddShowSubmitLoading: true,\n      };\n\n    case LOADING.STOP_ADD_SHOW_LOADING:\n      return {\n        ...state,\n        isAddShowSubmitLoading: false,\n      };\n\n    default:\n      return { ...state };\n  }\n}\n","import { SHOWS } from '../constants/actions';\n\nconst initialState = {\n  shows: [],\n};\n\nexport default function staticReducer(state = initialState, action) {\n  switch (action.type) {\n    case SHOWS.APPEND_SHOWS: {\n      const currentShows = state.shows;\n      const newShows = action.payload.shows;\n      const newShowIds = new Set(newShows.map(show => show._id));\n      const mergedShows = [\n        ...newShows,\n        ...currentShows.filter(show => !newShowIds.has(show._id)),\n      ];\n\n      return {\n        ...state,\n        shows: [...mergedShows],\n      };\n    }\n\n    case SHOWS.UPDATE_SHOWS:\n      return {\n        ...state,\n        shows: [...action.payload.shows],\n      };\n\n    case SHOWS.RESET_VOTES: {\n      const currentShows = [...state.shows].map(show => ({\n        ...show,\n        haveUpvoted: false,\n        haveDownvoted: false,\n      }));\n\n      return {\n        ...state,\n        shows: currentShows,\n      };\n    }\n\n    default:\n      return { ...state };\n  }\n}\n","export const USERNAME = /^[a-z][a-z'-_.]{2,}$/i;\nexport const USERNAME_TYPING = /^[a-z][a-z'-_.]*$/i;\n\nexport const URL = /((?:https?:\\/\\/)[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,24}\\b(?:[-a-zA-Z0-9()@:%_+.~#?&/=]*)?)/gi;\n","export const USER = {\n  IS_LOGGED_IN: 'U_i_l_i',\n  EXPIRE_AT: 'U_w_e_b',\n  ID: 'U_i',\n  TOKEN: 'U_p_k',\n  USERNAME: 'U_n',\n};\n","const BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nexport const CHECK_USERNAME = `${BASE_URL}/users/username/<USER_NAME>`;\nexport const REGISTER_URL = `${BASE_URL}/users`;\nexport const LOGIN_URL = `${BASE_URL}/users/auth`;\n\nexport const GET_STATICS = `${BASE_URL}/shows/statics`;\n\nexport const GET_ALL_SHOWS = `${BASE_URL}/shows`;\nexport const ADD_SHOWS = `${BASE_URL}/users/<USER_ID>/shows`;\n\nexport const UPVOTE_SHOW = `${BASE_URL}/users/<USER_ID>/shows/<SHOW_ID>/upvote`;\nexport const DOWNVOTE_SHOW = `${BASE_URL}/users/<USER_ID>/shows/<SHOW_ID>/downvote`;\n","export const MESSAGE_VARIANTS = {\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  INFO: 'info',\n  ERROR: 'error',\n};\n\nexport const APPLICATION_ERROR_STATUS_CODES = {\n  INTERNAL_SERVER_ERROR: 500,\n  UNAUTHORIZED: 401,\n  FORBIDDEN: 403,\n  MISSING_PARAMS: 422,\n  NOT_FOUND: 404,\n  NOT_ALLOWED: 409,\n};\n\nexport const FILTER_TYPES = {\n  TYPE: 'TYPE',\n  LANGUAGE: 'LANGUAGE',\n  GENRE: 'GENRE',\n};\n","import { normalize, schema } from 'normalizr';\n\nexport const formatData = type =>\n  new schema.Entity(\n    'formattedData',\n    {},\n    {\n      idAttribute: '_id',\n      processStrategy: value => {\n        return {\n          ...value,\n          type,\n          isChecked: false,\n        };\n      },\n    }\n  );\n\nexport const normalizeData = (type, data) =>\n  normalize(data, [formatData(type)]);\n\nexport const mergeData = (currentData, newData = {}) => {\n  const newDataIds = Object.keys(newData);\n  for (let id of newDataIds) {\n    if (currentData[id]) {\n      newData[id] = {\n        ...currentData[id],\n        ...newData[id],\n      };\n    }\n  }\n  return { ...currentData, ...newData };\n};\n","import { decode } from 'jsonwebtoken';\n\nimport { USER } from '../constants/storage';\n\nexport const updateUserInfo = userInfo => {\n  userInfo._id && localStorage.setItem(USER.ID, userInfo._id);\n  userInfo.token && localStorage.setItem(USER.TOKEN, userInfo.token);\n  userInfo.username && localStorage.setItem(USER.USERNAME, userInfo.username);\n};\n\nexport const updateUserLoginInfo = userInfo => {\n  const decodedToken = decode(userInfo.token);\n  const expiryEpoch = decodedToken && decodedToken.exp * 1000;\n\n  localStorage.setItem(USER.IS_LOGGED_IN, 1);\n  localStorage.setItem(USER.EXPIRE_AT, expiryEpoch);\n  updateUserInfo(userInfo);\n};\n\nexport const checkIfUserIsLoggedIn = () => {\n  const isLoggedIn = +localStorage.getItem(USER.IS_LOGGED_IN);\n  const expireAt = +localStorage.getItem(USER.EXPIRE_AT);\n\n  if (expireAt && isLoggedIn === 1 && new Date(expireAt) > new Date()) {\n    const userInfo = {};\n    userInfo.isLoggedIn = true;\n    userInfo.expireAt = +localStorage.getItem(USER.EXPIRE_AT);\n    userInfo._id = localStorage.getItem(USER.ID);\n    userInfo.token = localStorage.getItem(USER.TOKEN);\n    userInfo.username = localStorage.getItem(USER.USERNAME);\n\n    return { isLoggedIn: true, userInfo };\n  }\n\n  return { isLoggedIn: false, userInfo: null };\n};\n\nexport const removeUserInfo = () => {\n  localStorage.removeItem(USER.IS_LOGGED_IN);\n  localStorage.removeItem(USER.EXPIRE_AT);\n  localStorage.removeItem(USER.ID);\n  localStorage.removeItem(USER.TOKEN);\n  localStorage.removeItem(USER.USERNAME);\n};\n\nexport const logoutUser = () => {\n  removeUserInfo();\n};\n","import { STATIC } from '../constants/actions';\n\nimport { utils } from '../constants';\nimport { staticSchema } from '../schemas';\n\nimport { checkIfUserIsLoggedIn } from '../utils/users';\nconst { isLoggedIn, userInfo } = checkIfUserIsLoggedIn();\n\nconst initialState = {\n  types: {},\n  languages: {},\n  genres: {},\n  appliedFilters: [],\n  filter: {\n    user_id: isLoggedIn ? userInfo._id : null,\n    types: [],\n    languages: [],\n    genres: [],\n    q: null,\n  },\n};\n\nexport default function staticReducer(state = initialState, action) {\n  switch (action.type) {\n    case STATIC.UPDATE_TYPE_DATA: {\n      const { entities } = staticSchema.normalizeData(\n        utils.FILTER_TYPES.TYPE,\n        action.payload.types\n      );\n\n      const { formattedData } = entities;\n\n      return {\n        ...state,\n        types: { ...formattedData },\n      };\n    }\n\n    case STATIC.UPDATE_LANGUAGE_DATA: {\n      const { entities } = staticSchema.normalizeData(\n        utils.FILTER_TYPES.LANGUAGE,\n        action.payload.languages\n      );\n\n      const { formattedData } = entities;\n\n      return {\n        ...state,\n        languages: { ...formattedData },\n      };\n    }\n\n    case STATIC.UPDATE_GENRE_DATA: {\n      const { entities } = staticSchema.normalizeData(\n        utils.FILTER_TYPES.GENRE,\n        action.payload.genres\n      );\n\n      const { formattedData } = entities;\n\n      return {\n        ...state,\n        genres: { ...formattedData },\n      };\n    }\n\n    case STATIC.ADD_FILTER: {\n      const filterObj = action.payload.type\n        ? state.types[action.payload.type]\n        : action.payload.language\n        ? state.languages[action.payload.language]\n        : action.payload.genre\n        ? state.genres[action.payload.genre]\n        : null;\n\n      const newFilterData =\n        !filterObj ||\n        state.appliedFilters.find(\n          data => data._id === filterObj._id && data.type === filterObj.type\n        )\n          ? [...state.appliedFilters]\n          : [...state.appliedFilters, filterObj];\n\n      console.log('ADD HAS BEEN CALLED, ', filterObj, '---', newFilterData);\n\n      return {\n        ...state,\n        appliedFilters: newFilterData,\n        filter: {\n          ...state.filter,\n          types: action.payload.type\n            ? [...new Set([...state.filter.types, action.payload.type])]\n            : [...state.filter.types],\n          languages: action.payload.language\n            ? [...new Set([...state.filter.languages, action.payload.language])]\n            : [...state.filter.languages],\n          genres: action.payload.genre\n            ? [...new Set([...state.filter.genres, action.payload.genre])]\n            : [...state.filter.genres],\n          q: action.payload.q,\n        },\n      };\n    }\n\n    case STATIC.REMOVE_FILTER: {\n      const filterObj = action.payload.type\n        ? state.types[action.payload.type]\n        : action.payload.language\n        ? state.languages[action.payload.language]\n        : action.payload.genre\n        ? state.genres[action.payload.genre]\n        : null;\n\n      console.log('REMOVE HAS BEEN CALLED', filterObj);\n\n      const newFilterData = state.appliedFilters.filter(\n        data => data._id !== filterObj._id || data.type !== filterObj.type\n      );\n\n      return {\n        ...state,\n        appliedFilters: newFilterData,\n        filter: {\n          ...state.filter,\n          types: action.payload.type\n            ? [...state.filter.types.filter(typeId => typeId !== filterObj._id)]\n            : [...state.filter.types],\n          languages: action.payload.language\n            ? [\n                ...state.filter.languages.filter(\n                  languageId => languageId !== filterObj._id\n                ),\n              ]\n            : [...state.filter.languages],\n          genres: action.payload.genre\n            ? [\n                ...state.filter.genres.filter(\n                  genreId => genreId !== filterObj._id\n                ),\n              ]\n            : [...state.filter.genres],\n          q: action.payload.q || state.filter.q,\n        },\n      };\n    }\n\n    case STATIC.RESET_FILTERS: {\n      return {\n        ...state,\n        appliedFilters: [],\n        filter: {\n          ...state.filter,\n          user_id: isLoggedIn ? userInfo._id : null,\n          types: [],\n          languages: [],\n          genres: [],\n          q: null,\n        },\n      };\n    }\n\n    default:\n      return { ...state };\n  }\n}\n","import { TOAST } from '../constants/actions';\n\nconst initialState = {\n  show: false,\n  message: null,\n  variant: null,\n};\n\nexport default function toastReducer(state = initialState, action) {\n  switch (action.type) {\n    case TOAST.REQUEST_TO_SHOW_TOAST:\n      return {\n        ...state,\n        message: action.payload.message,\n        variant: action.payload.variant,\n      };\n\n    case TOAST.SHOW_TOAST:\n      return {\n        ...state,\n        show: true,\n        message: action.payload.message,\n        variant: action.payload.variant,\n      };\n\n    case TOAST.HIDE_TOAST:\n      return {\n        ...state,\n        show: false,\n        message: null,\n        variant: null,\n      };\n\n    default:\n      return { ...state };\n  }\n}\n","import { USER } from '../constants/actions';\nimport { checkIfUserIsLoggedIn } from '../utils/users';\n\nconst { isLoggedIn, userInfo } = checkIfUserIsLoggedIn();\n\nconst notLoggedInState = {\n  isLoggedIn: false,\n  _id: null,\n  username: null,\n  token: null,\n  isValidUsername: true,\n};\n\nconst initialState = isLoggedIn ? userInfo : notLoggedInState;\n\nexport default function userReducer(state = initialState, action) {\n  switch (action.type) {\n    case USER.UPDATE_USER_DATA:\n      return {\n        ...state,\n        isLoggedIn: true,\n        _id: action.payload.userInfo._id,\n        username: action.payload.userInfo.username,\n        token: action.payload.userInfo.token,\n      };\n\n    case USER.SET_USERNAME_STATUS:\n      return {\n        ...state,\n        isValidUsername: action.payload.status,\n      };\n\n    case USER.RESET_USER_DATA:\n      return {\n        ...notLoggedInState,\n      };\n\n    default:\n      return { ...state };\n  }\n}\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\n\nimport loadingReducer from './loading.reducer';\nimport showsReducer from './shows.reducer';\nimport staticReducer from './static.reducer';\nimport toastReducer from './toast.reducer';\nimport userReducer from './user.reducer';\n\nconst rootReducer = history =>\n  combineReducers({\n    router: connectRouter(history),\n    toast: toastReducer,\n    loading: loadingReducer,\n    static: staticReducer,\n    user: userReducer,\n    shows: showsReducer,\n  });\n\nexport default rootReducer;\n","import { LOADING } from '../constants/actions';\n\nexport function startGetStaticsLoading() {\n  return { type: LOADING.START_GET_STATICS_LOADING };\n}\n\nexport function stopGetStaticsLoading() {\n  return { type: LOADING.STOP_GET_STATICS_LOADING };\n}\n\nexport function startGetAllShowsLoading() {\n  return { type: LOADING.START_GET_ALL_SHOWS_LOADING };\n}\n\nexport function stopGetAllShowsLoading() {\n  return { type: LOADING.STOP_GET_ALL_SHOWS_LOADING };\n}\n\nexport function startCheckUsernameLoading() {\n  return { type: LOADING.START_CHECK_USERNAME_LOADING };\n}\n\nexport function stopCheckUsernameLoading() {\n  return { type: LOADING.STOP_CHECK_USERNAME_LOADING };\n}\n\nexport function startRegisterLoading() {\n  return { type: LOADING.START_REGISTER_LOADING };\n}\n\nexport function stopRegisterLoading() {\n  return { type: LOADING.STOP_REGISTER_LOADING };\n}\n\nexport function startLoginLoading() {\n  return { type: LOADING.START_LOGIN_LOADING };\n}\n\nexport function stopLoginLoading() {\n  return { type: LOADING.STOP_LOGIN_LOADING };\n}\n\nexport function startAddShowLoading() {\n  return { type: LOADING.START_ADD_SHOW_LOADING };\n}\n\nexport function stopAddShowLoading() {\n  return { type: LOADING.STOP_ADD_SHOW_LOADING };\n}\n\nexport function startVoteShowLoading() {\n  return { type: LOADING.START_VOTE_SHOW_LOADING };\n}\n\nexport function stopVoteShowLoading() {\n  return { type: LOADING.STOP_VOTE_SHOW_LOADING };\n}\n","import { LOGIN } from '../constants/actions';\n\nexport function submitForLogin(username, password) {\n  return { type: LOGIN.SUBMIT_FOR_LOGIN, payload: { username, password } };\n}\n\nexport function resetLoginState() {\n  return { type: LOGIN.RESET_LOGIN_STATE };\n}\n","import { REGISTER } from '../constants/actions';\n\nexport function checkUsername(username) {\n  return { type: REGISTER.CHECK_USERNAME, payload: { username } };\n}\n\nexport function registerUser(username, password) {\n  return { type: REGISTER.REGISTER_USER, payload: { username, password } };\n}\n","import { SHOWS } from '../constants/actions';\n\nexport function getAllShows() {\n  return {\n    type: SHOWS.GET_ALL_SHOWS,\n  };\n}\n\nexport function addShow(show) {\n  return { type: SHOWS.ADD_SHOW, payload: { show } };\n}\n\nexport function appendShows(shows) {\n  return { type: SHOWS.APPEND_SHOWS, payload: { shows } };\n}\n\nexport function updateShows(shows) {\n  return { type: SHOWS.UPDATE_SHOWS, payload: { shows } };\n}\n\nexport function resetVotes() {\n  return { type: SHOWS.RESET_VOTES };\n}\n\nexport function upvoteShow(showId, isUpvote) {\n  return { type: SHOWS.UPVOTE_SHOW, payload: { showId, isUpvote } };\n}\n\nexport function downvoteShow(showId, isDownvote) {\n  return { type: SHOWS.DOWNVOTE_SHOW, payload: { showId, isDownvote } };\n}\n","import { STATIC } from '../constants/actions';\n\nexport function getAllStatics() {\n  return { type: STATIC.GET_ALL_STATICS };\n}\n\nexport function updateTypeData(types) {\n  return { type: STATIC.UPDATE_TYPE_DATA, payload: { types } };\n}\n\nexport function updateLanguageData(languages) {\n  return { type: STATIC.UPDATE_LANGUAGE_DATA, payload: { languages } };\n}\n\nexport function updateGenreData(genres) {\n  return { type: STATIC.UPDATE_GENRE_DATA, payload: { genres } };\n}\n\nexport function addFilter({\n  type = null,\n  language = null,\n  genre = null,\n  q = null,\n} = {}) {\n  return {\n    type: STATIC.ADD_FILTER,\n    payload: { type, language, genre, q },\n  };\n}\n\nexport function removeFilter({\n  type = null,\n  language = null,\n  genre = null,\n} = {}) {\n  return {\n    type: STATIC.REMOVE_FILTER,\n    payload: { type, language, genre },\n  };\n}\n\nexport function resetFilter() {\n  return {\n    type: STATIC.RESET_FILTERS,\n  };\n}\n","import { TOAST } from '../constants/actions';\n\nexport function requestToShowToast(variant, message) {\n  return { type: TOAST.REQUEST_TO_SHOW_TOAST, payload: { variant, message } };\n}\n\nexport function showToast(variant, message) {\n  return { type: TOAST.SHOW_TOAST, payload: { variant, message } };\n}\n\nexport function hideToast() {\n  return { type: TOAST.HIDE_TOAST };\n}\n","import { USER } from '../constants/actions';\n\nexport function updateUserData(userInfo) {\n  return { type: USER.UPDATE_USER_DATA, payload: { userInfo } };\n}\n\nexport function setUsernameStatus(status) {\n  return { type: USER.SET_USERNAME_STATUS, payload: { status } };\n}\n\nexport function resetUserData() {\n  return { type: USER.RESET_USER_DATA };\n}\n","import { toastAction } from '../actions';\nimport { utils } from '../constants';\n\nimport store from './store';\n\nconst handleError = axios => {\n  axios.interceptors.response.use(\n    response => response,\n    error => {\n      const { status, data } = error.response;\n      if (\n        status === utils.APPLICATION_ERROR_STATUS_CODES.UNAUTHORIZED ||\n        status === utils.APPLICATION_ERROR_STATUS_CODES.NOT_ALLOWED\n      ) {\n        const { message } = data;\n        store.dispatch(\n          toastAction.requestToShowToast(\n            utils.MESSAGE_VARIANTS.WARNING,\n            message\n          )\n        );\n      } else if (status === utils.APPLICATION_ERROR_STATUS_CODES.FORBIDDEN) {\n        store.dispatch(\n          toastAction.requestToShowToast(\n            utils.MESSAGE_VARIANTS.WARNING,\n            'You are not allowed to access this.'\n          )\n        );\n      } else if (\n        status === utils.APPLICATION_ERROR_STATUS_CODES.MISSING_PARAMS ||\n        status === utils.APPLICATION_ERROR_STATUS_CODES.NOT_FOUND\n      ) {\n        store.dispatch(\n          toastAction.requestToShowToast(\n            utils.MESSAGE_VARIANTS.WARNING,\n            'The request you sent looks incomplete. Please check and try again.'\n          )\n        );\n      } else if (\n        status === utils.APPLICATION_ERROR_STATUS_CODES.INTERNAL_SERVER_ERROR\n      ) {\n        store.dispatch(\n          toastAction.requestToShowToast(\n            utils.MESSAGE_VARIANTS.ERROR,\n            'Some issue occured with the server. Please try again in sometime.'\n          )\n        );\n      }\n      return Promise.reject(error);\n    }\n  );\n};\n\nexport default handleError;\n","import axios from 'axios';\nimport { all, put, takeLatest } from '@redux-saga/core/effects';\n\nimport {\n  loadingAction,\n  showsAction,\n  toastAction,\n  userAction,\n} from '../actions';\n\nimport { actions, urls, utils } from '../constants';\n\nimport handleError from '../utils/errorHandler';\nimport { updateUserLoginInfo } from '../utils/users';\n\n/* -----------------------------------------\n *                 WORKERS\n * -----------------------------------------\n */\n\nfunction* loginSubmitWorker({ payload }) {\n  try {\n    handleError(axios);\n    const requestURL = urls.LOGIN_URL;\n\n    const body = payload;\n\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n\n    const response = yield axios.post(requestURL, body, { headers });\n\n    yield put(loadingAction.stopLoginLoading());\n\n    if (response && response.status === 200) {\n      const { data } = response;\n\n      const { message } = data;\n      const { user } = data.data;\n      updateUserLoginInfo(user);\n\n      yield put(\n        toastAction.requestToShowToast(utils.MESSAGE_VARIANTS.SUCCESS, message)\n      );\n\n      yield put(userAction.updateUserData(user));\n      yield put(showsAction.getAllShows({ userId: user._id }));\n    }\n  } catch (error) {\n    yield put(loadingAction.stopLoginLoading());\n  }\n}\n\n/* -----------------------------------------\n *                 WATCHERS\n * -----------------------------------------\n */\n\nfunction* loginSubmitWatcher() {\n  yield takeLatest(actions.LOGIN.SUBMIT_FOR_LOGIN, loginSubmitWorker);\n}\n\nexport default function* loginSaga() {\n  yield all([loginSubmitWatcher()]);\n}\n","import axios from 'axios';\nimport { all, debounce, put, takeLatest } from '@redux-saga/core/effects';\n\nimport {\n  loadingAction,\n  showsAction,\n  toastAction,\n  userAction,\n} from '../actions';\n\nimport { actions, urls, utils } from '../constants';\n\nimport handleError from '../utils/errorHandler';\nimport { updateUserLoginInfo } from '../utils/users';\n\n/* -----------------------------------------\n *                 WORKERS\n * -----------------------------------------\n */\n\nfunction* checkUsernameWorker({ payload }) {\n  try {\n    handleError(axios);\n\n    const { username } = payload;\n\n    const requestURL = urls.CHECK_USERNAME.replace(/<USER_NAME>/, username);\n\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n\n    const response = yield axios.get(requestURL, { headers });\n\n    yield put(loadingAction.stopCheckUsernameLoading());\n\n    if (response && response.status === 200) {\n      const { data } = response;\n      const { success } = data;\n      yield put(userAction.setUsernameStatus(success));\n    }\n  } catch (error) {\n    yield put(loadingAction.stopCheckUsernameLoading());\n  }\n}\n\nfunction* registerSubmitWorker({ payload }) {\n  try {\n    handleError(axios);\n    const requestURL = urls.REGISTER_URL;\n\n    const body = payload;\n\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n\n    const response = yield axios.post(requestURL, body, { headers });\n\n    yield put(loadingAction.stopRegisterLoading());\n\n    if (response && response.status === 201) {\n      const { data } = response;\n      const { message } = data;\n      const { user } = data.data;\n\n      updateUserLoginInfo(user);\n\n      yield put(\n        toastAction.requestToShowToast(utils.MESSAGE_VARIANTS.SUCCESS, message)\n      );\n\n      yield put(userAction.updateUserData(user));\n      yield put(showsAction.getAllShows({ userId: user._id }));\n    }\n  } catch (error) {\n    yield put(loadingAction.stopRegisterLoading());\n  }\n}\n\n/* -----------------------------------------\n *                 WATCHERS\n * -----------------------------------------\n */\n\nfunction* checkUsernameWatcher() {\n  yield debounce(1000, actions.REGISTER.CHECK_USERNAME, checkUsernameWorker);\n}\n\nfunction* registerSubmitWatcher() {\n  yield takeLatest(actions.REGISTER.REGISTER_USER, registerSubmitWorker);\n}\n\nexport default function* registerSaga() {\n  yield all([checkUsernameWatcher(), registerSubmitWatcher()]);\n}\n","import { createSelector } from 'reselect';\n\nconst selectLoadingState = state => state.loading;\n\nexport const getStaticsLoadingState = () =>\n  createSelector(\n    selectLoadingState,\n    loadingState => loadingState.isGetStaticsLoading\n  );\n\nexport const getAllShowsLoadingState = () =>\n  createSelector(\n    selectLoadingState,\n    loadingState => loadingState.isGetAllShowsLoading\n  );\n\nexport const getRegisterLoadingState = () =>\n  createSelector(\n    selectLoadingState,\n    loadingState => loadingState.isRegisterSubmitLoading\n  );\n\nexport const getLoginLoadingState = () =>\n  createSelector(\n    selectLoadingState,\n    loadingState => loadingState.isLoginSubmitLoading\n  );\n\nexport const getCheckUsernameLoadingState = () =>\n  createSelector(\n    selectLoadingState,\n    loadingState => loadingState.isCheckUsernameLoading\n  );\n\nexport const getAddShowSubmitLoadingState = () =>\n  createSelector(\n    selectLoadingState,\n    loadingState => loadingState.isAddShowSubmitLoading\n  );\n","import { createSelector } from 'reselect';\n\nconst selectShowsState = state => state.shows;\n\nexport const getAllShows = () =>\n  createSelector(selectShowsState, showState =>\n    showState.shows.sort(\n      (showA, showB) => new Date(showB.created_at) - new Date(showA.created_at)\n    )\n  );\n","import { createSelector } from 'reselect';\n\nconst selectTypes = state => state.static.types;\nconst selectLanguages = state => state.static.languages;\nconst selectGenres = state => state.static.genres;\nconst selectFilter = state => state.static.filter;\nconst selectAppliedFilters = state => state.static.appliedFilters;\n\nexport const getAllTypes = () =>\n  createSelector([selectTypes, selectFilter], (types, filter) => {\n    const allTypeIds = Object.keys(types);\n    const newTypes = { ...types };\n\n    for (let typeId of allTypeIds) {\n      if (new Set(filter.types).has(typeId)) {\n        newTypes[typeId].isChecked = true;\n      } else {\n        newTypes[typeId].isChecked = false;\n      }\n    }\n\n    return newTypes;\n  });\n\nexport const getAllLanguages = () =>\n  createSelector([selectLanguages, selectFilter], (languages, filter) => {\n    const allLanguageIds = Object.keys(languages);\n    const newLanguages = { ...languages };\n\n    for (let languageId of allLanguageIds) {\n      if (new Set(filter.languages).has(languageId)) {\n        newLanguages[languageId].isChecked = true;\n      } else {\n        newLanguages[languageId].isChecked = false;\n      }\n    }\n\n    return newLanguages;\n  });\n\nexport const getAllGenres = () =>\n  createSelector([selectGenres, selectFilter], (genres, filter) => {\n    const allGenreIds = Object.keys(genres);\n    const newGenres = { ...genres };\n\n    for (let genreId of allGenreIds) {\n      if (new Set(filter.genres).has(genreId)) {\n        newGenres[genreId].isChecked = true;\n      } else {\n        newGenres[genreId].isChecked = false;\n      }\n    }\n\n    return newGenres;\n  });\n\nexport const getFilters = () =>\n  createSelector(selectFilter, filterState => filterState);\n\nexport const getAppliedFilters = () =>\n  createSelector(\n    selectAppliedFilters,\n    appliedFilterState => appliedFilterState\n  );\n","import { createSelector } from 'reselect';\n\nconst selectToastState = state => state.toast;\n\nexport const getToastState = () =>\n  createSelector(selectToastState, toastState => toastState.show);\n\nexport const getToastMessage = () =>\n  createSelector(selectToastState, toastState => toastState.message);\n\nexport const getToastVariant = () =>\n  createSelector(selectToastState, toastState => toastState.variant);\n","import { createSelector } from 'reselect';\n\nconst selectUserState = state => state.user;\n\nexport const isUserLoggedIn = () =>\n  createSelector(selectUserState, userState => userState.isLoggedIn);\n\nexport const getAuthToken = () =>\n  createSelector(\n    selectUserState,\n    userState =>\n      userState._id &&\n      userState.token &&\n      'Bearer ' + userState._id + ',' + userState.token\n  );\n\nexport const getCurrentUserId = () =>\n  createSelector(selectUserState, userState => userState._id);\n\nexport const getCurrentUsername = () =>\n  createSelector(selectUserState, userState => userState.username);\n\nexport const isValidUsername = () =>\n  createSelector(selectUserState, userState => userState.isValidUsername);\n","import axios from 'axios';\nimport {\n  all,\n  debounce,\n  put,\n  select,\n  takeEvery,\n} from '@redux-saga/core/effects';\n\nimport { loadingAction, showsAction, toastAction } from '../actions';\n\nimport { actions, urls, utils } from '../constants';\n\nimport { staticSelector, userSelector } from '../selectors';\n\nimport handleError from '../utils/errorHandler';\n\n/* -----------------------------------------\n *                 WORKERS\n * -----------------------------------------\n */\n\nfunction* getAllShowsWorker() {\n  try {\n    handleError(axios);\n\n    const authToken = yield select(userSelector.getAuthToken());\n\n    const filters = yield select(staticSelector.getFilters());\n\n    const { userId, types, languages, genres, q } = filters;\n\n    const requestURL = urls.GET_ALL_SHOWS;\n\n    const headers = {\n      'Content-Type': 'application/json',\n      ...(authToken && { Authorization: authToken }),\n    };\n\n    const params = {\n      ...(userId && { user_id: userId }),\n      ...(types && types.length > 0 && { types: types.join(',') }),\n      ...(languages &&\n        languages.length > 0 && { languages: languages.join(',') }),\n      ...(genres && genres.length > 0 && { genres: genres.join(',') }),\n      ...(q && q !== '' && { q }),\n    };\n\n    const isFilterApiCall =\n      (types && types.length > 0) ||\n      (languages && languages.length > 0) ||\n      (genres && genres.length > 0) ||\n      (q && q !== '');\n\n    const response = yield axios.get(requestURL, { headers, params });\n\n    yield put(loadingAction.stopGetAllShowsLoading());\n\n    if (response && response.status === 200) {\n      const { data } = response;\n      const { shows } = data.data;\n\n      if (isFilterApiCall) {\n        yield put(showsAction.updateShows(shows));\n      } else {\n        yield put(showsAction.appendShows(shows));\n      }\n    }\n  } catch (error) {\n    yield put(loadingAction.stopGetAllShowsLoading());\n  }\n}\n\nfunction* addShowWorker({ payload }) {\n  try {\n    handleError(axios);\n    const userId = yield select(userSelector.getCurrentUserId());\n\n    const authToken = yield select(userSelector.getAuthToken());\n\n    const requestURL = urls.ADD_SHOWS.replace(/<USER_ID>/, userId);\n\n    const body = payload.show;\n\n    const headers = {\n      'Content-Type': 'application/json',\n      Authorization: authToken,\n    };\n\n    const response = yield axios.post(requestURL, body, { headers });\n\n    yield put(loadingAction.stopAddShowLoading());\n\n    if (response && response.status === 201) {\n      const { data } = response;\n      const { message } = data;\n      const { show } = data.data;\n\n      yield put(showsAction.appendShows([show]));\n\n      yield put(\n        toastAction.requestToShowToast(utils.MESSAGE_VARIANTS.SUCCESS, message)\n      );\n    }\n  } catch (error) {\n    yield put(loadingAction.stopAddShowLoading());\n  }\n}\n\nfunction* upvoteShowWorker({ payload }) {\n  try {\n    handleError(axios);\n    const userId = yield select(userSelector.getCurrentUserId());\n\n    const authToken = yield select(userSelector.getAuthToken());\n\n    const { showId, isUpvote } = payload;\n\n    const requestURL = urls.UPVOTE_SHOW.replace(/<USER_ID>/, userId).replace(\n      /<SHOW_ID>/,\n      showId\n    );\n\n    const body = { isUpvote };\n\n    const headers = {\n      'Content-Type': 'application/json',\n      Authorization: authToken,\n    };\n\n    const response = yield axios.post(requestURL, body, { headers });\n\n    yield put(loadingAction.stopVoteShowLoading());\n\n    if (response && response.status === 200) {\n      const { data } = response;\n      const { show } = data.data;\n\n      yield put(showsAction.appendShows([show]));\n    }\n  } catch (error) {\n    yield put(loadingAction.stopVoteShowLoading());\n  }\n}\n\nfunction* downvoteShowWorker({ payload }) {\n  try {\n    handleError(axios);\n    const userId = yield select(userSelector.getCurrentUserId());\n\n    const authToken = yield select(userSelector.getAuthToken());\n\n    const { showId, isDownvote } = payload;\n\n    const requestURL = urls.DOWNVOTE_SHOW.replace(/<USER_ID>/, userId).replace(\n      /<SHOW_ID>/,\n      showId\n    );\n\n    const body = { isDownvote };\n\n    const headers = {\n      'Content-Type': 'application/json',\n      Authorization: authToken,\n    };\n\n    const response = yield axios.post(requestURL, body, { headers });\n\n    yield put(loadingAction.stopVoteShowLoading());\n\n    if (response && response.status === 200) {\n      const { data } = response;\n      const { show } = data.data;\n\n      yield put(showsAction.appendShows([show]));\n    }\n  } catch (error) {\n    yield put(loadingAction.stopVoteShowLoading());\n  }\n}\n\n/* -----------------------------------------\n *                 WATCHERS\n * -----------------------------------------\n */\n\nfunction* getAllShowsWatcher() {\n  yield debounce(600, actions.SHOWS.GET_ALL_SHOWS, getAllShowsWorker);\n}\n\nfunction* addShowWatcher() {\n  yield takeEvery(actions.SHOWS.ADD_SHOW, addShowWorker);\n}\n\nfunction* upvoteShowWatcher() {\n  yield takeEvery(actions.SHOWS.UPVOTE_SHOW, upvoteShowWorker);\n}\n\nfunction* downvoteShowWatcher() {\n  yield takeEvery(actions.SHOWS.DOWNVOTE_SHOW, downvoteShowWorker);\n}\n\nexport default function* showsSaga() {\n  yield all([\n    getAllShowsWatcher(),\n    addShowWatcher(),\n    upvoteShowWatcher(),\n    downvoteShowWatcher(),\n  ]);\n}\n","import axios from 'axios';\nimport { all, put, takeEvery } from '@redux-saga/core/effects';\n\nimport { loadingAction, staticAction } from '../actions';\n\nimport { actions, urls } from '../constants';\n\nimport handleError from '../utils/errorHandler';\n\n/* -----------------------------------------\n *                 WORKERS\n * -----------------------------------------\n */\n\nfunction* getAllStaticsWorker() {\n  try {\n    handleError(axios);\n\n    const requestURL = urls.GET_STATICS;\n\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n\n    const response = yield axios.get(requestURL, { headers });\n\n    yield put(loadingAction.stopGetStaticsLoading());\n\n    if (response && response.status === 200) {\n      const { data } = response;\n      let { types, languages, genres } = data.data;\n\n      yield put(staticAction.updateTypeData(types));\n      yield put(staticAction.updateLanguageData(languages));\n      yield put(staticAction.updateGenreData(genres));\n    }\n  } catch (error) {\n    yield put(loadingAction.stopGetStaticsLoading());\n  }\n}\n\n/* -----------------------------------------\n *                 WATCHERS\n * -----------------------------------------\n */\n\nfunction* getAllStaticsWatcher() {\n  yield takeEvery(actions.STATIC.GET_ALL_STATICS, getAllStaticsWorker);\n}\n\nexport default function* staticSaga() {\n  yield all([getAllStaticsWatcher()]);\n}\n","import { all, delay, put, select, takeEvery } from '@redux-saga/core/effects';\n\nimport { toastAction } from '../actions';\n\nimport { actions } from '../constants';\n\nimport { toastSelector } from '../selectors';\n\n/* -----------------------------------------\n *                 WORKERS\n * -----------------------------------------\n */\n\nfunction* showToastWorker() {\n  const toastVariant = yield select(toastSelector.getToastVariant());\n  const toastMessage = yield select(toastSelector.getToastMessage());\n\n  yield put(toastAction.hideToast());\n  yield delay(100);\n  yield put(toastAction.showToast(toastVariant, toastMessage));\n}\n\n/* -----------------------------------------\n *                 WATCHERS\n * -----------------------------------------\n */\n\nfunction* showToastWatcher() {\n  yield takeEvery(actions.TOAST.REQUEST_TO_SHOW_TOAST, showToastWorker);\n}\n\nexport default function* toastSaga() {\n  yield all([showToastWatcher()]);\n}\n","import { all, fork } from '@redux-saga/core/effects';\n\nimport loginSaga from './login.saga';\nimport registerSaga from './register.saga';\nimport showsSaga from './shows.saga';\nimport staticSaga from './static.saga';\nimport toastSaga from './toast.saga';\n\nexport default function* rootSaga() {\n  yield all([\n    fork(loginSaga),\n    fork(registerSaga),\n    fork(showsSaga),\n    fork(staticSaga),\n    fork(toastSaga),\n  ]);\n}\n","import { toastAction } from '../actions';\nimport { storage, utils } from '../constants';\nimport { checkIfUserIsLoggedIn, logoutUser } from './users';\n\nconst checkTokenExpiration = store => next => action => {\n  const tokenExpireAt = +localStorage.getItem(storage.USER.EXPIRE_AT);\n  const { isLoggedIn } = checkIfUserIsLoggedIn();\n\n  if (!isLoggedIn && tokenExpireAt) {\n    logoutUser();\n\n    store.dispatch(\n      toastAction.requestToShowToast(\n        utils.MESSAGE_VARIANTS.WARNING,\n        'Your session has expired. Please login again.'\n      )\n    );\n  }\n\n  next(action);\n};\n\nexport default checkTokenExpiration;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { routerMiddleware } from 'connected-react-router';\n\nimport history from './history';\nimport rootReducer from '../reducers';\nimport rootSaga from '../sagas';\n\nimport checkTokenExpiration from './token';\n\nconst sagaMiddleWare = createSagaMiddleware();\n\nconst composeEnhancers =\n  process.env.NODE_ENV !== 'production' &&\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        shouldHotReload: false,\n      })\n    : compose;\n\nconst enhancers = [\n  applyMiddleware(\n    sagaMiddleWare,\n    checkTokenExpiration,\n    routerMiddleware(history)\n  ),\n];\nconst store = createStore(rootReducer(history), composeEnhancers(...enhancers));\nsagaMiddleWare.run(rootSaga);\n\nexport default store;\n","import 'typeface-lato';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nconst CustomThemeObject = {\n  typography: {\n    fontFamily: '\"Lato\"',\n    fontSize: 14,\n    fontWeightLight: 300,\n    fontWeightRegular: 400,\n    fontWeightMedium: 500,\n  },\n  palette: {\n    primary: {\n      light: '#3492ca',\n      main: '#0277bd',\n      dark: '#015384',\n    },\n    secondary: {\n      light: '#fbcc57',\n      main: '#fbc02d',\n      dark: '#af861f',\n    },\n  },\n};\n\nconst CustomTheme = createMuiTheme(CustomThemeObject);\n\nexport default CustomTheme;\n","const style = () => ({\n  filterArea: {\n    paddingTop: '.5rem',\n    paddingBottom: '.5rem',\n  },\n  expansionPanelHeading: {\n    borderBottom: '1px solid #C3C3C3',\n  },\n  expansionPanelBody: {\n    padding: 0,\n  },\n  filterListArea: {\n    width: '100%',\n    maxHeight: 150,\n    overflow: 'auto',\n  },\n});\n\nexport default style;\n","import React from 'react';\nimport clsx from 'clsx';\n\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport style from './style';\n\nconst ListFilters = props => {\n  const {\n    title,\n    values,\n    expanded,\n    handleExpansion,\n    handleOnCheckBoxClick,\n  } = props;\n\n  const classes = makeStyles(style)();\n\n  return (\n    <>\n      <Grid className={classes.filterArea} item xs={12}>\n        <ExpansionPanel square expanded={expanded}>\n          <ExpansionPanelSummary\n            className={clsx(expanded && classes.expansionPanelHeading)}\n            expandIcon={<ExpandMoreIcon />}\n            onClick={handleExpansion}\n          >\n            <Typography variant=\"h6\">{title}</Typography>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails className={classes.expansionPanelBody}>\n            <List className={classes.filterListArea}>\n              {Object.values(values).map(value => (\n                <ListItem\n                  key={value._id}\n                  role={undefined}\n                  dense\n                  button\n                  onClick={handleOnCheckBoxClick(value)}\n                >\n                  <ListItemIcon>\n                    <Checkbox\n                      edge=\"start\"\n                      checked={value.isChecked}\n                      tabIndex={-1}\n                      disableRipple\n                    />\n                  </ListItemIcon>\n                  <ListItemText primary={value.name} />\n                </ListItem>\n              ))}\n            </List>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n      </Grid>\n    </>\n  );\n};\n\nexport default ListFilters;\n","const style = theme => ({\n  filterArea: {\n    margin: theme.spacing(1),\n  },\n  filterChipsArea: {\n    marginTop: '.5rem',\n    marginBottom: '.5rem',\n    backgroundColor: '#F7F7F7',\n  },\n  chips: {\n    padding: '.25rem',\n    margin: '.5rem',\n  },\n  divider: {\n    marginTop: '1rem',\n    marginBottom: '1rem',\n  },\n});\n\nexport default style;\n","import React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Hidden from '@material-ui/core/Hidden';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ListFilters from '../ListFilters';\n\nimport style from './style';\n\nimport { utils } from '../../constants';\n\nconst FilterArea = props => {\n  const { types, languages, genres, appliedFilters } = props;\n\n  console.log('appliedFilters: ', appliedFilters);\n\n  const classes = makeStyles(style)();\n\n  const [typeExpanded, setTypeExpansion] = React.useState(true);\n  const [languageExpanded, setLanguageExpansion] = React.useState(false);\n  const [genreExpanded, setGenreExpansion] = React.useState(false);\n\n  const handleExpansion = type => {\n    if (type === utils.FILTER_TYPES.TYPE) {\n      setTypeExpansion(!typeExpanded);\n    } else if (type === utils.FILTER_TYPES.LANGUAGE) {\n      setLanguageExpansion(!languageExpanded);\n    } else if (type === utils.FILTER_TYPES.GENRE) {\n      setGenreExpansion(!genreExpanded);\n    }\n  };\n\n  const handleOnCheckBoxClick = currentValue => () => {\n    const { addFilter, removeFilter } = props;\n\n    if (currentValue.type === utils.FILTER_TYPES.TYPE) {\n      if (!currentValue.isChecked) {\n        addFilter({ type: currentValue._id });\n      } else {\n        removeFilter({ type: currentValue._id });\n      }\n    } else if (currentValue.type === utils.FILTER_TYPES.LANGUAGE) {\n      if (!currentValue.isChecked) {\n        addFilter({ language: currentValue._id });\n      } else {\n        removeFilter({ language: currentValue._id });\n      }\n    } else if (currentValue.type === utils.FILTER_TYPES.GENRE) {\n      if (!currentValue.isChecked) {\n        addFilter({ genre: currentValue._id });\n      } else {\n        removeFilter({ genre: currentValue._id });\n      }\n    }\n  };\n\n  const handleOnDeleteValue = currentValue => () => {\n    const { removeFilter } = props;\n\n    if (currentValue.type === utils.FILTER_TYPES.TYPE) {\n      removeFilter({ type: currentValue._id });\n    } else if (currentValue.type === utils.FILTER_TYPES.LANGUAGE) {\n      removeFilter({ language: currentValue._id });\n    } else if (currentValue.type === utils.FILTER_TYPES.GENRE) {\n      removeFilter({ genre: currentValue._id });\n    }\n  };\n\n  const handleResetFilter = () => {\n    const { resetFilter } = props;\n    resetFilter();\n  };\n\n  const applyFilter = () => {\n    const { getAllShows, handleCloseFilterArea } = props;\n    getAllShows();\n    handleCloseFilterArea && handleCloseFilterArea();\n  };\n\n  const filterChipComponent =\n    appliedFilters &&\n    appliedFilters.length > 0 &&\n    appliedFilters.map(value => (\n      <Chip\n        className={classes.chips}\n        key={value._id + ' ' + value.type}\n        variant=\"outlined\"\n        color=\"primary\"\n        label={value.name}\n        onDelete={handleOnDeleteValue(value)}\n      />\n    ));\n\n  return (\n    <>\n      <Grid className={classes.filterArea}>\n        <Grid container justify=\"space-between\">\n          <Grid item xs>\n            <Typography variant=\"h6\">Filters</Typography>\n          </Grid>\n\n          {appliedFilters && appliedFilters.length > 0 && (\n            <Grid item xs={4}>\n              <Button\n                color=\"primary\"\n                fullWidth\n                disabled={appliedFilters && appliedFilters.length < 1}\n                onClick={handleResetFilter}\n              >\n                Clear All\n              </Button>\n            </Grid>\n          )}\n        </Grid>\n\n        <Paper className={classes.filterChipsArea} elevation={0}>\n          {filterChipComponent}\n        </Paper>\n\n        {appliedFilters && appliedFilters.length > 0 && (\n          <>\n            <Hidden smDown>\n              <Grid item md={5}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  fullWidth\n                  disabled={appliedFilters && appliedFilters.length < 1}\n                  onClick={applyFilter}\n                >\n                  Apply\n                </Button>\n              </Grid>\n            </Hidden>\n\n            <Hidden mdUp>\n              <Grid container justify=\"center\">\n                <Grid item xs={6}>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    fullWidth\n                    disabled={appliedFilters && appliedFilters.length < 1}\n                    onClick={applyFilter}\n                  >\n                    Apply\n                  </Button>\n                </Grid>\n              </Grid>\n            </Hidden>\n          </>\n        )}\n\n        <Divider className={classes.divider} />\n\n        <ListFilters\n          title=\"Types\"\n          values={types}\n          expanded={typeExpanded}\n          handleExpansion={() => handleExpansion(utils.FILTER_TYPES.TYPE)}\n          handleOnCheckBoxClick={handleOnCheckBoxClick}\n        />\n\n        <ListFilters\n          title=\"Languages\"\n          values={languages}\n          expanded={languageExpanded}\n          handleExpansion={() => handleExpansion(utils.FILTER_TYPES.LANGUAGE)}\n          handleOnCheckBoxClick={handleOnCheckBoxClick}\n        />\n\n        <ListFilters\n          title=\"Genres\"\n          values={genres}\n          expanded={genreExpanded}\n          handleExpansion={() => handleExpansion(utils.FILTER_TYPES.GENRE)}\n          handleOnCheckBoxClick={handleOnCheckBoxClick}\n        />\n      </Grid>\n    </>\n  );\n};\n\nexport default FilterArea;\n","import React from 'react';\n\nimport Slide from '@material-ui/core/Slide';\n\nconst SlideTransition = React.forwardRef((props, ref) => {\n  return (\n    <>\n      <Slide direction=\"up\" ref={ref} {...props} />;\n    </>\n  );\n});\n\nexport default SlideTransition;\n","import React from 'react';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\nimport FilterListRoundedIcon from '@material-ui/icons/FilterListRounded';\n\nimport FilterArea from '../FilterArea';\nimport SlideTransition from '../SlideTransition';\n\nconst FilterAreaMobile = props => {\n  const [openFilterArea, setFilterAreaState] = React.useState(false);\n\n  const handleOpenFilterArea = () => {\n    setFilterAreaState(true);\n  };\n\n  const handleCloseFilterArea = () => {\n    setFilterAreaState(false);\n  };\n\n  return (\n    <>\n      <Grid container justify=\"center\">\n        <Grid item xs={8}>\n          <Button\n            color=\"primary\"\n            size=\"large\"\n            startIcon={<FilterListRoundedIcon />}\n            onClick={handleOpenFilterArea}\n            fullWidth\n          >\n            Filter List\n          </Button>\n        </Grid>\n      </Grid>\n\n      <Dialog\n        open={openFilterArea}\n        keepMounted={false}\n        TransitionComponent={SlideTransition}\n        fullScreen\n        maxWidth=\"sm\"\n        onClose={handleCloseFilterArea}\n      >\n        <AppBar position=\"sticky\">\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              onClick={handleCloseFilterArea}\n            >\n              <CloseRoundedIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        <FilterArea {...props} handleCloseFilterArea={handleCloseFilterArea} />\n      </Dialog>\n    </>\n  );\n};\n\nexport default FilterAreaMobile;\n","const style = theme => ({\n  filterArea: {\n    margin: theme.spacing(3, 1),\n  },\n});\n\nexport default style;\n","import React from 'react';\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport FilterArea from '../FilterArea';\n\nimport style from './style';\n\nconst FilterAreaWeb = props => {\n  const classes = makeStyles(style)();\n\n  return (\n    <>\n      <Card className={classes.filterArea}>\n        <CardContent>\n          <FilterArea {...props} />\n        </CardContent>\n      </Card>\n    </>\n  );\n};\n\nexport default FilterAreaWeb;\n","import React from 'react';\n\nimport PacmanLoader from 'react-spinners/PacmanLoader';\n\nimport Grid from '@material-ui/core/Grid';\n\nconst Loading = ({ loading }) => {\n  return (\n    <Grid\n      container\n      justify=\"center\"\n      alignItems=\"center\"\n      style={{ height: '100vh' }}\n    >\n      <PacmanLoader color=\"#FFDF46\" size={50} loading={loading} />\n    </Grid>\n  );\n};\n\nexport default Loading;\n","const style = theme => ({\n  descriptionArea: {\n    paddingTop: '2rem',\n    paddingRight: '2rem',\n    [theme.breakpoints.down('sm')]: {\n      paddingRight: '1rem',\n    },\n    [theme.breakpoints.down('xs')]: {\n      paddingRight: '0rem',\n    },\n  },\n  titleArea: {\n    marginBottom: '1rem',\n  },\n  title: {\n    fontWeight: 700,\n    fontSize: 30,\n    color: '#424242',\n    [theme.breakpoints.down('sm')]: {\n      fontWeight: 600,\n      fontSize: 26,\n    },\n    [theme.breakpoints.down('xs')]: {\n      fontWeight: 600,\n      fontSize: 22,\n    },\n  },\n  watchButton: {\n    fontWeight: 600,\n    paddingRight: '2rem',\n    paddingLeft: '2rem',\n    [theme.breakpoints.down('xs')]: {\n      fontWeight: 500,\n      paddingRight: '1rem',\n      paddingLeft: '1rem',\n    },\n  },\n  metadataArea: {\n    marginTop: '.5rem',\n    marginBottom: '1rem',\n  },\n  tabArea: {\n    marginTop: '.5rem',\n  },\n  languageIcon: {\n    color: '#8097A4',\n  },\n  languageText: {\n    marginLeft: '.75rem',\n    fontSize: 16,\n    color: '#8097A4',\n  },\n  typeIcon: {\n    color: '#556B84',\n  },\n  typeText: {\n    marginLeft: '.75rem',\n    fontSize: 16,\n    color: '#556B84',\n  },\n  genreIcon: {\n    color: '#125BA2',\n  },\n  genreTab: {\n    marginLeft: '.75rem',\n  },\n});\n\nexport default style;\n","import React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nimport CameraRollRoundedIcon from '@material-ui/icons/CameraRollRounded';\nimport LanguageRoundedIcon from '@material-ui/icons/LanguageRounded';\nimport MovieRoundedIcon from '@material-ui/icons/MovieRounded';\nimport OpenInNewRoundedIcon from '@material-ui/icons/OpenInNewRounded';\n\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\n\nimport style from './style';\n\nconst MovieDescriptionCard = props => {\n  const classes = makeStyles(style)();\n  const theme = useTheme();\n  const isMobileView = useMediaQuery(theme.breakpoints.down('xs'));\n\n  const { name, url, language, type, genres } = props;\n\n  const genreComponent =\n    genres &&\n    genres.map((genre, index) => (\n      <Chip\n        key={index}\n        className={classes.genreTab}\n        variant=\"outlined\"\n        color=\"primary\"\n        size=\"small\"\n        label={genre}\n      />\n    ));\n\n  return (\n    <>\n      <Grid className={classes.descriptionArea}>\n        <Grid className={classes.titleArea} container justify=\"space-between\">\n          <Typography className={classes.title}>{name}</Typography>\n          {url && (\n            <Button\n              className={classes.watchButton}\n              variant=\"contained\"\n              color=\"default\"\n              endIcon={!isMobileView && <OpenInNewRoundedIcon />}\n              disableElevation\n              onClick={() => window.open(url, '_blank')}\n            >\n              {isMobileView ? <OpenInNewRoundedIcon /> : 'Watch'}\n            </Button>\n          )}\n        </Grid>\n\n        <Divider />\n\n        <Grid className={classes.metadataArea} container>\n          <Grid className={classes.tabArea} item xs={12} sm={3}>\n            <Grid container alignItems=\"center\">\n              <Grid item>\n                <LanguageRoundedIcon className={classes.languageIcon} />\n              </Grid>\n              <Grid item>\n                <Typography\n                  className={classes.languageText}\n                  variant=\"subtitle2\"\n                  display=\"inline\"\n                >\n                  {language}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid className={classes.tabArea} item xs={12} sm={3}>\n            <Grid container alignItems=\"center\">\n              <Grid item>\n                <CameraRollRoundedIcon className={classes.typeIcon} />\n              </Grid>\n              <Grid item>\n                <Typography\n                  className={classes.typeText}\n                  variant=\"subtitle2\"\n                  display=\"inline\"\n                >\n                  {type}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid className={classes.tabArea} item xs={12} sm>\n            <Grid container alignItems=\"center\">\n              <Grid item>\n                <MovieRoundedIcon className={classes.genreIcon} />\n              </Grid>\n              <Grid item>{genreComponent}</Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default MovieDescriptionCard;\n","const style = theme => ({\n  element: {\n    padding: '.25rem, 0rem',\n  },\n  icons: {\n    color: theme.palette.text.secondary,\n  },\n  upvoted: {\n    color: theme.palette.success.light,\n  },\n  downvoted: {\n    color: theme.palette.error.light,\n  },\n  vote: {\n    marginRight: '.75rem',\n  },\n  voteExpanded: {\n    marginRight: '.5rem',\n  },\n  voteExpandedDivider: {\n    marginTop: '.25rem',\n    marginBotton: '.25rem',\n    marginLeft: '1.25rem',\n    marginRight: '-1rem',\n  },\n});\n\nexport default style;\n","import React from 'react';\nimport clsx from 'clsx';\n\nimport Grid from '@material-ui/core/Grid';\nimport Grow from '@material-ui/core/Grow';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n\nimport ThumbUpRoundedIcon from '@material-ui/icons/ThumbUpRounded';\nimport ThumbDownRoundedIcon from '@material-ui/icons/ThumbDownRounded';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport style from './style';\n\nimport { utils } from '../../constants';\nimport { Divider } from '@material-ui/core';\n\nconst VoteArea = props => {\n  const classes = makeStyles(style)();\n\n  const {\n    isUserLoggedIn,\n    requestToShowToast,\n    setLoginPopupState,\n    onUpvoteShow,\n    onDownvoteShow,\n    _id,\n    upvotes,\n    downvotes,\n    haveUpvoted,\n    haveDownvoted,\n  } = props;\n\n  const votes = upvotes - downvotes;\n\n  const [expandedView, setExpandedView] = React.useState(false);\n  const [shortView, setShortView] = React.useState(true);\n\n  const onUpvote = () => {\n    if (isUserLoggedIn) {\n      onUpvoteShow(_id, !haveUpvoted);\n    } else {\n      setLoginPopupState(true);\n      requestToShowToast(\n        utils.MESSAGE_VARIANTS.INFO,\n        'You have to login to vote.'\n      );\n    }\n  };\n\n  const onDownvote = () => {\n    if (isUserLoggedIn) {\n      onDownvoteShow(_id, !haveDownvoted);\n    } else {\n      setLoginPopupState(true);\n      requestToShowToast(\n        utils.MESSAGE_VARIANTS.INFO,\n        'You have to login to vote.'\n      );\n    }\n  };\n\n  const toggleExpandedView = () => {\n    if (expandedView) {\n      setExpandedView(!expandedView);\n      setTimeout(() => setShortView(expandedView), 500);\n    } else {\n      setShortView(expandedView);\n      setTimeout(() => setExpandedView(!expandedView), 500);\n    }\n  };\n\n  const expandedVoteArea = (\n    <>\n      <Grow in={expandedView} timeout={500}>\n        <Grid container>\n          <Grid className={classes.upvoted} item xs={12}>\n            <Grid container justify=\"flex-end\">\n              <Typography variant=\"h6\">{'+ ' + upvotes}</Typography>\n            </Grid>\n          </Grid>\n          <Grid item xs={12}>\n            <Divider className={classes.voteExpandedDivider} />\n          </Grid>\n\n          <Grid className={classes.downvoted} item xs={12}>\n            <Grid container justify=\"flex-end\">\n              <Typography variant=\"h6\">{'- ' + downvotes}</Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grow>\n    </>\n  );\n\n  return (\n    <>\n      <Grid className={classes.element} item xs={12}>\n        <Grid container justify=\"flex-end\">\n          <IconButton onClick={onUpvote}>\n            <ThumbUpRoundedIcon\n              fontSize=\"large\"\n              className={clsx(classes.icons, haveUpvoted && classes.upvoted)}\n            />\n          </IconButton>\n        </Grid>\n      </Grid>\n\n      <Grid className={classes.element} item xs={12}>\n        <Grid container justify=\"flex-end\">\n          <IconButton\n            disableRipple\n            disableTouchRipple\n            disableFocusRipple\n            className={clsx(expandedView ? classes.voteExpanded : classes.vote)}\n            onClick={toggleExpandedView}\n          >\n            {expandedView ? (\n              expandedVoteArea\n            ) : (\n              <Grow in={shortView} timeout={500}>\n                <Typography variant=\"h6\">{votes}</Typography>\n              </Grow>\n            )}\n          </IconButton>\n        </Grid>\n      </Grid>\n\n      <Grid className={classes.element} item xs={12}>\n        <Grid container justify=\"flex-end\">\n          <IconButton onClick={onDownvote}>\n            <ThumbDownRoundedIcon\n              fontSize=\"large\"\n              className={clsx(\n                classes.icons,\n                !haveUpvoted && haveDownvoted && classes.downvoted\n              )}\n            />\n          </IconButton>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default VoteArea;\n","const style = theme => ({\n  cardArea: {\n    margin: theme.spacing(3, 1),\n  },\n  dividerArea: {\n    marginLeft: '1rem',\n    marginRight: '1rem',\n    [theme.breakpoints.down('sm')]: {\n      marginLeft: '0rem',\n      marginRight: '.75rem',\n    },\n  },\n});\n\nexport default style;\n","import React from 'react';\n\nimport Card from '@material-ui/core/Card';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\n\nimport MovieDescriptionCard from '../MovieDescriptionCard';\nimport VoteArea from '../VoteArea';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport style from './style';\n\nconst MovieDescription = props => {\n  const classes = makeStyles(style)();\n\n  return (\n    <>\n      <Card className={classes.cardArea}>\n        <Grid container alignItems=\"center\">\n          <Grid item xs={2} sm={1}>\n            <VoteArea {...props} />\n          </Grid>\n\n          <Divider\n            className={classes.dividerArea}\n            orientation=\"vertical\"\n            flexItem\n          />\n\n          <Grid item xs={9} sm>\n            <MovieDescriptionCard {...props} />\n          </Grid>\n        </Grid>\n      </Card>\n    </>\n  );\n};\n\nexport default MovieDescription;\n","const style = theme => ({\n  addShowElement: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n  multipleSelect: {\n    border: '1px solid #C3C3C3',\n    borderRadius: 4,\n  },\n  multipleSelectError: {\n    border: '1px solid red',\n    borderRadius: 4,\n  },\n  multipleSelectLabel: {\n    background: '#FFF',\n    paddingLeft: theme.spacing(0.5),\n    paddingRight: theme.spacing(1),\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: 2,\n    backgroundColor: theme.palette.primary,\n  },\n  lastElement: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(5),\n  },\n});\n\nexport default style;\n","import React from 'react';\nimport clsx from 'clsx';\n\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Grid from '@material-ui/core/Grid';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport style from './style';\n\nimport { regex } from '../../constants';\n\nconst AddShow = props => {\n  const {\n    onAddShowSubmit,\n    isAddShowSubmitLoading,\n    types,\n    languages,\n    genres,\n  } = props;\n\n  const classes = makeStyles(style)();\n\n  const [name, setNameValue] = React.useState('');\n\n  const [url, setUrlValue] = React.useState('');\n  const [urlError, setUrlError] = React.useState(false);\n\n  const [typeId, setTypeValue] = React.useState('');\n\n  const [languageId, setLanguageValue] = React.useState('');\n\n  const [genreIds, setGenresValue] = React.useState([]);\n  const [genreError, setGenreError] = React.useState(false);\n\n  const getStyles = genreId => ({\n    fontWeight: genreIds.indexOf(genreId) === -1 ? 500 : 700,\n  });\n\n  const handleNameTyping = event => {\n    setNameValue(event.target.value);\n  };\n\n  const handleUrlTyping = event => {\n    setUrlValue(event.target.value);\n  };\n\n  const checkUrlValue = event => {\n    if (\n      regex.URL.test(event.target.value.trim()) ||\n      event.target.value.trim() === ''\n    ) {\n      setUrlError(false);\n    } else {\n      setUrlError(true);\n    }\n    setUrlValue(event.target.value.trim());\n  };\n\n  const handleTypeSelect = event => {\n    setTypeValue(event.target.value);\n  };\n\n  const handleLanguageSelect = event => {\n    setLanguageValue(event.target.value);\n  };\n\n  const handleGenresSelect = event => {\n    if (event.target.value.length > 3) {\n      setGenreError(true);\n    } else {\n      setGenreError(false);\n    }\n    setGenresValue(event.target.value);\n  };\n\n  const handleAddShowSubmit = event => {\n    event.preventDefault();\n    onAddShowSubmit({\n      name,\n      url,\n      type: typeId,\n      language: languageId,\n      genres: genreIds,\n    });\n  };\n\n  return (\n    <>\n      <Grid container spacing={1} justify=\"center\" alignContent=\"center\">\n        <Grid item xs={12} sm={10}>\n          <Grid container justify=\"center\" className={classes.addShowElement}>\n            <Typography variant=\"h4\">Add Show</Typography>\n          </Grid>\n          <form onSubmit={handleAddShowSubmit}>\n            <Grid container justify=\"center\" className={classes.addShowElement}>\n              <Grid item xs={12} sm={10}>\n                <TextField\n                  id=\"name\"\n                  variant=\"outlined\"\n                  label=\"Name\"\n                  placeholder=\"The Shawshank Redemption\"\n                  value={name}\n                  onChange={handleNameTyping}\n                  InputLabelProps={{ shrink: true }}\n                  autoFocus\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n\n            <Grid container justify=\"center\" className={classes.addShowElement}>\n              <Grid item xs={12} sm={10}>\n                <TextField\n                  id=\"url\"\n                  variant=\"outlined\"\n                  label=\"URL (Optional)\"\n                  placeholder=\"\"\n                  value={url}\n                  onChange={handleUrlTyping}\n                  onBlur={checkUrlValue}\n                  error={urlError}\n                  helperText={urlError && 'Invalid URL format.'}\n                  InputLabelProps={{ shrink: true }}\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n\n            <Grid container justify=\"center\" className={classes.addShowElement}>\n              <Grid item xs={12} sm={10}>\n                <FormControl variant=\"outlined\" fullWidth>\n                  <InputLabel id=\"select-type-label\">Type</InputLabel>\n                  <Select\n                    labelId=\"select-type-label\"\n                    id=\"select-type\"\n                    value={typeId}\n                    onChange={handleTypeSelect}\n                    labelWidth={35}\n                    fullWidth\n                  >\n                    {Object.values(types).map(type => (\n                      <MenuItem key={type._id} value={type._id}>\n                        {type.name}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n            </Grid>\n\n            <Grid container justify=\"center\" className={classes.addShowElement}>\n              <Grid item xs={12} sm={10}>\n                <FormControl variant=\"outlined\" fullWidth>\n                  <InputLabel id=\"select-language-label\">Language</InputLabel>\n                  <Select\n                    labelId=\"select-language-label\"\n                    id=\"select-language\"\n                    value={languageId}\n                    onChange={handleLanguageSelect}\n                    labelWidth={67}\n                    fullWidth\n                  >\n                    {Object.values(languages).map(language => (\n                      <MenuItem key={language._id} value={language._id}>\n                        {language.name}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n            </Grid>\n\n            <Grid container justify=\"center\" className={classes.addShowElement}>\n              <Grid item xs={12} sm={10}>\n                <FormControl variant=\"outlined\" fullWidth error={genreError}>\n                  <div\n                    className={clsx(\n                      genreError\n                        ? classes.multipleSelectError\n                        : classes.multipleSelect\n                    )}\n                  >\n                    <InputLabel\n                      className={classes.multipleSelectLabel}\n                      id=\"select-genres-chip-label\"\n                    >\n                      Genre (Max 3)\n                    </InputLabel>\n                    <Select\n                      labelId=\"select-genres-chip-label\"\n                      id=\"genres-chip\"\n                      value={genreIds}\n                      onChange={handleGenresSelect}\n                      labelWidth={67}\n                      input={<Input id=\"select-genres-chip\" />}\n                      renderValue={selected => (\n                        <Grid className={classes.chips}>\n                          {selected.map(value => (\n                            <Chip\n                              key={value}\n                              variant=\"outlined\"\n                              label={genres[value].name}\n                              className={classes.chip}\n                            />\n                          ))}\n                        </Grid>\n                      )}\n                      multiple\n                      fullWidth\n                    >\n                      {Object.values(genres).map(genre => (\n                        <MenuItem\n                          key={genre._id}\n                          value={genre._id}\n                          style={getStyles(genre._id)}\n                        >\n                          {genre.name}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </div>\n                  {genreError && (\n                    <FormHelperText>\n                      Can't add more than 3 genre.\n                    </FormHelperText>\n                  )}\n                </FormControl>\n              </Grid>\n            </Grid>\n\n            <Grid container justify=\"center\" className={classes.lastElement}>\n              <Grid item xs={12} sm={10}>\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  size=\"large\"\n                  disabled={urlError || name === ''}\n                  onClick={handleAddShowSubmit}\n                  fullWidth\n                >\n                  {!isAddShowSubmitLoading ? 'Add' : <CircularProgress />}\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default AddShow;\n","import React from 'react';\n\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\n\nconst ElevationScroll = props => {\n  const { children } = props;\n\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n  });\n\n  return React.cloneElement(children, {\n    style: trigger\n      ? { boxShadow: '0 5px 5px -5px #333' }\n      : { boxShadow: 'none' },\n  });\n};\n\nexport default ElevationScroll;\n","const style = theme => ({\n  loginElement: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n});\n\nexport default style;\n","import React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Link from '@material-ui/core/Link';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport style from './style';\n\nimport { regex } from '../../constants';\n\nconst Login = props => {\n  const {\n    handleOpenRegisterPopup,\n    handleCloseLoginPopup,\n    onLoginSubmit,\n    isSubmitLoginLoading,\n  } = props;\n\n  const classes = makeStyles(style)();\n\n  const [username, setUsernameValue] = React.useState('');\n  const [usernameError, setUsernameError] = React.useState(false);\n  const [password, setPasswordValue] = React.useState('');\n  const [passwordVisible, setPasswordVisibility] = React.useState(false);\n\n  const handleUsernameTyping = event => {\n    if (\n      regex.USERNAME_TYPING.test(event.target.value) ||\n      event.target.value === ''\n    ) {\n      setUsernameError(false);\n    } else {\n      setUsernameError(true);\n    }\n    setUsernameValue(event.target.value);\n  };\n\n  const checkUsername = event => {\n    if (regex.USERNAME.test(event.target.value) || event.target.value === '') {\n      setUsernameError(false);\n    } else {\n      setUsernameError(true);\n    }\n  };\n\n  const handlePasswordTyping = event => {\n    setPasswordValue(event.target.value);\n  };\n\n  const handleTogglePasswordVisibility = () => {\n    setPasswordVisibility(!passwordVisible);\n  };\n\n  const handleLoginSubmit = event => {\n    event.preventDefault();\n    onLoginSubmit(username.trim(), password);\n  };\n\n  const handleRegisterClick = event => {\n    event.preventDefault();\n    handleCloseLoginPopup();\n    setTimeout(handleOpenRegisterPopup, 500);\n  };\n\n  return (\n    <>\n      <Grid container spacing={1} justify=\"center\" alignContent=\"center\">\n        <Grid item xs={12} sm={10}>\n          <Grid container justify=\"center\" className={classes.loginElement}>\n            <Typography variant=\"h4\">Login</Typography>\n          </Grid>\n          <form onSubmit={handleLoginSubmit}>\n            <Grid container justify=\"center\" className={classes.loginElement}>\n              <Grid item xs={12} sm={10}>\n                <TextField\n                  id=\"email\"\n                  variant=\"outlined\"\n                  label=\"Username\"\n                  placeholder=\"rajnikanth\"\n                  value={username}\n                  onChange={handleUsernameTyping}\n                  onBlur={checkUsername}\n                  error={usernameError}\n                  helperText={usernameError && 'Invalid username format.'}\n                  InputLabelProps={{ shrink: true }}\n                  autoFocus\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n            <Grid container justify=\"center\" className={classes.loginElement}>\n              <Grid item xs={12} sm={10}>\n                <TextField\n                  id=\"password\"\n                  variant=\"outlined\"\n                  type={passwordVisible ? 'text' : 'password'}\n                  label=\"Password\"\n                  placeholder=\"●●●●●●●●\"\n                  value={password}\n                  onChange={handlePasswordTyping}\n                  InputLabelProps={{ shrink: true }}\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          aria-label=\"toggle password visibility\"\n                          edge=\"end\"\n                          onClick={handleTogglePasswordVisibility}\n                        >\n                          {passwordVisible ? <Visibility /> : <VisibilityOff />}\n                        </IconButton>\n                      </InputAdornment>\n                    ),\n                  }}\n                  autoComplete=\"true\"\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n            <Grid container justify=\"center\" className={classes.loginElement}>\n              <Grid item xs={12} sm={10}>\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  size=\"large\"\n                  disabled={usernameError || username === '' || password === ''}\n                  onClick={handleLoginSubmit}\n                  fullWidth\n                >\n                  {!isSubmitLoginLoading ? 'Login' : <CircularProgress />}\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Grid>\n        <Grid container justify=\"center\" className={classes.loginElement}>\n          <Grid item xs={12} sm={10}>\n            <Grid container justify=\"center\">\n              <Typography variant=\"subtitle1\">\n                Not our user yet?{' '}\n                <Link href=\"\" onClick={handleRegisterClick}>\n                  Register Here.\n                </Link>\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Login;\n","const style = theme => ({\n  registerElement: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n});\n\nexport default style;\n","import React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Link from '@material-ui/core/Link';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport style from './style';\n\nimport { regex } from '../../constants';\n\nconst Register = props => {\n  const {\n    handleOpenLoginPopup,\n    handleCloseRegisterPopup,\n    checkForUsername,\n    isCheckUsernameLoading,\n    isSubmitRegisterLoading,\n    isValidUsername,\n    onRegisterSubmit,\n  } = props;\n\n  const classes = makeStyles(style)();\n\n  const [username, setUsernameValue] = React.useState('');\n  const [usernameError, setUsernameError] = React.useState(false);\n  const [password, setPasswordValue] = React.useState('');\n  const [passwordVisible, setPasswordVisibility] = React.useState(false);\n\n  React.useEffect(() => {\n    if (username !== '' && !isValidUsername) {\n      setUsernameError('This username is already taken.');\n    } else {\n      setUsernameError(false);\n    }\n  }, [isValidUsername, username]);\n\n  const handleUsernameTyping = event => {\n    if (!isValidUsername) {\n      setUsernameError('This username is already taken.');\n    } else if (\n      regex.USERNAME_TYPING.test(event.target.value) ||\n      event.target.value === ''\n    ) {\n      setUsernameError(false);\n    } else {\n      setUsernameError('Invalid Username format');\n    }\n\n    setUsernameValue(event.target.value);\n\n    if (event.target.value !== '') {\n      checkForUsername(event.target.value);\n    }\n  };\n\n  const checkUsername = event => {\n    if (!isValidUsername) {\n      setUsernameError('This username is already taken.');\n    } else if (\n      regex.USERNAME.test(event.target.value) ||\n      event.target.value === ''\n    ) {\n      setUsernameError(false);\n    } else {\n      setUsernameError('Invalid Username format');\n    }\n\n    if (event.target.value !== '') {\n      checkForUsername(event.target.value);\n    }\n  };\n\n  const handlePasswordTyping = event => {\n    setPasswordValue(event.target.value);\n  };\n\n  const handleTogglePasswordVisibility = () => {\n    setPasswordVisibility(!passwordVisible);\n  };\n\n  const handleRegisterSubmit = event => {\n    event.preventDefault();\n    onRegisterSubmit(username.trim(), password);\n  };\n\n  const handleLoginClick = event => {\n    event.preventDefault();\n    handleCloseRegisterPopup();\n    setTimeout(handleOpenLoginPopup, 500);\n  };\n\n  return (\n    <>\n      <Grid container spacing={1} justify=\"center\" alignContent=\"center\">\n        <Grid item xs={12} sm={10}>\n          <Grid container justify=\"center\" className={classes.registerElement}>\n            <Typography variant=\"h4\">Register</Typography>\n          </Grid>\n          <form onSubmit={handleRegisterSubmit}>\n            <Grid\n              container\n              justify=\"center\"\n              className={classes.registerElement}\n            >\n              <Grid item xs={12} sm={10}>\n                <TextField\n                  id=\"email\"\n                  variant=\"outlined\"\n                  label=\"Username\"\n                  placeholder=\"rajnikanth\"\n                  value={username}\n                  onChange={handleUsernameTyping}\n                  onBlur={checkUsername}\n                  error={!!usernameError}\n                  helperText={!!usernameError && usernameError}\n                  InputLabelProps={{ shrink: true }}\n                  autoFocus\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n            <Grid\n              container\n              justify=\"center\"\n              className={classes.registerElement}\n            >\n              <Grid item xs={12} sm={10}>\n                <TextField\n                  id=\"password\"\n                  variant=\"outlined\"\n                  type={passwordVisible ? 'text' : 'password'}\n                  label=\"Password\"\n                  placeholder=\"●●●●●●●●\"\n                  value={password}\n                  onChange={handlePasswordTyping}\n                  InputLabelProps={{ shrink: true }}\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          aria-label=\"toggle password visibility\"\n                          edge=\"end\"\n                          onClick={handleTogglePasswordVisibility}\n                        >\n                          {passwordVisible ? <Visibility /> : <VisibilityOff />}\n                        </IconButton>\n                      </InputAdornment>\n                    ),\n                  }}\n                  autoComplete=\"true\"\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n            <Grid\n              container\n              justify=\"center\"\n              className={classes.registerElement}\n            >\n              <Grid item xs={12} sm={10}>\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  size=\"large\"\n                  disabled={\n                    isCheckUsernameLoading ||\n                    !!usernameError ||\n                    username === '' ||\n                    password === ''\n                  }\n                  onClick={handleRegisterSubmit}\n                  fullWidth\n                >\n                  {!isSubmitRegisterLoading ? 'Register' : <CircularProgress />}\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Grid>\n        <Grid container justify=\"center\" className={classes.registerElement}>\n          <Grid item xs={12} sm={10}>\n            <Grid container justify=\"center\">\n              <Typography variant=\"subtitle1\">\n                Already registered?{' '}\n                <Link href=\"\" onClick={handleLoginClick}>\n                  Login Here.\n                </Link>\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Register;\n","import { fade } from '@material-ui/core/styles';\n\nconst style = theme => ({\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.primary.main, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.primary.main, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    color: theme.palette.primary.dark,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: '#000',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  },\n});\n\nexport default style;\n","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport InputBase from '@material-ui/core/InputBase';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport style from './style';\n\nconst Search = props => {\n  const { getAllShows, addFilter } = props;\n\n  const classes = makeStyles(style)();\n\n  const onTypingInSearch = event => {\n    addFilter({ q: event.target.value || '' });\n    getAllShows();\n  };\n\n  return (\n    <Grid className={classes.search}>\n      <Grid className={classes.searchIcon}>\n        <SearchIcon />\n      </Grid>\n      <InputBase\n        onChange={onTypingInSearch}\n        placeholder=\"Search…\"\n        classes={{\n          root: classes.inputRoot,\n          input: classes.inputInput,\n        }}\n        inputProps={{ 'aria-label': 'search' }}\n      />\n    </Grid>\n  );\n};\n\nexport default Search;\n","const style = () => ({\n  navbar: {\n    backgroundColor: '#F7F7F7',\n  },\n  logo: {\n    cursor: 'pointer',\n    height: '7vh',\n  },\n});\n\nexport default style;\n","import React from 'react';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\nimport ExitToAppRoundedIcon from '@material-ui/icons/ExitToAppRounded';\nimport LibraryAddRoundedIcon from '@material-ui/icons/LibraryAddRounded';\nimport PersonAddRoundedIcon from '@material-ui/icons/PersonAddRounded';\n\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\n\nimport AddShow from '../AddShow';\nimport ElevationScroll from '../ElevationScroll';\nimport Login from '../Login';\nimport Register from '../Register';\nimport Search from '../Search';\nimport SlideTransition from '../SlideTransition';\n\nimport style from './style';\n\nimport { utils } from '../../constants';\n\nconst Navbar = props => {\n  const {\n    redirectToPage,\n    requestToShowToast,\n    checkForUsername,\n    onRegisterSubmit,\n    onLoginSubmit,\n    onAddShowSubmit,\n    getAllShows,\n    addFilter,\n    logoutUser,\n    isSubmitRegisterLoading,\n    isSubmitLoginLoading,\n    isAddShowSubmitLoading,\n    isCheckUsernameLoading,\n    isUserLoggedIn,\n    isValidUsername,\n    loginPopupState,\n    setLoginPopupState,\n    username,\n    types,\n    languages,\n    genres,\n  } = props;\n\n  const classes = makeStyles(style)();\n  const theme = useTheme();\n  const isMobileView = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const [registerPopupState, setRegisterPopupState] = React.useState(false);\n  const [addShowPopupState, setAddShowPopupState] = React.useState(false);\n\n  React.useEffect(() => {\n    setLoginPopupState(false);\n    setRegisterPopupState(false);\n  }, [isUserLoggedIn, setLoginPopupState]);\n\n  React.useEffect(() => {\n    if (!isAddShowSubmitLoading) {\n      setAddShowPopupState(false);\n    }\n  }, [isAddShowSubmitLoading]);\n\n  const handleLogout = () => {\n    logoutUser();\n  };\n\n  const handleOpenLoginPopup = () => {\n    setLoginPopupState(true);\n  };\n\n  const handleCloseLoginPopup = () => {\n    setLoginPopupState(false);\n  };\n\n  const handleOpenRegisterPopup = () => {\n    setRegisterPopupState(true);\n  };\n\n  const handleCloseRegisterPopup = () => {\n    setRegisterPopupState(false);\n  };\n\n  const handleOpenAddShowPopup = () => {\n    if (isUserLoggedIn) {\n      setAddShowPopupState(true);\n    } else {\n      requestToShowToast(\n        utils.MESSAGE_VARIANTS.INFO,\n        'You have to login first.'\n      );\n      setLoginPopupState(true);\n    }\n  };\n\n  const handleCloseAddShowPopup = () => {\n    if (isUserLoggedIn) {\n      setAddShowPopupState(false);\n    } else {\n      setLoginPopupState(false);\n    }\n  };\n\n  return (\n    <>\n      <ElevationScroll {...props}>\n        <AppBar className={classes.navbar} position=\"sticky\" elevation={0}>\n          <Toolbar>\n            <Grid container justify=\"space-between\" alignItems=\"center\">\n              <Grid item>\n                <img\n                  className={classes.logo}\n                  src={isMobileView ? '/bwg_mobile_logo.png' : '/bwg_logo.png'}\n                  alt=\"Binge Watcher's Guide\"\n                  onClick={() => redirectToPage('/')}\n                />\n              </Grid>\n              <Grid item>\n                <Grid container justify=\"space-between\" alignItems=\"center\">\n                  {!isMobileView && (\n                    <Grid item xs>\n                      <Search getAllShows={getAllShows} addFilter={addFilter} />\n                    </Grid>\n                  )}\n                  <Grid item xs>\n                    {isMobileView ? (\n                      <IconButton onClick={handleOpenAddShowPopup}>\n                        <LibraryAddRoundedIcon color=\"primary\" />\n                      </IconButton>\n                    ) : (\n                      <Grid container justify=\"center\" alignItems=\"center\">\n                        <Button\n                          color=\"primary\"\n                          size=\"large\"\n                          startIcon={<LibraryAddRoundedIcon />}\n                          onClick={handleOpenAddShowPopup}\n                        >\n                          Add your entry\n                        </Button>\n                      </Grid>\n                    )}\n                  </Grid>\n                  <Grid item xs>\n                    {isUserLoggedIn ? (\n                      <Grid container justify=\"center\" alignItems=\"center\">\n                        <Button\n                          color=\"primary\"\n                          size=\"large\"\n                          startIcon={<ExitToAppRoundedIcon />}\n                          onClick={handleLogout}\n                        >\n                          Logout ({username})\n                        </Button>\n                      </Grid>\n                    ) : isMobileView ? (\n                      <IconButton onClick={handleOpenLoginPopup}>\n                        <PersonAddRoundedIcon color=\"primary\" />\n                      </IconButton>\n                    ) : (\n                      <Grid container justify=\"center\" alignItems=\"center\">\n                        <Button\n                          color=\"primary\"\n                          size=\"large\"\n                          startIcon={<PersonAddRoundedIcon />}\n                          onClick={handleOpenLoginPopup}\n                        >\n                          Login\n                        </Button>\n                      </Grid>\n                    )}\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Toolbar>\n        </AppBar>\n      </ElevationScroll>\n      <Dialog\n        open={loginPopupState}\n        TransitionComponent={SlideTransition}\n        fullWidth\n        maxWidth=\"sm\"\n        keepMounted={false}\n        onClose={handleCloseLoginPopup}\n      >\n        <DialogContent>\n          <Grid container>\n            <Grid item xs={12}>\n              <Grid container justify=\"flex-end\">\n                <IconButton onClick={handleCloseLoginPopup}>\n                  <CloseRoundedIcon />\n                </IconButton>\n              </Grid>\n            </Grid>\n            <Grid item xs={12}>\n              <Login\n                onLoginSubmit={onLoginSubmit}\n                isSubmitLoginLoading={isSubmitLoginLoading}\n                handleOpenRegisterPopup={handleOpenRegisterPopup}\n                handleCloseLoginPopup={handleCloseLoginPopup}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n      </Dialog>\n      <Dialog\n        open={registerPopupState}\n        TransitionComponent={SlideTransition}\n        fullWidth\n        maxWidth=\"sm\"\n        keepMounted={false}\n        onClose={handleCloseRegisterPopup}\n      >\n        <DialogContent>\n          <Grid container>\n            <Grid item xs={12}>\n              <Grid container justify=\"flex-end\">\n                <IconButton onClick={handleCloseRegisterPopup}>\n                  <CloseRoundedIcon />\n                </IconButton>\n              </Grid>\n            </Grid>\n            <Grid item xs={12}>\n              <Register\n                checkForUsername={checkForUsername}\n                isSubmitRegisterLoading={isSubmitRegisterLoading}\n                isCheckUsernameLoading={isCheckUsernameLoading}\n                isValidUsername={isValidUsername}\n                onRegisterSubmit={onRegisterSubmit}\n                handleOpenLoginPopup={handleOpenLoginPopup}\n                handleCloseRegisterPopup={handleCloseRegisterPopup}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n      </Dialog>\n      <Dialog\n        open={addShowPopupState}\n        TransitionComponent={SlideTransition}\n        fullWidth\n        maxWidth=\"sm\"\n        keepMounted={false}\n        onClose={handleCloseAddShowPopup}\n      >\n        <DialogContent>\n          <Grid container>\n            <Grid item xs={12}>\n              <Grid container justify=\"flex-end\">\n                <IconButton onClick={handleCloseAddShowPopup}>\n                  <CloseRoundedIcon />\n                </IconButton>\n              </Grid>\n            </Grid>\n            <Grid item xs={12}>\n              <AddShow\n                isAddShowSubmitLoading={isAddShowSubmitLoading}\n                onAddShowSubmit={onAddShowSubmit}\n                types={types}\n                languages={languages}\n                genres={genres}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n};\n\nexport default Navbar;\n","import React, { Component } from 'react';\nimport { push } from 'connected-react-router';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport Chip from '@material-ui/core/Chip';\nimport Grid from '@material-ui/core/Grid';\nimport Hidden from '@material-ui/core/Hidden';\n\nimport FilterAreaMobile from '../components/FilterAreaMobile';\nimport FilterAreaWeb from '../components/FilterAreaWeb';\nimport Loading from '../components/Loading';\nimport MovieDescription from '../components/MovieDescription';\nimport Navbar from '../components/Navbar';\nimport Search from '../components/Search';\n\nimport {\n  loadingAction,\n  loginAction,\n  registerAction,\n  showsAction,\n  staticAction,\n  toastAction,\n  userAction,\n} from '../actions';\nimport { utils } from '../constants';\nimport {\n  loadingSelector,\n  showsSelector,\n  staticSelector,\n  userSelector,\n} from '../selectors';\n\nimport { logoutUser } from '../utils/users';\n\nclass IndexPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loginPopupState: false,\n    };\n  }\n\n  setLoginPopupState = popupState => {\n    this.setState({ loginPopupState: popupState });\n  };\n\n  handleOnDeleteValue = value => {\n    const { removeFilter, getAllShows } = this.props;\n\n    if (value.type === utils.FILTER_TYPES.TYPE) {\n      removeFilter({ type: value._id });\n    } else if (value.type === utils.FILTER_TYPES.LANGUAGE) {\n      removeFilter({ language: value._id });\n    } else if (value.type === utils.FILTER_TYPES.GENRE) {\n      removeFilter({ genre: value._id });\n    }\n\n    getAllShows();\n  };\n\n  componentDidMount() {\n    const { getAllStatics, getAllShows, userId } = this.props;\n\n    getAllStatics();\n    getAllShows({ userId });\n  }\n\n  render() {\n    const {\n      redirectToPage,\n      requestToShowToast,\n      getAllShows,\n      addFilter,\n      removeFilter,\n      resetFilter,\n      checkForUsername,\n      onRegisterSubmit,\n      onLoginSubmit,\n      onAddShowSubmit,\n      onUpvoteShow,\n      onDownvoteShow,\n      logoutUser,\n      isGetStaticsLoading,\n      isCheckUsernameLoading,\n      isSubmitLoginLoading,\n      isSubmitRegisterLoading,\n      isAddShowSubmitLoading,\n      isUserLoggedIn,\n      isValidUsername,\n      userId,\n      username,\n      types,\n      languages,\n      genres,\n      shows,\n      appliedFilters,\n    } = this.props;\n\n    const { loginPopupState } = this.state;\n\n    const filterChipComponent =\n      appliedFilters &&\n      appliedFilters.length > 0 &&\n      appliedFilters.map(value => (\n        <Chip\n          key={value._id + ' ' + value.type}\n          variant=\"outlined\"\n          color=\"primary\"\n          label={value.name}\n          onDelete={() => this.handleOnDeleteValue(value)}\n          style={{ padding: '.25rem', margin: '.5rem' }}\n        />\n      ));\n    return (\n      <>\n        {isGetStaticsLoading ? (\n          <Loading loading={isGetStaticsLoading} />\n        ) : (\n          <>\n            <>\n              <Navbar\n                loginPopupState={loginPopupState}\n                setLoginPopupState={this.setLoginPopupState}\n                redirectToPage={redirectToPage}\n                requestToShowToast={requestToShowToast}\n                checkForUsername={checkForUsername}\n                onRegisterSubmit={onRegisterSubmit}\n                onLoginSubmit={onLoginSubmit}\n                onAddShowSubmit={onAddShowSubmit}\n                getAllShows={getAllShows}\n                addFilter={addFilter}\n                logoutUser={logoutUser}\n                isSubmitLoginLoading={isSubmitLoginLoading}\n                isSubmitRegisterLoading={isSubmitRegisterLoading}\n                isAddShowSubmitLoading={isAddShowSubmitLoading}\n                isCheckUsernameLoading={isCheckUsernameLoading}\n                isUserLoggedIn={isUserLoggedIn}\n                isValidUsername={isValidUsername}\n                username={username}\n                types={types}\n                languages={languages}\n                genres={genres}\n              />\n            </>\n\n            <Grid container justify=\"flex-start\">\n              <Hidden mdUp>\n                <Grid container justify=\"center\" style={{ paddingTop: '1rem' }}>\n                  <Grid item xs={8}>\n                    <Search getAllShows={getAllShows} addFilter={addFilter} />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <FilterAreaMobile\n                      userId={userId}\n                      getAllShows={getAllShows}\n                      addFilter={addFilter}\n                      removeFilter={removeFilter}\n                      resetFilter={resetFilter}\n                      appliedFilters={appliedFilters}\n                      types={types}\n                      languages={languages}\n                      genres={genres}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Grid container justify=\"center\">\n                      <Grid item xs={10}>\n                        {filterChipComponent}\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Hidden>\n              <Grid item xs={12} md={8}>\n                {shows.map(show => (\n                  <MovieDescription\n                    key={show._id}\n                    isUserLoggedIn={isUserLoggedIn}\n                    requestToShowToast={requestToShowToast}\n                    onUpvoteShow={onUpvoteShow}\n                    onDownvoteShow={onDownvoteShow}\n                    loginPopupState={loginPopupState}\n                    setLoginPopupState={this.setLoginPopupState}\n                    {...show}\n                    type={types && types[show.type] && types[show.type].name}\n                    language={\n                      languages &&\n                      languages[show.language] &&\n                      languages[show.language].name\n                    }\n                    genres={show.genres.map(\n                      genreId =>\n                        genres && genres[genreId] && genres[genreId].name\n                    )}\n                  />\n                ))}\n              </Grid>\n              <Hidden smDown>\n                <Grid item md>\n                  <FilterAreaWeb\n                    userId={userId}\n                    getAllShows={getAllShows}\n                    addFilter={addFilter}\n                    removeFilter={removeFilter}\n                    resetFilter={resetFilter}\n                    appliedFilters={appliedFilters}\n                    types={types}\n                    languages={languages}\n                    genres={genres}\n                  />\n                </Grid>\n              </Hidden>\n            </Grid>\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  redirectToPage: url => {\n    return dispatch(push(url));\n  },\n  getAllStatics: () => {\n    dispatch(loadingAction.startGetStaticsLoading());\n    return dispatch(staticAction.getAllStatics());\n  },\n  getAllShows: () => {\n    return dispatch(showsAction.getAllShows());\n  },\n  addFilter: filter => {\n    return dispatch(staticAction.addFilter(filter));\n  },\n  removeFilter: filter => {\n    return dispatch(staticAction.removeFilter(filter));\n  },\n  resetFilter: () => {\n    return dispatch(staticAction.resetFilter());\n  },\n  requestToShowToast: (variant, message) => {\n    return dispatch(toastAction.requestToShowToast(variant, message));\n  },\n  checkForUsername: username => {\n    dispatch(loadingAction.startCheckUsernameLoading());\n    return dispatch(registerAction.checkUsername(username));\n  },\n  onRegisterSubmit: (username, password) => {\n    dispatch(loadingAction.startRegisterLoading());\n    return dispatch(registerAction.registerUser(username, password));\n  },\n  onLoginSubmit: (username, password) => {\n    dispatch(loadingAction.startLoginLoading());\n    return dispatch(loginAction.submitForLogin(username, password));\n  },\n  onAddShowSubmit: show => {\n    dispatch(loadingAction.startAddShowLoading());\n    return dispatch(showsAction.addShow(show));\n  },\n  logoutUser: () => {\n    logoutUser();\n    dispatch(showsAction.resetVotes());\n    return dispatch(userAction.resetUserData());\n  },\n  onUpvoteShow: (showId, isUpvote) => {\n    dispatch(loadingAction.startVoteShowLoading());\n    return dispatch(showsAction.upvoteShow(showId, isUpvote));\n  },\n  onDownvoteShow: (showId, isDownvote) => {\n    dispatch(loadingAction.startVoteShowLoading());\n    return dispatch(showsAction.downvoteShow(showId, isDownvote));\n  },\n});\n\nconst mapStateToProps = createStructuredSelector({\n  isGetStaticsLoading: loadingSelector.getStaticsLoadingState(),\n  isGetAllShowsLoading: loadingSelector.getAllShowsLoadingState(),\n  isCheckUsernameLoading: loadingSelector.getCheckUsernameLoadingState(),\n  isSubmitLoginLoading: loadingSelector.getLoginLoadingState(),\n  isSubmitRegisterLoading: loadingSelector.getRegisterLoadingState(),\n  isAddShowSubmitLoading: loadingSelector.getAddShowSubmitLoadingState(),\n  isUserLoggedIn: userSelector.isUserLoggedIn(),\n  isValidUsername: userSelector.isValidUsername(),\n  userId: userSelector.getCurrentUserId(),\n  username: userSelector.getCurrentUsername(),\n  types: staticSelector.getAllTypes(),\n  languages: staticSelector.getAllLanguages(),\n  genres: staticSelector.getAllGenres(),\n  shows: showsSelector.getAllShows(),\n  appliedFilters: staticSelector.getAppliedFilters(),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IndexPage);\n","import { amber, blue, green, red } from '@material-ui/core/colors';\n\nconst style = theme => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: red[500],\n  },\n  info: {\n    backgroundColor: blue[400],\n  },\n  warning: {\n    backgroundColor: amber[800],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n});\n\nexport default style;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport clsx from 'clsx';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport style from './style';\n\nimport { toastAction } from '../../actions';\nimport { toastSelector } from '../../selectors';\n\nclass Toast extends Component {\n  onClose = () => {\n    const { hideToast } = this.props;\n    hideToast();\n  };\n\n  render() {\n    const { toastState, toastMessage, toastVariant, classes } = this.props;\n    const toastPosition = { vertical: 'bottom', horizontal: 'left' };\n\n    const variantIcon = {\n      success: CheckCircleIcon,\n      warning: WarningIcon,\n      error: ErrorIcon,\n      info: InfoIcon,\n    };\n\n    const ToastIcon = variantIcon[toastVariant];\n\n    const toastIcon = toastVariant && (\n      <ToastIcon className={clsx(classes.icon, classes.iconVariant)} />\n    );\n\n    return (\n      <Snackbar\n        autoHideDuration={3000}\n        open={toastState}\n        anchorOrigin={toastPosition}\n        onClose={this.onClose}\n        transitionDuration={100}\n        action={[\n          <IconButton\n            key=\"close\"\n            aria-label=\"close\"\n            color=\"inherit\"\n            onClick={this.onClose}\n          >\n            <CloseIcon />\n          </IconButton>,\n        ]}\n      >\n        <SnackbarContent\n          className={clsx(classes[toastVariant], classes.icon)}\n          message={\n            <span id=\"snackbar-message\" className={classes.message}>\n              {toastIcon}\n              {toastMessage}\n            </span>\n          }\n          action={[\n            <IconButton\n              key=\"close\"\n              aria-label=\"close\"\n              color=\"inherit\"\n              onClick={this.onClose}\n            >\n              <CloseIcon className={classes.icon} />\n            </IconButton>,\n          ]}\n        />\n      </Snackbar>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  hideToast: () => dispatch(toastAction.hideToast()),\n});\n\nconst mapStateToProps = createStructuredSelector({\n  toastState: toastSelector.getToastState(),\n  toastMessage: toastSelector.getToastMessage(),\n  toastVariant: toastSelector.getToastVariant(),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(style)(Toast));\n","import React, { lazy, Suspense } from 'react';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { Helmet } from 'react-helmet';\nimport { Provider } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\n\nimport history from './utils/history';\nimport reduxStore from './utils/store';\nimport CustomTheme from './utils/theme';\n\nimport IndexPage from './pages/Index.page';\n\nimport Loading from './components/Loading';\nimport Toast from './components/Toast';\n\n// Lazy Load\nconst NotFoundPage = lazy(() => import('./pages/NotFound.page'));\n\nconst App = () => {\n  return (\n    <Provider store={reduxStore}>\n      <Helmet\n        titleTemplate=\"%s - Binge Watcher's Guide\"\n        defaultTitle=\"Binge Watcher's Guide - Complete Movie and Series Directory\"\n      >\n        <meta\n          name=\"description\"\n          content=\"Binge Watcher's Guide - Complete Movie and Series Directory\"\n        />\n      </Helmet>\n      <ConnectedRouter history={history}>\n        <Toast />\n        <ThemeProvider theme={CustomTheme}>\n          <Suspense fallback={<Loading />}>\n            <Switch>\n              <Route exact path=\"/\" component={IndexPage} />\n              <Route component={NotFoundPage} />\n            </Switch>\n          </Suspense>\n        </ThemeProvider>\n      </ConnectedRouter>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}