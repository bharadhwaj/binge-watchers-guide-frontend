{"version":3,"sources":["utils/history.js","constants/actions.js","reducers/loading.reducer.js","reducers/shows.reducer.js","constants/regex.js","constants/storage.js","constants/urls.js","constants/utils.js","schemas/static.schema.js","reducers/static.reducer.js","reducers/toast.reducer.js","utils/users.js","reducers/user.reducer.js","reducers/index.js","actions/loading.action.js","actions/login.action.js","actions/register.action.js","actions/shows.action.js","actions/static.action.js","actions/toast.action.js","actions/user.action.js","utils/errorHandler.js","sagas/login.saga.js","sagas/register.saga.js","selectors/loading.selector.js","selectors/shows.selector.js","selectors/static.selector.js","selectors/toast.selector.js","selectors/user.selector.js","sagas/shows.saga.js","sagas/static.saga.js","sagas/toast.saga.js","sagas/index.js","utils/token.js","utils/store.js","utils/theme.js","components/ListFilters/style.js","components/ListFilters/index.js","components/FilterArea/style.js","components/FilterArea/index.js","components/SlideTransition/index.js","components/FilterAreaMobile/index.js","components/FilterAreaWeb/style.js","components/FilterAreaWeb/index.js","components/Loading/index.js","components/MovieDescriptionCard/style.js","components/MovieDescriptionCard/index.js","components/VoteArea/style.js","components/VoteArea/index.js","components/MovieDescription/style.js","components/MovieDescription/index.js","components/AddShow/style.js","components/AddShow/index.js","components/ElevationScroll/index.js","components/Login/style.js","components/Login/index.js","components/Register/style.js","components/Register/index.js","components/Navbar/style.js","components/Navbar/index.js","pages/Index.page.js","components/Toast/style.js","components/Toast/index.js","App.js","serviceWorker.js","index.js"],"names":["history","createBrowserHistory","LOADING","START_GET_STATICS_LOADING","STOP_GET_STATICS_LOADING","START_GET_ALL_SHOWS_LOADING","STOP_GET_ALL_SHOWS_LOADING","START_CHECK_USERNAME_LOADING","STOP_CHECK_USERNAME_LOADING","START_REGISTER_LOADING","STOP_REGISTER_LOADING","START_LOGIN_LOADING","STOP_LOGIN_LOADING","START_ADD_SHOW_LOADING","STOP_ADD_SHOW_LOADING","START_VOTE_SHOW_LOADING","STOP_VOTE_SHOW_LOADING","TOAST","REQUEST_TO_SHOW_TOAST","SHOW_TOAST","HIDE_TOAST","REGISTER","CHECK_USERNAME","REGISTER_USER","LOGIN","SUBMIT_FOR_LOGIN","RESET_LOGIN_STATE","USER","UPDATE_USER_DATA","SET_USERNAME_STATUS","RESET_USER_DATA","STATIC","GET_ALL_STATICS","UPDATE_TYPE_DATA","UPDATE_LANGUAGE_DATA","UPDATE_GENRE_DATA","SHOWS","GET_ALL_SHOWS","ADD_SHOW","APPEND_SHOWS","UPDATE_SHOWS","RESET_VOTES","UPVOTE_SHOW","DOWNVOTE_SHOW","initialState","isGetStaticsLoading","isGetAllShowsLoading","isCheckUsernameLoading","isRegisterSubmitLoading","isLoginSubmitLoading","isAddShowSubmitLoading","loadingReducer","state","action","type","shows","staticReducer","currentShows","newShows","payload","newShowIds","Set","map","show","_id","mergedShows","filter","has","haveUpvoted","haveDownvoted","USERNAME","USERNAME_TYPING","URL","IS_LOGGED_IN","EXPIRE_AT","ID","TOKEN","BASE_URL","process","REGISTER_URL","LOGIN_URL","GET_STATICS","ADD_SHOWS","MESSAGE_VARIANTS","SUCCESS","WARNING","INFO","ERROR","APPLICATION_ERROR_STATUS_CODES","INTERNAL_SERVER_ERROR","UNAUTHORIZED","FORBIDDEN","MISSING_PARAMS","NOT_FOUND","NOT_ALLOWED","FILTER_TYPES","TYPE","LANGUAGE","GENRE","formatData","schema","Entity","idAttribute","processStrategy","value","isChecked","normalizeData","data","normalize","mergeData","currentData","newData","newDataIds","Object","keys","id","types","languages","genres","staticSchema","utils","entities","formattedData","message","variant","toastReducer","updateUserLoginInfo","userInfo","decodedToken","decode","token","expiryEpoch","exp","localStorage","setItem","username","updateUserInfo","checkIfUserIsLoggedIn","isLoggedIn","getItem","expireAt","Date","logoutUser","removeItem","notLoggedInState","isValidUsername","userReducer","status","rootReducer","combineReducers","router","connectRouter","toast","loading","static","user","showsReducer","startGetStaticsLoading","stopGetStaticsLoading","startGetAllShowsLoading","stopGetAllShowsLoading","startCheckUsernameLoading","stopCheckUsernameLoading","startRegisterLoading","stopRegisterLoading","startLoginLoading","stopLoginLoading","startAddShowLoading","stopAddShowLoading","startVoteShowLoading","stopVoteShowLoading","submitForLogin","password","resetLoginState","checkUsername","registerUser","getAllShows","userId","addShow","appendShows","updateShows","resetVotes","upvoteShow","showId","isUpvote","downvoteShow","isDownvote","getAllStatics","updateTypeData","updateLanguageData","updateGenreData","requestToShowToast","showToast","hideToast","updateUserData","setUsernameStatus","resetUserData","handleError","axios","interceptors","response","use","error","store","dispatch","toastAction","Promise","reject","loginSubmitWorker","loginSubmitWatcher","loginSaga","requestURL","urls","body","headers","post","put","loadingAction","userAction","showsAction","takeLatest","actions","all","checkUsernameWorker","registerSubmitWorker","checkUsernameWatcher","registerSubmitWatcher","registerSaga","replace","get","success","debounce","selectLoadingState","getStaticsLoadingState","createSelector","loadingState","getAllShowsLoadingState","getRegisterLoadingState","getLoginLoadingState","getCheckUsernameLoadingState","getAddShowSubmitLoadingState","selectShowsState","showState","sort","showA","showB","created_at","selectStaticState","getAllTypes","staticState","getAllLanguages","getAllGenres","selectToastState","getToastState","toastState","getToastMessage","getToastVariant","selectUserState","isUserLoggedIn","userState","getAuthToken","getCurrentUserId","getCurrentUsername","getAllShowsWorker","addShowWorker","upvoteShowWorker","downvoteShowWorker","getAllShowsWatcher","addShowWatcher","upvoteShowWatcher","downvoteShowWatcher","showsSaga","select","userSelector","authToken","Authorization","params","user_id","length","join","isFilterApiCall","takeEvery","getAllStaticsWorker","getAllStaticsWatcher","staticSaga","staticAction","showToastWorker","showToastWatcher","toastSaga","toastSelector","toastVariant","toastMessage","delay","rootSaga","fork","checkTokenExpiration","next","tokenExpireAt","storage","sagaMiddleWare","createSagaMiddleware","composeEnhancers","compose","enhancers","applyMiddleware","routerMiddleware","createStore","run","CustomTheme","createMuiTheme","typography","fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","palette","primary","light","main","dark","secondary","style","filterArea","paddingTop","paddingBottom","expansionPanelHeading","borderBottom","expansionPanelBody","padding","filterListArea","width","maxHeight","overflow","ListFilters","props","title","values","expanded","handleExpansion","handleOnCheckBoxClick","classes","makeStyles","Grid","className","item","xs","ExpansionPanel","square","ExpansionPanelSummary","clsx","expandIcon","onClick","Typography","ExpansionPanelDetails","List","ListItem","key","role","undefined","dense","button","ListItemIcon","Checkbox","edge","checked","tabIndex","disableRipple","ListItemText","name","theme","margin","spacing","filterChipsArea","marginTop","marginBottom","backgroundColor","chips","divider","FilterArea","React","useState","allFilterValues","setFilterValues","setTypes","setLanguages","setGenres","useEffect","typeExpanded","setTypeExpansion","languageExpanded","setLanguageExpansion","genreExpanded","setGenreExpansion","currentValue","newFilterValues","applyFilter","typesList","languagesList","genresList","push","filterChipComponent","Chip","color","label","onDelete","newTypes","newLanguages","newGenres","container","justify","Button","fullWidth","disabled","Paper","elevation","Hidden","smDown","md","mdUp","Divider","SlideTransition","forwardRef","ref","Slide","direction","FilterAreaMobile","openFilterArea","setFilterAreaState","handleCloseFilterArea","size","startIcon","Dialog","open","TransitionComponent","fullScreen","maxWidth","keepMounted","onClose","AppBar","position","Toolbar","IconButton","FilterAreaWeb","Card","CardContent","Loading","alignItems","height","descriptionArea","paddingRight","breakpoints","down","titleArea","fontWeight","watchButton","paddingLeft","metadataArea","tabArea","languageIcon","languageText","marginLeft","typeIcon","typeText","genreIcon","genreTab","MovieDescriptionCard","useTheme","isMobileView","useMediaQuery","url","language","genreComponent","genre","index","endIcon","disableElevation","window","sm","display","element","icons","text","upvoted","downvoted","vote","marginRight","VoteArea","setLoginPopupState","onUpvoteShow","onDownvoteShow","upvotes","downvotes","votes","cardArea","dividerArea","MovieDescription","orientation","flexItem","addShowElement","multipleSelect","border","borderRadius","multipleSelectError","multipleSelectLabel","background","flexWrap","chip","lastElement","AddShow","onAddShowSubmit","setNameValue","setUrlValue","urlError","setUrlError","typeId","setTypeValue","languageId","setLanguageValue","genreIds","setGenresValue","genreError","setGenreError","handleAddShowSubmit","event","preventDefault","alignContent","onSubmit","TextField","placeholder","onChange","target","InputLabelProps","shrink","autoFocus","onBlur","regex","test","helperText","FormControl","InputLabel","Select","labelId","labelWidth","MenuItem","input","Input","renderValue","selected","multiple","genreId","indexOf","FormHelperText","CircularProgress","ElevationScroll","children","trigger","useScrollTrigger","disableHysteresis","threshold","cloneElement","boxShadow","loginElement","Login","handleOpenRegisterPopup","handleCloseLoginPopup","onLoginSubmit","isSubmitLoginLoading","setUsernameValue","usernameError","setUsernameError","setPasswordValue","passwordVisible","setPasswordVisibility","handleLoginSubmit","InputProps","endAdornment","InputAdornment","aria-label","autoComplete","Link","href","setTimeout","registerElement","Register","handleOpenLoginPopup","handleCloseRegisterPopup","checkForUsername","isSubmitRegisterLoading","onRegisterSubmit","handleRegisterSubmit","navbar","logo","cursor","Navbar","redirectToPage","loginPopupState","registerPopupState","setRegisterPopupState","addShowPopupState","setAddShowPopupState","handleOpenAddShowPopup","handleCloseAddShowPopup","src","alt","DialogContent","IndexPage","popupState","setState","this","Component","mapStateToProps","createStructuredSelector","loadingSelector","staticSelector","showsSelector","connect","registerAction","loginAction","green","red","info","blue","warning","amber","icon","iconVariant","opacity","Toast","ToastIcon","CheckCircleIcon","WarningIcon","ErrorIcon","InfoIcon","toastIcon","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","transitionDuration","SnackbarContent","withStyles","NotFoundPage","lazy","App","reduxStore","Helmet","titleTemplate","defaultTitle","content","ThemeProvider","fallback","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.c836aaf3.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport default history;\n","// ------------------ LOADING ACTIONS ------------------ //\nexport const LOADING = {\n  START_GET_STATICS_LOADING: 'bwg/Loading/START_GET_STATICS_LOADING',\n  STOP_GET_STATICS_LOADING: 'bwg/Loading/STOP_GET_STATICS_LOADING',\n  START_GET_ALL_SHOWS_LOADING: 'bwg/Loading/START_GET_ALL_SHOWS_LOADING',\n  STOP_GET_ALL_SHOWS_LOADING: 'bwg/Loading/STOP_GET_ALL_SHOWS_LOADING',\n  START_CHECK_USERNAME_LOADING: 'bwg/Loading/START_CHECK_USERNAME_LOADING',\n  STOP_CHECK_USERNAME_LOADING: 'bwg/Loading/STOP_CHECK_USERNAME_LOADING',\n  START_REGISTER_LOADING: 'bwg/Loading/START_REGISTER_LOADING',\n  STOP_REGISTER_LOADING: 'bwg/Loading/STOP_REGISTER_LOADING',\n  START_LOGIN_LOADING: 'bwg/Loading/START_LOGIN_LOADING',\n  STOP_LOGIN_LOADING: 'bwg/Loading/STOP_LOGIN_LOADING',\n  START_ADD_SHOW_LOADING: 'bwg/Loading/START_ADD_SHOW_LOADING',\n  STOP_ADD_SHOW_LOADING: 'bwg/Loading/STOP_ADD_SHOW_LOADING',\n  START_VOTE_SHOW_LOADING: 'bwg/Loading/START_VOTE_SHOW_LOADING',\n  STOP_VOTE_SHOW_LOADING: 'bwg/Loading/STOP_VOTE_SHOW_LOADING',\n};\n\n// ------------------ TOAST ACTIONS ------------------ //\nexport const TOAST = {\n  REQUEST_TO_SHOW_TOAST: 'bwg/Toast/REQUEST_TO_SHOW_TOAST',\n  SHOW_TOAST: 'bwg/Toast/SHOW_TOAST',\n  HIDE_TOAST: 'bwg/Toast/HIDE_TOAST',\n};\n\n// ------------------ REGISTER ACTIONS ------------------ //\nexport const REGISTER = {\n  CHECK_USERNAME: 'bwg/Register/CHECK_USERNAME',\n  REGISTER_USER: 'bwg/Register/REGISTER_USER',\n};\n\n// ------------------ LOGIN ACTIONS ------------------ //\nexport const LOGIN = {\n  SUBMIT_FOR_LOGIN: 'bwg/Login/SUBMIT_FOR_LOGIN',\n  RESET_LOGIN_STATE: 'bwg/Login/RESET_LOGIN_STATE',\n};\n\n// ------------------ USER ACTIONS ------------------ //\nexport const USER = {\n  UPDATE_USER_DATA: 'bwg/User/UPDATE_USER_DATA',\n  SET_USERNAME_STATUS: 'bwg/User/SET_USERNAME_STATUS',\n  RESET_USER_DATA: 'bwg/User/RESET_USER_DATA',\n};\n\n// ------------------ STATIC ACTIONS ------------------ //\nexport const STATIC = {\n  GET_ALL_STATICS: 'bwg/Static/GET_ALL_STATICS',\n  UPDATE_TYPE_DATA: 'bwg/Static/UPDATE_TYPE_DATA',\n  UPDATE_LANGUAGE_DATA: 'bwg/Static/UPDATE_LANGUAGE_DATA',\n  UPDATE_GENRE_DATA: 'bwg/Static/UPDATE_GENRE_DATA',\n};\n\n// ------------------ SHOWS ACTIONS ------------------ //\nexport const SHOWS = {\n  GET_ALL_SHOWS: 'bwg/Shows/GET_ALL_SHOWS',\n  ADD_SHOW: 'bwg/Shows/ADD_SHOW',\n  APPEND_SHOWS: 'bwg/Shows/APPEND_SHOWS',\n  UPDATE_SHOWS: 'bwg/Shows/UPDATE_SHOWS',\n  RESET_VOTES: 'bwg/Shows/RESET_VOTES',\n  UPVOTE_SHOW: 'bwg/Shows/UPVOTE_SHOW',\n  DOWNVOTE_SHOW: 'bwg/Shows/DOWNVOTE_SHOW',\n};\n","import { LOADING } from '../constants/actions';\n\nconst initialState = {\n  isGetStaticsLoading: false,\n  isGetAllShowsLoading: false,\n  isCheckUsernameLoading: false,\n  isRegisterSubmitLoading: false,\n  isLoginSubmitLoading: false,\n  isAddShowSubmitLoading: false,\n};\n\nexport default function loadingReducer(state = initialState, action) {\n  switch (action.type) {\n    case LOADING.START_GET_STATICS_LOADING:\n      return {\n        ...state,\n        isGetStaticsLoading: true,\n      };\n\n    case LOADING.STOP_GET_STATICS_LOADING:\n      return {\n        ...state,\n        isGetStaticsLoading: false,\n      };\n\n    case LOADING.START_GET_ALL_SHOWS_LOADING:\n      return {\n        ...state,\n        isGetAllShowsLoading: true,\n      };\n\n    case LOADING.STOP_GET_ALL_SHOWS_LOADING:\n      return {\n        ...state,\n        isGetAllShowsLoading: false,\n      };\n\n    case LOADING.START_CHECK_USERNAME_LOADING:\n      return {\n        ...state,\n        isCheckUsernameLoading: true,\n      };\n\n    case LOADING.STOP_CHECK_USERNAME_LOADING:\n      return {\n        ...state,\n        isCheckUsernameLoading: false,\n      };\n\n    case LOADING.START_REGISTER_LOADING:\n      return {\n        ...state,\n        isRegisterSubmitLoading: true,\n      };\n\n    case LOADING.STOP_REGISTER_LOADING:\n      return {\n        ...state,\n        isRegisterSubmitLoading: false,\n      };\n\n    case LOADING.START_LOGIN_LOADING:\n      return {\n        ...state,\n        isLoginSubmitLoading: true,\n      };\n\n    case LOADING.STOP_LOGIN_LOADING:\n      return {\n        ...state,\n        isLoginSubmitLoading: false,\n      };\n\n    case LOADING.START_ADD_SHOW_LOADING:\n      return {\n        ...state,\n        isAddShowSubmitLoading: true,\n      };\n\n    case LOADING.STOP_ADD_SHOW_LOADING:\n      return {\n        ...state,\n        isAddShowSubmitLoading: false,\n      };\n\n    default:\n      return { ...state };\n  }\n}\n","import { SHOWS } from '../constants/actions';\n\nconst initialState = {\n  shows: [],\n};\n\nexport default function staticReducer(state = initialState, action) {\n  switch (action.type) {\n    case SHOWS.APPEND_SHOWS: {\n      const currentShows = state.shows;\n      const newShows = action.payload.shows;\n      const newShowIds = new Set(newShows.map(show => show._id));\n      const mergedShows = [\n        ...newShows,\n        ...currentShows.filter(show => !newShowIds.has(show._id)),\n      ];\n\n      return {\n        ...state,\n        shows: [...mergedShows],\n      };\n    }\n\n    case SHOWS.UPDATE_SHOWS:\n      return {\n        ...state,\n        shows: [...action.payload.shows],\n      };\n\n    case SHOWS.RESET_VOTES: {\n      const currentShows = [...state.shows].map(show => ({\n        ...show,\n        haveUpvoted: false,\n        haveDownvoted: false,\n      }));\n\n      return {\n        ...state,\n        shows: currentShows,\n      };\n    }\n\n    default:\n      return { ...state };\n  }\n}\n","export const USERNAME = /^[a-z][a-z'-_.]{2,}$/i;\nexport const USERNAME_TYPING = /^[a-z][a-z'-_.]*$/i;\n\nexport const URL = /((?:https?:\\/\\/)[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,24}\\b(?:[-a-zA-Z0-9()@:%_+.~#?&\\/\\/=]*)?)/gi;\n","export const USER = {\n  IS_LOGGED_IN: 'U_i_l_i',\n  EXPIRE_AT: 'U_w_e_b',\n  ID: 'U_i',\n  TOKEN: 'U_p_k',\n  USERNAME: 'U_n',\n};\n","const BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nexport const CHECK_USERNAME = `${BASE_URL}/users/username/<USER_NAME>`;\nexport const REGISTER_URL = `${BASE_URL}/users`;\nexport const LOGIN_URL = `${BASE_URL}/users/auth`;\n\nexport const GET_STATICS = `${BASE_URL}/shows/statics`;\n\nexport const GET_ALL_SHOWS = `${BASE_URL}/shows`;\nexport const ADD_SHOWS = `${BASE_URL}/users/<USER_ID>/shows`;\n\nexport const UPVOTE_SHOW = `${BASE_URL}/users/<USER_ID>/shows/<SHOW_ID>/upvote`;\nexport const DOWNVOTE_SHOW = `${BASE_URL}/users/<USER_ID>/shows/<SHOW_ID>/downvote`;\n","export const MESSAGE_VARIANTS = {\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  INFO: 'info',\n  ERROR: 'error',\n};\n\nexport const APPLICATION_ERROR_STATUS_CODES = {\n  INTERNAL_SERVER_ERROR: 500,\n  UNAUTHORIZED: 401,\n  FORBIDDEN: 403,\n  MISSING_PARAMS: 422,\n  NOT_FOUND: 404,\n  NOT_ALLOWED: 409,\n};\n\nexport const FILTER_TYPES = {\n  TYPE: 'TYPE',\n  LANGUAGE: 'LANGUAGE',\n  GENRE: 'GENRE',\n};\n","import { normalize, schema } from 'normalizr';\n\nexport const formatData = type =>\n  new schema.Entity(\n    'formattedData',\n    {},\n    {\n      idAttribute: '_id',\n      processStrategy: value => {\n        return {\n          ...value,\n          type,\n          isChecked: false,\n        };\n      },\n    }\n  );\n\nexport const normalizeData = (type, data) =>\n  normalize(data, [formatData(type)]);\n\nexport const mergeData = (currentData, newData = {}) => {\n  const newDataIds = Object.keys(newData);\n  for (let id of newDataIds) {\n    if (currentData[id]) {\n      newData[id] = {\n        ...currentData[id],\n        ...newData[id],\n      };\n    }\n  }\n  return { ...currentData, ...newData };\n};\n","import { STATIC } from '../constants/actions';\n\nimport { utils } from '../constants';\nimport { staticSchema } from '../schemas';\n\nconst initialState = {\n  types: {},\n  languages: {},\n  genres: {},\n};\n\nexport default function staticReducer(state = initialState, action) {\n  switch (action.type) {\n    case STATIC.UPDATE_TYPE_DATA: {\n      const { entities } = staticSchema.normalizeData(\n        utils.FILTER_TYPES.TYPE,\n        action.payload.types\n      );\n\n      const { formattedData } = entities;\n\n      return {\n        ...state,\n        types: { ...formattedData },\n      };\n    }\n\n    case STATIC.UPDATE_LANGUAGE_DATA: {\n      const { entities } = staticSchema.normalizeData(\n        utils.FILTER_TYPES.LANGUAGE,\n        action.payload.languages\n      );\n\n      const { formattedData } = entities;\n\n      return {\n        ...state,\n        languages: { ...formattedData },\n      };\n    }\n\n    case STATIC.UPDATE_GENRE_DATA: {\n      const { entities } = staticSchema.normalizeData(\n        utils.FILTER_TYPES.GENRE,\n        action.payload.genres\n      );\n\n      const { formattedData } = entities;\n\n      return {\n        ...state,\n        genres: { ...formattedData },\n      };\n    }\n\n    default:\n      return { ...state };\n  }\n}\n","import { TOAST } from '../constants/actions';\n\nconst initialState = {\n  show: false,\n  message: null,\n  variant: null,\n};\n\nexport default function toastReducer(state = initialState, action) {\n  switch (action.type) {\n    case TOAST.REQUEST_TO_SHOW_TOAST:\n      return {\n        ...state,\n        message: action.payload.message,\n        variant: action.payload.variant,\n      };\n\n    case TOAST.SHOW_TOAST:\n      return {\n        ...state,\n        show: true,\n        message: action.payload.message,\n        variant: action.payload.variant,\n      };\n\n    case TOAST.HIDE_TOAST:\n      return {\n        ...state,\n        show: false,\n        message: null,\n        variant: null,\n      };\n\n    default:\n      return { ...state };\n  }\n}\n","import { decode } from 'jsonwebtoken';\n\nimport { USER } from '../constants/storage';\n\nexport const updateUserInfo = userInfo => {\n  userInfo._id && localStorage.setItem(USER.ID, userInfo._id);\n  userInfo.token && localStorage.setItem(USER.TOKEN, userInfo.token);\n  userInfo.username && localStorage.setItem(USER.USERNAME, userInfo.username);\n};\n\nexport const updateUserLoginInfo = userInfo => {\n  const decodedToken = decode(userInfo.token);\n  const expiryEpoch = decodedToken && decodedToken.exp * 1000;\n\n  localStorage.setItem(USER.IS_LOGGED_IN, 1);\n  localStorage.setItem(USER.EXPIRE_AT, expiryEpoch);\n  updateUserInfo(userInfo);\n};\n\nexport const checkIfUserIsLoggedIn = () => {\n  const isLoggedIn = +localStorage.getItem(USER.IS_LOGGED_IN);\n  const expireAt = +localStorage.getItem(USER.EXPIRE_AT);\n\n  if (expireAt && isLoggedIn === 1 && new Date(expireAt) > new Date()) {\n    const userInfo = {};\n    userInfo.isLoggedIn = true;\n    userInfo.expireAt = +localStorage.getItem(USER.EXPIRE_AT);\n    userInfo._id = localStorage.getItem(USER.ID);\n    userInfo.token = localStorage.getItem(USER.TOKEN);\n    userInfo.username = localStorage.getItem(USER.USERNAME);\n\n    return { isLoggedIn: true, userInfo };\n  }\n\n  return { isLoggedIn: false, userInfo: null };\n};\n\nexport const removeUserInfo = () => {\n  localStorage.removeItem(USER.IS_LOGGED_IN);\n  localStorage.removeItem(USER.EXPIRE_AT);\n  localStorage.removeItem(USER.ID);\n  localStorage.removeItem(USER.TOKEN);\n  localStorage.removeItem(USER.USERNAME);\n};\n\nexport const logoutUser = () => {\n  removeUserInfo();\n};\n","import { USER } from '../constants/actions';\nimport { checkIfUserIsLoggedIn } from '../utils/users';\n\nconst { isLoggedIn, userInfo } = checkIfUserIsLoggedIn();\n\nconst notLoggedInState = {\n  isLoggedIn: false,\n  _id: null,\n  username: null,\n  token: null,\n  isValidUsername: true,\n};\n\nconst initialState = isLoggedIn ? userInfo : notLoggedInState;\n\nexport default function userReducer(state = initialState, action) {\n  switch (action.type) {\n    case USER.UPDATE_USER_DATA:\n      return {\n        ...state,\n        isLoggedIn: true,\n        _id: action.payload.userInfo._id,\n        username: action.payload.userInfo.username,\n        token: action.payload.userInfo.token,\n      };\n\n    case USER.SET_USERNAME_STATUS:\n      return {\n        ...state,\n        isValidUsername: action.payload.status,\n      };\n\n    case USER.RESET_USER_DATA:\n      return {\n        ...notLoggedInState,\n      };\n\n    default:\n      return { ...state };\n  }\n}\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\n\nimport loadingReducer from './loading.reducer';\nimport showsReducer from './shows.reducer';\nimport staticReducer from './static.reducer';\nimport toastReducer from './toast.reducer';\nimport userReducer from './user.reducer';\n\nconst rootReducer = history =>\n  combineReducers({\n    router: connectRouter(history),\n    toast: toastReducer,\n    loading: loadingReducer,\n    static: staticReducer,\n    user: userReducer,\n    shows: showsReducer,\n  });\n\nexport default rootReducer;\n","import { LOADING } from '../constants/actions';\n\nexport function startGetStaticsLoading() {\n  return { type: LOADING.START_GET_STATICS_LOADING };\n}\n\nexport function stopGetStaticsLoading() {\n  return { type: LOADING.STOP_GET_STATICS_LOADING };\n}\n\nexport function startGetAllShowsLoading() {\n  return { type: LOADING.START_GET_ALL_SHOWS_LOADING };\n}\n\nexport function stopGetAllShowsLoading() {\n  return { type: LOADING.STOP_GET_ALL_SHOWS_LOADING };\n}\n\nexport function startCheckUsernameLoading() {\n  return { type: LOADING.START_CHECK_USERNAME_LOADING };\n}\n\nexport function stopCheckUsernameLoading() {\n  return { type: LOADING.STOP_CHECK_USERNAME_LOADING };\n}\n\nexport function startRegisterLoading() {\n  return { type: LOADING.START_REGISTER_LOADING };\n}\n\nexport function stopRegisterLoading() {\n  return { type: LOADING.STOP_REGISTER_LOADING };\n}\n\nexport function startLoginLoading() {\n  return { type: LOADING.START_LOGIN_LOADING };\n}\n\nexport function stopLoginLoading() {\n  return { type: LOADING.STOP_LOGIN_LOADING };\n}\n\nexport function startAddShowLoading() {\n  return { type: LOADING.START_ADD_SHOW_LOADING };\n}\n\nexport function stopAddShowLoading() {\n  return { type: LOADING.STOP_ADD_SHOW_LOADING };\n}\n\nexport function startVoteShowLoading() {\n  return { type: LOADING.START_VOTE_SHOW_LOADING };\n}\n\nexport function stopVoteShowLoading() {\n  return { type: LOADING.STOP_VOTE_SHOW_LOADING };\n}\n","import { LOGIN } from '../constants/actions';\n\nexport function submitForLogin(username, password) {\n  return { type: LOGIN.SUBMIT_FOR_LOGIN, payload: { username, password } };\n}\n\nexport function resetLoginState() {\n  return { type: LOGIN.RESET_LOGIN_STATE };\n}\n","import { REGISTER } from '../constants/actions';\n\nexport function checkUsername(username) {\n  return { type: REGISTER.CHECK_USERNAME, payload: { username } };\n}\n\nexport function registerUser(username, password) {\n  return { type: REGISTER.REGISTER_USER, payload: { username, password } };\n}\n","import { SHOWS } from '../constants/actions';\n\nexport function getAllShows({\n  userId = null,\n  types = null,\n  languages = null,\n  genres = null,\n} = {}) {\n  return {\n    type: SHOWS.GET_ALL_SHOWS,\n    payload: { userId, types, languages, genres },\n  };\n}\n\nexport function addShow(show) {\n  return { type: SHOWS.ADD_SHOW, payload: { show } };\n}\n\nexport function appendShows(shows) {\n  return { type: SHOWS.APPEND_SHOWS, payload: { shows } };\n}\n\nexport function updateShows(shows) {\n  return { type: SHOWS.UPDATE_SHOWS, payload: { shows } };\n}\n\nexport function resetVotes() {\n  return { type: SHOWS.RESET_VOTES };\n}\n\nexport function upvoteShow(showId, isUpvote) {\n  return { type: SHOWS.UPVOTE_SHOW, payload: { showId, isUpvote } };\n}\n\nexport function downvoteShow(showId, isDownvote) {\n  return { type: SHOWS.DOWNVOTE_SHOW, payload: { showId, isDownvote } };\n}\n","import { STATIC } from '../constants/actions';\n\nexport function getAllStatics() {\n  return { type: STATIC.GET_ALL_STATICS };\n}\n\nexport function updateTypeData(types) {\n  return { type: STATIC.UPDATE_TYPE_DATA, payload: { types } };\n}\n\nexport function updateLanguageData(languages) {\n  return { type: STATIC.UPDATE_LANGUAGE_DATA, payload: { languages } };\n}\n\nexport function updateGenreData(genres) {\n  return { type: STATIC.UPDATE_GENRE_DATA, payload: { genres } };\n}\n","import { TOAST } from '../constants/actions';\n\nexport function requestToShowToast(variant, message) {\n  return { type: TOAST.REQUEST_TO_SHOW_TOAST, payload: { variant, message } };\n}\n\nexport function showToast(variant, message) {\n  return { type: TOAST.SHOW_TOAST, payload: { variant, message } };\n}\n\nexport function hideToast() {\n  return { type: TOAST.HIDE_TOAST };\n}\n","import { USER } from '../constants/actions';\n\nexport function updateUserData(userInfo) {\n  return { type: USER.UPDATE_USER_DATA, payload: { userInfo } };\n}\n\nexport function setUsernameStatus(status) {\n  return { type: USER.SET_USERNAME_STATUS, payload: { status } };\n}\n\nexport function resetUserData() {\n  return { type: USER.RESET_USER_DATA };\n}\n","import { toastAction } from '../actions';\nimport { utils } from '../constants';\n\nimport store from './store';\n\nconst handleError = axios => {\n  axios.interceptors.response.use(\n    response => response,\n    error => {\n      const { status, data } = error.response;\n      if (\n        status === utils.APPLICATION_ERROR_STATUS_CODES.UNAUTHORIZED ||\n        status === utils.APPLICATION_ERROR_STATUS_CODES.NOT_ALLOWED\n      ) {\n        const { message } = data;\n        store.dispatch(\n          toastAction.requestToShowToast(\n            utils.MESSAGE_VARIANTS.WARNING,\n            message\n          )\n        );\n      } else if (status === utils.APPLICATION_ERROR_STATUS_CODES.FORBIDDEN) {\n        store.dispatch(\n          toastAction.requestToShowToast(\n            utils.MESSAGE_VARIANTS.WARNING,\n            'You are not allowed to access this.'\n          )\n        );\n      } else if (\n        status === utils.APPLICATION_ERROR_STATUS_CODES.MISSING_PARAMS ||\n        status === utils.APPLICATION_ERROR_STATUS_CODES.NOT_FOUND\n      ) {\n        store.dispatch(\n          toastAction.requestToShowToast(\n            utils.MESSAGE_VARIANTS.WARNING,\n            'The request you sent looks incomplete. Please check and try again.'\n          )\n        );\n      } else if (\n        status === utils.APPLICATION_ERROR_STATUS_CODES.INTERNAL_SERVER_ERROR\n      ) {\n        store.dispatch(\n          toastAction.requestToShowToast(\n            utils.MESSAGE_VARIANTS.ERROR,\n            'Some issue occured with the server. Please try again in sometime.'\n          )\n        );\n      }\n      return Promise.reject(error);\n    }\n  );\n};\n\nexport default handleError;\n","import axios from 'axios';\nimport { all, put, takeLatest } from '@redux-saga/core/effects';\n\nimport {\n  loadingAction,\n  showsAction,\n  toastAction,\n  userAction,\n} from '../actions';\n\nimport { actions, urls, utils } from '../constants';\n\nimport handleError from '../utils/errorHandler';\nimport { updateUserLoginInfo } from '../utils/users';\n\n/* -----------------------------------------\n *                 WORKERS\n * -----------------------------------------\n */\n\nfunction* loginSubmitWorker({ payload }) {\n  try {\n    handleError(axios);\n    const requestURL = urls.LOGIN_URL;\n\n    const body = payload;\n\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n\n    const response = yield axios.post(requestURL, body, { headers });\n\n    yield put(loadingAction.stopLoginLoading());\n\n    if (response && response.status === 200) {\n      const { data } = response;\n\n      const { message } = data;\n      const { user } = data.data;\n      updateUserLoginInfo(user);\n\n      yield put(\n        toastAction.requestToShowToast(utils.MESSAGE_VARIANTS.SUCCESS, message)\n      );\n\n      yield put(userAction.updateUserData(user));\n      yield put(showsAction.getAllShows({ userId: user._id }));\n    }\n  } catch (error) {\n    yield put(loadingAction.stopLoginLoading());\n  }\n}\n\n/* -----------------------------------------\n *                 WATCHERS\n * -----------------------------------------\n */\n\nfunction* loginSubmitWatcher() {\n  yield takeLatest(actions.LOGIN.SUBMIT_FOR_LOGIN, loginSubmitWorker);\n}\n\nexport default function* loginSaga() {\n  yield all([loginSubmitWatcher()]);\n}\n","import axios from 'axios';\nimport { all, debounce, put, takeLatest } from '@redux-saga/core/effects';\n\nimport {\n  loadingAction,\n  showsAction,\n  toastAction,\n  userAction,\n} from '../actions';\n\nimport { actions, urls, utils } from '../constants';\n\nimport handleError from '../utils/errorHandler';\nimport { updateUserLoginInfo } from '../utils/users';\n\n/* -----------------------------------------\n *                 WORKERS\n * -----------------------------------------\n */\n\nfunction* checkUsernameWorker({ payload }) {\n  try {\n    handleError(axios);\n\n    const { username } = payload;\n\n    const requestURL = urls.CHECK_USERNAME.replace(/<USER_NAME>/, username);\n\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n\n    const response = yield axios.get(requestURL, { headers });\n\n    yield put(loadingAction.stopCheckUsernameLoading());\n\n    if (response && response.status === 200) {\n      const { data } = response;\n      const { success } = data;\n      yield put(userAction.setUsernameStatus(success));\n    }\n  } catch (error) {\n    yield put(loadingAction.stopCheckUsernameLoading());\n  }\n}\n\nfunction* registerSubmitWorker({ payload }) {\n  try {\n    handleError(axios);\n    const requestURL = urls.REGISTER_URL;\n\n    const body = payload;\n\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n\n    const response = yield axios.post(requestURL, body, { headers });\n\n    yield put(loadingAction.stopRegisterLoading());\n\n    if (response && response.status === 201) {\n      const { data } = response;\n      const { message } = data;\n      const { user } = data.data;\n\n      updateUserLoginInfo(user);\n\n      yield put(\n        toastAction.requestToShowToast(utils.MESSAGE_VARIANTS.SUCCESS, message)\n      );\n\n      yield put(userAction.updateUserData(user));\n      yield put(showsAction.getAllShows({ userId: user._id }));\n    }\n  } catch (error) {\n    yield put(loadingAction.stopRegisterLoading());\n  }\n}\n\n/* -----------------------------------------\n *                 WATCHERS\n * -----------------------------------------\n */\n\nfunction* checkUsernameWatcher() {\n  yield debounce(1000, actions.REGISTER.CHECK_USERNAME, checkUsernameWorker);\n}\n\nfunction* registerSubmitWatcher() {\n  yield takeLatest(actions.REGISTER.REGISTER_USER, registerSubmitWorker);\n}\n\nexport default function* registerSaga() {\n  yield all([checkUsernameWatcher(), registerSubmitWatcher()]);\n}\n","import { createSelector } from 'reselect';\n\nconst selectLoadingState = state => state.loading;\n\nexport const getStaticsLoadingState = () =>\n  createSelector(\n    selectLoadingState,\n    loadingState => loadingState.isGetStaticsLoading\n  );\n\nexport const getAllShowsLoadingState = () =>\n  createSelector(\n    selectLoadingState,\n    loadingState => loadingState.isGetAllShowsLoading\n  );\n\nexport const getRegisterLoadingState = () =>\n  createSelector(\n    selectLoadingState,\n    loadingState => loadingState.isRegisterSubmitLoading\n  );\n\nexport const getLoginLoadingState = () =>\n  createSelector(\n    selectLoadingState,\n    loadingState => loadingState.isLoginSubmitLoading\n  );\n\nexport const getCheckUsernameLoadingState = () =>\n  createSelector(\n    selectLoadingState,\n    loadingState => loadingState.isCheckUsernameLoading\n  );\n\nexport const getAddShowSubmitLoadingState = () =>\n  createSelector(\n    selectLoadingState,\n    loadingState => loadingState.isAddShowSubmitLoading\n  );\n","import { createSelector } from 'reselect';\n\nconst selectShowsState = state => state.shows;\n\nexport const getAllShows = () =>\n  createSelector(selectShowsState, showState =>\n    showState.shows.sort(\n      (showA, showB) => new Date(showB.created_at) - new Date(showA.created_at)\n    )\n  );\n","import { createSelector } from 'reselect';\n\nconst selectStaticState = state => state.static;\n\nexport const getAllTypes = () =>\n  createSelector(selectStaticState, staticState => staticState.types);\n\nexport const getAllLanguages = () =>\n  createSelector(selectStaticState, staticState => staticState.languages);\n\nexport const getAllGenres = () =>\n  createSelector(selectStaticState, staticState => staticState.genres);\n","import { createSelector } from 'reselect';\n\nconst selectToastState = state => state.toast;\n\nexport const getToastState = () =>\n  createSelector(selectToastState, toastState => toastState.show);\n\nexport const getToastMessage = () =>\n  createSelector(selectToastState, toastState => toastState.message);\n\nexport const getToastVariant = () =>\n  createSelector(selectToastState, toastState => toastState.variant);\n","import { createSelector } from 'reselect';\n\nconst selectUserState = state => state.user;\n\nexport const isUserLoggedIn = () =>\n  createSelector(selectUserState, userState => userState.isLoggedIn);\n\nexport const getAuthToken = () =>\n  createSelector(\n    selectUserState,\n    userState =>\n      userState._id &&\n      userState.token &&\n      'Bearer ' + userState._id + ',' + userState.token\n  );\n\nexport const getCurrentUserId = () =>\n  createSelector(selectUserState, userState => userState._id);\n\nexport const getCurrentUsername = () =>\n  createSelector(selectUserState, userState => userState.username);\n\nexport const isValidUsername = () =>\n  createSelector(selectUserState, userState => userState.isValidUsername);\n","import axios from 'axios';\nimport {\n  all,\n  put,\n  select,\n  takeEvery,\n  takeLatest,\n} from '@redux-saga/core/effects';\n\nimport { loadingAction, showsAction, toastAction } from '../actions';\n\nimport { actions, urls, utils } from '../constants';\n\nimport { userSelector } from '../selectors';\n\nimport handleError from '../utils/errorHandler';\n\n/* -----------------------------------------\n *                 WORKERS\n * -----------------------------------------\n */\n\nfunction* getAllShowsWorker({ payload }) {\n  try {\n    handleError(axios);\n\n    const authToken = yield select(userSelector.getAuthToken());\n\n    const { userId, types, languages, genres } = payload;\n\n    const requestURL = urls.GET_ALL_SHOWS;\n\n    const headers = {\n      'Content-Type': 'application/json',\n      ...(authToken && { Authorization: authToken }),\n    };\n\n    const params = {\n      ...(userId && { user_id: userId }),\n      ...(types && types.length > 0 && { types: types.join(',') }),\n      ...(languages &&\n        languages.length > 0 && { languages: languages.join(',') }),\n      ...(genres && genres.length > 0 && { genres: genres.join(',') }),\n    };\n\n    const isFilterApiCall =\n      (types && types.length > 0) ||\n      (languages && languages.length > 0) ||\n      (genres && genres.length > 0);\n\n    const response = yield axios.get(requestURL, { headers, params });\n\n    yield put(loadingAction.stopGetAllShowsLoading());\n\n    if (response && response.status === 200) {\n      const { data } = response;\n      const { shows } = data.data;\n\n      if (isFilterApiCall) {\n        yield put(showsAction.updateShows(shows));\n      } else {\n        yield put(showsAction.appendShows(shows));\n      }\n    }\n  } catch (error) {\n    yield put(loadingAction.stopGetAllShowsLoading());\n  }\n}\n\nfunction* addShowWorker({ payload }) {\n  try {\n    handleError(axios);\n    const userId = yield select(userSelector.getCurrentUserId());\n\n    const authToken = yield select(userSelector.getAuthToken());\n\n    const requestURL = urls.ADD_SHOWS.replace(/<USER_ID>/, userId);\n\n    const body = payload.show;\n\n    const headers = {\n      'Content-Type': 'application/json',\n      Authorization: authToken,\n    };\n\n    const response = yield axios.post(requestURL, body, { headers });\n\n    yield put(loadingAction.stopAddShowLoading());\n\n    if (response && response.status === 201) {\n      const { data } = response;\n      const { message } = data;\n      const { show } = data.data;\n\n      yield put(showsAction.appendShows([show]));\n\n      yield put(\n        toastAction.requestToShowToast(utils.MESSAGE_VARIANTS.SUCCESS, message)\n      );\n    }\n  } catch (error) {\n    yield put(loadingAction.stopAddShowLoading());\n  }\n}\n\nfunction* upvoteShowWorker({ payload }) {\n  try {\n    handleError(axios);\n    const userId = yield select(userSelector.getCurrentUserId());\n\n    const authToken = yield select(userSelector.getAuthToken());\n\n    const { showId, isUpvote } = payload;\n\n    const requestURL = urls.UPVOTE_SHOW.replace(/<USER_ID>/, userId).replace(\n      /<SHOW_ID>/,\n      showId\n    );\n\n    const body = { isUpvote };\n\n    const headers = {\n      'Content-Type': 'application/json',\n      Authorization: authToken,\n    };\n\n    const response = yield axios.post(requestURL, body, { headers });\n\n    yield put(loadingAction.stopVoteShowLoading());\n\n    if (response && response.status === 200) {\n      const { data } = response;\n      const { message } = data;\n      const { show } = data.data;\n\n      yield put(showsAction.appendShows([show]));\n\n      yield put(\n        toastAction.requestToShowToast(utils.MESSAGE_VARIANTS.SUCCESS, message)\n      );\n    }\n  } catch (error) {\n    yield put(loadingAction.stopVoteShowLoading());\n  }\n}\n\nfunction* downvoteShowWorker({ payload }) {\n  try {\n    handleError(axios);\n    const userId = yield select(userSelector.getCurrentUserId());\n\n    const authToken = yield select(userSelector.getAuthToken());\n\n    const { showId, isDownvote } = payload;\n\n    const requestURL = urls.DOWNVOTE_SHOW.replace(/<USER_ID>/, userId).replace(\n      /<SHOW_ID>/,\n      showId\n    );\n\n    const body = { isDownvote };\n\n    const headers = {\n      'Content-Type': 'application/json',\n      Authorization: authToken,\n    };\n\n    const response = yield axios.post(requestURL, body, { headers });\n\n    yield put(loadingAction.stopVoteShowLoading());\n\n    if (response && response.status === 200) {\n      const { data } = response;\n      const { message } = data;\n      const { show } = data.data;\n\n      yield put(showsAction.appendShows([show]));\n\n      yield put(\n        toastAction.requestToShowToast(utils.MESSAGE_VARIANTS.SUCCESS, message)\n      );\n    }\n  } catch (error) {\n    yield put(loadingAction.stopVoteShowLoading());\n  }\n}\n\n/* -----------------------------------------\n *                 WATCHERS\n * -----------------------------------------\n */\n\nfunction* getAllShowsWatcher() {\n  yield takeLatest(actions.SHOWS.GET_ALL_SHOWS, getAllShowsWorker);\n}\n\nfunction* addShowWatcher() {\n  yield takeEvery(actions.SHOWS.ADD_SHOW, addShowWorker);\n}\n\nfunction* upvoteShowWatcher() {\n  yield takeEvery(actions.SHOWS.UPVOTE_SHOW, upvoteShowWorker);\n}\n\nfunction* downvoteShowWatcher() {\n  yield takeEvery(actions.SHOWS.DOWNVOTE_SHOW, downvoteShowWorker);\n}\n\nexport default function* showsSaga() {\n  yield all([\n    getAllShowsWatcher(),\n    addShowWatcher(),\n    upvoteShowWatcher(),\n    downvoteShowWatcher(),\n  ]);\n}\n","import axios from 'axios';\nimport { all, put, takeEvery } from '@redux-saga/core/effects';\n\nimport { loadingAction, staticAction } from '../actions';\n\nimport { actions, urls } from '../constants';\n\nimport handleError from '../utils/errorHandler';\n\n/* -----------------------------------------\n *                 WORKERS\n * -----------------------------------------\n */\n\nfunction* getAllStaticsWorker() {\n  try {\n    handleError(axios);\n\n    const requestURL = urls.GET_STATICS;\n\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n\n    const response = yield axios.get(requestURL, { headers });\n\n    yield put(loadingAction.stopGetStaticsLoading());\n\n    if (response && response.status === 200) {\n      const { data } = response;\n      let { types, languages, genres } = data.data;\n\n      yield put(staticAction.updateTypeData(types));\n      yield put(staticAction.updateLanguageData(languages));\n      yield put(staticAction.updateGenreData(genres));\n    }\n  } catch (error) {\n    yield put(loadingAction.stopGetStaticsLoading());\n  }\n}\n\n/* -----------------------------------------\n *                 WATCHERS\n * -----------------------------------------\n */\n\nfunction* getAllStaticsWatcher() {\n  yield takeEvery(actions.STATIC.GET_ALL_STATICS, getAllStaticsWorker);\n}\n\nexport default function* staticSaga() {\n  yield all([getAllStaticsWatcher()]);\n}\n","import { all, delay, put, select, takeEvery } from '@redux-saga/core/effects';\n\nimport { toastAction } from '../actions';\n\nimport { actions } from '../constants';\n\nimport { toastSelector } from '../selectors';\n\n/* -----------------------------------------\n *                 WORKERS\n * -----------------------------------------\n */\n\nfunction* showToastWorker() {\n  const toastVariant = yield select(toastSelector.getToastVariant());\n  const toastMessage = yield select(toastSelector.getToastMessage());\n\n  yield put(toastAction.hideToast());\n  yield delay(100);\n  yield put(toastAction.showToast(toastVariant, toastMessage));\n}\n\n/* -----------------------------------------\n *                 WATCHERS\n * -----------------------------------------\n */\n\nfunction* showToastWatcher() {\n  yield takeEvery(actions.TOAST.REQUEST_TO_SHOW_TOAST, showToastWorker);\n}\n\nexport default function* toastSaga() {\n  yield all([showToastWatcher()]);\n}\n","import { all, fork } from '@redux-saga/core/effects';\n\nimport loginSaga from './login.saga';\nimport registerSaga from './register.saga';\nimport showsSaga from './shows.saga';\nimport staticSaga from './static.saga';\nimport toastSaga from './toast.saga';\n\nexport default function* rootSaga() {\n  yield all([\n    fork(loginSaga),\n    fork(registerSaga),\n    fork(showsSaga),\n    fork(staticSaga),\n    fork(toastSaga),\n  ]);\n}\n","import { toastAction } from '../actions';\nimport { storage, utils } from '../constants';\nimport { checkIfUserIsLoggedIn, logoutUser } from './users';\n\nconst checkTokenExpiration = store => next => action => {\n  const tokenExpireAt = +localStorage.getItem(storage.USER.EXPIRE_AT);\n  const { isLoggedIn } = checkIfUserIsLoggedIn();\n\n  if (!isLoggedIn && tokenExpireAt) {\n    logoutUser();\n\n    store.dispatch(\n      toastAction.requestToShowToast(\n        utils.MESSAGE_VARIANTS.WARNING,\n        'Your session has expired. Please login again.'\n      )\n    );\n  }\n\n  next(action);\n};\n\nexport default checkTokenExpiration;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { routerMiddleware } from 'connected-react-router';\n\nimport history from './history';\nimport rootReducer from '../reducers';\nimport rootSaga from '../sagas';\n\nimport checkTokenExpiration from './token';\n\nconst sagaMiddleWare = createSagaMiddleware();\n\nconst composeEnhancers =\n  process.env.NODE_ENV !== 'production' &&\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        shouldHotReload: false,\n      })\n    : compose;\n\nconst enhancers = [\n  applyMiddleware(\n    sagaMiddleWare,\n    checkTokenExpiration,\n    routerMiddleware(history)\n  ),\n];\nconst store = createStore(rootReducer(history), composeEnhancers(...enhancers));\nsagaMiddleWare.run(rootSaga);\n\nexport default store;\n","import 'typeface-lato';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nconst CustomThemeObject = {\n  typography: {\n    fontFamily: '\"Lato\"',\n    fontSize: 14,\n    fontWeightLight: 300,\n    fontWeightRegular: 400,\n    fontWeightMedium: 500,\n  },\n  palette: {\n    primary: {\n      light: '#3492ca',\n      main: '#0277bd',\n      dark: '#015384',\n    },\n    secondary: {\n      light: '#fbcc57',\n      main: '#fbc02d',\n      dark: '#af861f',\n    },\n  },\n};\n\nconst CustomTheme = createMuiTheme(CustomThemeObject);\n\nexport default CustomTheme;\n","const style = () => ({\n  filterArea: {\n    paddingTop: '.5rem',\n    paddingBottom: '.5rem',\n  },\n  expansionPanelHeading: {\n    borderBottom: '1px solid #C3C3C3',\n  },\n  expansionPanelBody: {\n    padding: 0,\n  },\n  filterListArea: {\n    width: '100%',\n    maxHeight: 150,\n    overflow: 'auto',\n  },\n});\n\nexport default style;\n","import React from 'react';\nimport clsx from 'clsx';\n\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport style from './style';\n\nconst ListFilters = props => {\n  const {\n    title,\n    values,\n    expanded,\n    handleExpansion,\n    handleOnCheckBoxClick,\n  } = props;\n\n  const classes = makeStyles(style)();\n\n  return (\n    <>\n      <Grid className={classes.filterArea} item xs={12}>\n        <ExpansionPanel square expanded={expanded}>\n          <ExpansionPanelSummary\n            className={clsx(expanded && classes.expansionPanelHeading)}\n            expandIcon={<ExpandMoreIcon />}\n            onClick={handleExpansion}\n          >\n            <Typography variant=\"h6\">{title}</Typography>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails className={classes.expansionPanelBody}>\n            <List className={classes.filterListArea}>\n              {Object.values(values).map(value => (\n                <ListItem\n                  key={value._id}\n                  role={undefined}\n                  dense\n                  button\n                  onClick={handleOnCheckBoxClick(value)}\n                >\n                  <ListItemIcon>\n                    <Checkbox\n                      edge=\"start\"\n                      checked={value.isChecked}\n                      tabIndex={-1}\n                      disableRipple\n                    />\n                  </ListItemIcon>\n                  <ListItemText primary={value.name} />\n                </ListItem>\n              ))}\n            </List>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n      </Grid>\n    </>\n  );\n};\n\nexport default ListFilters;\n","const style = theme => ({\n  filterArea: {\n    margin: theme.spacing(1),\n  },\n  filterChipsArea: {\n    marginTop: '.5rem',\n    marginBottom: '.5rem',\n    backgroundColor: '#F7F7F7',\n  },\n  chips: {\n    padding: '.25rem',\n    margin: '.5rem',\n  },\n  divider: {\n    marginTop: '1rem',\n    marginBottom: '1rem',\n  },\n});\n\nexport default style;\n","import React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Hidden from '@material-ui/core/Hidden';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ListFilters from '../ListFilters';\n\nimport style from './style';\n\nimport { utils } from '../../constants';\n\nconst FilterArea = props => {\n  const classes = makeStyles(style)();\n\n  const [allFilterValues, setFilterValues] = React.useState([]);\n\n  const [types, setTypes] = React.useState({});\n  const [languages, setLanguages] = React.useState({});\n  const [genres, setGenres] = React.useState({});\n\n  React.useEffect(() => {\n    setTypes(props.types);\n    setLanguages(props.languages);\n    setGenres(props.genres);\n  }, [props.types, props.languages, props.genres]);\n\n  const [typeExpanded, setTypeExpansion] = React.useState(true);\n  const [languageExpanded, setLanguageExpansion] = React.useState(false);\n  const [genreExpanded, setGenreExpansion] = React.useState(false);\n\n  const handleExpansion = type => {\n    if (type === utils.FILTER_TYPES.TYPE) {\n      setTypeExpansion(!typeExpanded);\n    } else if (type === utils.FILTER_TYPES.LANGUAGE) {\n      setLanguageExpansion(!languageExpanded);\n    } else if (type === utils.FILTER_TYPES.GENRE) {\n      setGenreExpansion(!genreExpanded);\n    }\n  };\n\n  const handleOnCheckBoxClick = currentValue => () => {\n    if (!currentValue.isChecked) {\n      setFilterValues([\n        ...allFilterValues,\n        { ...currentValue, isChecked: true },\n      ]);\n    } else {\n      const newFilterValues = [...allFilterValues].filter(\n        value =>\n          value._id !== currentValue._id || value.type !== currentValue.type\n      );\n      setFilterValues(newFilterValues);\n    }\n\n    if (currentValue.type === utils.FILTER_TYPES.TYPE) {\n      setTypes({\n        ...types,\n        [currentValue._id]: {\n          ...currentValue,\n          isChecked: !currentValue.isChecked,\n        },\n      });\n    } else if (currentValue.type === utils.FILTER_TYPES.LANGUAGE) {\n      setLanguages({\n        ...languages,\n        [currentValue._id]: {\n          ...currentValue,\n          isChecked: !currentValue.isChecked,\n        },\n      });\n    } else if (currentValue.type === utils.FILTER_TYPES.GENRE) {\n      setGenres({\n        ...genres,\n        [currentValue._id]: {\n          ...currentValue,\n          isChecked: !currentValue.isChecked,\n        },\n      });\n    }\n  };\n\n  const handleOnDeleteValue = currentValue => () => {\n    const newFilterValues = [...allFilterValues].filter(\n      value =>\n        value._id !== currentValue._id || value.type !== currentValue.type\n    );\n    setFilterValues(newFilterValues);\n\n    if (currentValue.type === utils.FILTER_TYPES.TYPE) {\n      const newTypes = {\n        ...types,\n        [currentValue._id]: { ...currentValue, isChecked: false },\n      };\n      setTypes(newTypes);\n    } else if (currentValue.type === utils.FILTER_TYPES.LANGUAGE) {\n      const newLanguages = {\n        ...languages,\n        [currentValue._id]: { ...currentValue, isChecked: false },\n      };\n      setLanguages(newLanguages);\n    } else if (currentValue.type === utils.FILTER_TYPES.GENRE) {\n      const newGenres = {\n        ...genres,\n        [currentValue._id]: { ...currentValue, isChecked: false },\n      };\n      setGenres(newGenres);\n    }\n  };\n\n  const handleResetFilter = () => {\n    const { getAllShows, userId } = props;\n\n    setFilterValues([]);\n    setTypes(props.types || {});\n    setLanguages(props.languages || {});\n    setGenres(props.genres || {});\n    getAllShows({ userId });\n  };\n\n  const applyFilter = () => {\n    const { getAllShows, userId } = props;\n\n    const typesList = [];\n    const languagesList = [];\n    const genresList = [];\n\n    for (let value of allFilterValues) {\n      if (value.type === utils.FILTER_TYPES.TYPE) {\n        typesList.push(value._id);\n      } else if (value.type === utils.FILTER_TYPES.LANGUAGE) {\n        languagesList.push(value._id);\n      } else if (value.type === utils.FILTER_TYPES.GENRE) {\n        genresList.push(value._id);\n      }\n    }\n\n    getAllShows({\n      userId,\n      types: typesList,\n      languages: languagesList,\n      genres: genresList,\n    });\n  };\n\n  const filterChipComponent = allFilterValues.map(value => (\n    <Chip\n      className={classes.chips}\n      key={value._id + ' ' + value.type}\n      variant=\"outlined\"\n      color=\"primary\"\n      label={value.name}\n      onDelete={handleOnDeleteValue(value)}\n    />\n  ));\n\n  return (\n    <>\n      <Grid className={classes.filterArea}>\n        <Grid container justify=\"space-between\">\n          <Grid item xs>\n            <Typography variant=\"h6\">Filters</Typography>\n          </Grid>\n\n          {allFilterValues && allFilterValues.length > 0 && (\n            <Grid item xs={4}>\n              <Button\n                color=\"primary\"\n                fullWidth\n                disabled={allFilterValues && allFilterValues.length < 1}\n                onClick={handleResetFilter}\n              >\n                Clear All\n              </Button>\n            </Grid>\n          )}\n        </Grid>\n\n        <Paper className={classes.filterChipsArea} elevation={0}>\n          {filterChipComponent}\n        </Paper>\n\n        {allFilterValues && allFilterValues.length > 0 && (\n          <>\n            <Hidden smDown>\n              <Grid item md={5}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  fullWidth\n                  disabled={allFilterValues && allFilterValues.length < 1}\n                  onClick={applyFilter}\n                >\n                  Apply\n                </Button>\n              </Grid>\n            </Hidden>\n\n            <Hidden mdUp>\n              <Grid container justify=\"center\">\n                <Grid item xs={6}>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    fullWidth\n                    disabled={allFilterValues && allFilterValues.length < 1}\n                    onClick={applyFilter}\n                  >\n                    Apply\n                  </Button>\n                </Grid>\n              </Grid>\n            </Hidden>\n          </>\n        )}\n\n        <Divider className={classes.divider} />\n\n        <ListFilters\n          title=\"Types\"\n          values={types}\n          expanded={typeExpanded}\n          handleExpansion={() => handleExpansion(utils.FILTER_TYPES.TYPE)}\n          handleOnCheckBoxClick={handleOnCheckBoxClick}\n        />\n\n        <ListFilters\n          title=\"Languages\"\n          values={languages}\n          expanded={languageExpanded}\n          handleExpansion={() => handleExpansion(utils.FILTER_TYPES.LANGUAGE)}\n          handleOnCheckBoxClick={handleOnCheckBoxClick}\n        />\n\n        <ListFilters\n          title=\"Genres\"\n          values={genres}\n          expanded={genreExpanded}\n          handleExpansion={() => handleExpansion(utils.FILTER_TYPES.GENRE)}\n          handleOnCheckBoxClick={handleOnCheckBoxClick}\n        />\n      </Grid>\n    </>\n  );\n};\n\nexport default FilterArea;\n","import React from 'react';\n\nimport Slide from '@material-ui/core/Slide';\n\nconst SlideTransition = React.forwardRef((props, ref) => {\n  return (\n    <>\n      <Slide direction=\"up\" ref={ref} {...props} />;\n    </>\n  );\n});\n\nexport default SlideTransition;\n","import React from 'react';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\nimport FilterListRoundedIcon from '@material-ui/icons/FilterListRounded';\n\nimport FilterArea from '../FilterArea';\nimport SlideTransition from '../SlideTransition';\n\nconst FilterAreaMobile = props => {\n  const [openFilterArea, setFilterAreaState] = React.useState(false);\n\n  const handleOpenFilterArea = () => {\n    setFilterAreaState(true);\n  };\n\n  const handleCloseFilterArea = () => {\n    setFilterAreaState(false);\n  };\n\n  return (\n    <>\n      <Grid container justify=\"center\">\n        <Grid item xs={8}>\n          <Button\n            color=\"primary\"\n            size=\"large\"\n            startIcon={<FilterListRoundedIcon />}\n            onClick={handleOpenFilterArea}\n            fullWidth\n          >\n            Filter List\n          </Button>\n        </Grid>\n      </Grid>\n\n      <Dialog\n        open={openFilterArea}\n        TransitionComponent={SlideTransition}\n        fullScreen\n        maxWidth=\"sm\"\n        keepMounted={false}\n        onClose={handleCloseFilterArea}\n      >\n        <AppBar position=\"sticky\">\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              onClick={handleCloseFilterArea}\n            >\n              <CloseRoundedIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        <FilterArea {...props} />\n      </Dialog>\n    </>\n  );\n};\n\nexport default FilterAreaMobile;\n","const style = theme => ({\n  filterArea: {\n    margin: theme.spacing(3, 1),\n  },\n});\n\nexport default style;\n","import React from 'react';\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport FilterArea from '../FilterArea';\n\nimport style from './style';\n\nconst FilterAreaWeb = props => {\n  const classes = makeStyles(style)();\n\n  return (\n    <>\n      <Card className={classes.filterArea}>\n        <CardContent>\n          <FilterArea {...props} />\n        </CardContent>\n      </Card>\n    </>\n  );\n};\n\nexport default FilterAreaWeb;\n","import React from 'react';\n\nimport PacmanLoader from 'react-spinners/PacmanLoader';\n\nimport Grid from '@material-ui/core/Grid';\n\nconst Loading = ({ loading }) => {\n  return (\n    <Grid\n      container\n      justify=\"center\"\n      alignItems=\"center\"\n      style={{ height: '100vh' }}\n    >\n      <PacmanLoader color=\"#FFDF46\" size={50} loading={loading} />\n    </Grid>\n  );\n};\n\nexport default Loading;\n","const style = theme => ({\n  descriptionArea: {\n    paddingTop: '2rem',\n    paddingRight: '2rem',\n    [theme.breakpoints.down('sm')]: {\n      paddingRight: '1rem',\n    },\n    [theme.breakpoints.down('xs')]: {\n      paddingRight: '0rem',\n    },\n  },\n  titleArea: {\n    marginBottom: '1rem',\n  },\n  title: {\n    fontWeight: 700,\n    fontSize: 30,\n    color: '#424242',\n    [theme.breakpoints.down('sm')]: {\n      fontWeight: 600,\n      fontSize: 26,\n    },\n    [theme.breakpoints.down('xs')]: {\n      fontWeight: 600,\n      fontSize: 22,\n    },\n  },\n  watchButton: {\n    fontWeight: 600,\n    paddingRight: '2rem',\n    paddingLeft: '2rem',\n    [theme.breakpoints.down('xs')]: {\n      fontWeight: 500,\n      paddingRight: '1rem',\n      paddingLeft: '1rem',\n    },\n  },\n  metadataArea: {\n    marginTop: '.5rem',\n    marginBottom: '1rem',\n  },\n  tabArea: {\n    marginTop: '.5rem',\n  },\n  languageIcon: {\n    color: '#8097A4',\n  },\n  languageText: {\n    marginLeft: '.75rem',\n    fontSize: 16,\n    color: '#8097A4',\n  },\n  typeIcon: {\n    color: '#556B84',\n  },\n  typeText: {\n    marginLeft: '.75rem',\n    fontSize: 16,\n    color: '#556B84',\n  },\n  genreIcon: {\n    color: '#125BA2',\n  },\n  genreTab: {\n    marginLeft: '.75rem',\n  },\n});\n\nexport default style;\n","import React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nimport CameraRollRoundedIcon from '@material-ui/icons/CameraRollRounded';\nimport LanguageRoundedIcon from '@material-ui/icons/LanguageRounded';\nimport MovieRoundedIcon from '@material-ui/icons/MovieRounded';\nimport OpenInNewRoundedIcon from '@material-ui/icons/OpenInNewRounded';\n\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\n\nimport style from './style';\n\nconst MovieDescriptionCard = props => {\n  const classes = makeStyles(style)();\n  const theme = useTheme();\n  const isMobileView = useMediaQuery(theme.breakpoints.down('xs'));\n\n  const { name, url, language, type, genres } = props;\n\n  const genreComponent =\n    genres &&\n    genres.map((genre, index) => (\n      <Chip\n        key={index}\n        className={classes.genreTab}\n        variant=\"outlined\"\n        color=\"primary\"\n        size=\"small\"\n        label={genre}\n      />\n    ));\n\n  return (\n    <>\n      <Grid className={classes.descriptionArea}>\n        <Grid className={classes.titleArea} container justify=\"space-between\">\n          <Typography className={classes.title}>{name}</Typography>\n          {url && (\n            <Button\n              className={classes.watchButton}\n              variant=\"contained\"\n              color=\"default\"\n              endIcon={!isMobileView && <OpenInNewRoundedIcon />}\n              disableElevation\n              onClick={() => window.open(url, '_blank')}\n            >\n              {isMobileView ? <OpenInNewRoundedIcon /> : 'Watch'}\n            </Button>\n          )}\n        </Grid>\n\n        <Divider />\n\n        <Grid className={classes.metadataArea} container>\n          <Grid className={classes.tabArea} item xs={12} sm={3}>\n            <Grid container alignItems=\"center\">\n              <Grid item>\n                <LanguageRoundedIcon className={classes.languageIcon} />\n              </Grid>\n              <Grid item>\n                <Typography\n                  className={classes.languageText}\n                  variant=\"subtitle2\"\n                  display=\"inline\"\n                >\n                  {language}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid className={classes.tabArea} item xs={12} sm={3}>\n            <Grid container alignItems=\"center\">\n              <Grid item>\n                <CameraRollRoundedIcon className={classes.typeIcon} />\n              </Grid>\n              <Grid item>\n                <Typography\n                  className={classes.typeText}\n                  variant=\"subtitle2\"\n                  display=\"inline\"\n                >\n                  {type}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid className={classes.tabArea} item xs={12} sm>\n            <Grid container alignItems=\"center\">\n              <Grid item>\n                <MovieRoundedIcon className={classes.genreIcon} />\n              </Grid>\n              <Grid item>{genreComponent}</Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default MovieDescriptionCard;\n","const style = theme => ({\n  element: {\n    padding: '.25rem, 0rem',\n  },\n  icons: {\n    color: theme.palette.text.secondary,\n  },\n  upvoted: {\n    color: theme.palette.success.light,\n  },\n  downvoted: {\n    color: theme.palette.error.light,\n  },\n  vote: {\n    marginRight: '1rem',\n  },\n});\n\nexport default style;\n","import React from 'react';\nimport clsx from 'clsx';\n\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n\nimport ThumbUpRoundedIcon from '@material-ui/icons/ThumbUpRounded';\nimport ThumbDownRoundedIcon from '@material-ui/icons/ThumbDownRounded';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport style from './style';\n\nimport { utils } from '../../constants';\n\nconst VoteArea = props => {\n  const classes = makeStyles(style)();\n\n  const {\n    isUserLoggedIn,\n    requestToShowToast,\n    setLoginPopupState,\n    onUpvoteShow,\n    onDownvoteShow,\n    _id,\n    upvotes,\n    downvotes,\n    haveUpvoted,\n    haveDownvoted,\n  } = props;\n\n  const votes = upvotes - downvotes;\n\n  const onUpvote = () => {\n    if (isUserLoggedIn) {\n      onUpvoteShow(_id, !haveUpvoted);\n    } else {\n      setLoginPopupState(true);\n      requestToShowToast(\n        utils.MESSAGE_VARIANTS.INFO,\n        'You have to login to vote.'\n      );\n    }\n  };\n\n  const onDownvote = () => {\n    if (isUserLoggedIn) {\n      onDownvoteShow(_id, !haveDownvoted);\n    } else {\n      setLoginPopupState(true);\n      requestToShowToast(\n        utils.MESSAGE_VARIANTS.INFO,\n        'You have to login to vote.'\n      );\n    }\n  };\n\n  return (\n    <>\n      <Grid className={classes.element} item xs={12}>\n        <Grid container justify=\"flex-end\">\n          <IconButton onClick={onUpvote}>\n            <ThumbUpRoundedIcon\n              fontSize=\"large\"\n              className={clsx(classes.icons, haveUpvoted && classes.upvoted)}\n            />\n          </IconButton>\n        </Grid>\n      </Grid>\n\n      <Grid className={classes.element} item xs={12}>\n        <Grid container justify=\"flex-end\">\n          <Typography className={classes.vote} variant=\"h6\">\n            {votes}\n          </Typography>\n        </Grid>\n      </Grid>\n\n      <Grid className={classes.element} item xs={12}>\n        <Grid container justify=\"flex-end\">\n          <IconButton onClick={onDownvote}>\n            <ThumbDownRoundedIcon\n              fontSize=\"large\"\n              className={clsx(\n                classes.icons,\n                !haveUpvoted && haveDownvoted && classes.downvoted\n              )}\n            />\n          </IconButton>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default VoteArea;\n","const style = theme => ({\n  cardArea: {\n    margin: theme.spacing(3, 1),\n  },\n  dividerArea: {\n    marginLeft: '1rem',\n    marginRight: '1rem',\n    [theme.breakpoints.down('sm')]: {\n      marginLeft: '0rem',\n      marginRight: '.75rem',\n    },\n  },\n});\n\nexport default style;\n","import React from 'react';\n\nimport Card from '@material-ui/core/Card';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\n\nimport MovieDescriptionCard from '../MovieDescriptionCard';\nimport VoteArea from '../VoteArea';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport style from './style';\n\nconst MovieDescription = props => {\n  const classes = makeStyles(style)();\n\n  return (\n    <>\n      <Card className={classes.cardArea}>\n        <Grid container alignItems=\"center\">\n          <Grid item xs={2} sm={1}>\n            <VoteArea {...props} />\n          </Grid>\n\n          <Divider\n            className={classes.dividerArea}\n            orientation=\"vertical\"\n            flexItem\n          />\n\n          <Grid item xs={9} sm>\n            <MovieDescriptionCard {...props} />\n          </Grid>\n        </Grid>\n      </Card>\n    </>\n  );\n};\n\nexport default MovieDescription;\n","const style = theme => ({\n  addShowElement: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n  multipleSelect: {\n    border: '1px solid #C3C3C3',\n    borderRadius: 4,\n  },\n  multipleSelectError: {\n    border: '1px solid red',\n    borderRadius: 4,\n  },\n  multipleSelectLabel: {\n    background: '#FFF',\n    paddingLeft: theme.spacing(0.5),\n    paddingRight: theme.spacing(1),\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: 2,\n    backgroundColor: theme.palette.primary,\n  },\n  lastElement: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(5),\n  },\n});\n\nexport default style;\n","import React from 'react';\nimport clsx from 'clsx';\n\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Grid from '@material-ui/core/Grid';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport style from './style';\n\nimport { regex } from '../../constants';\n\nconst AddShow = props => {\n  const {\n    onAddShowSubmit,\n    isAddShowSubmitLoading,\n    types,\n    languages,\n    genres,\n  } = props;\n\n  const classes = makeStyles(style)();\n\n  const [name, setNameValue] = React.useState('');\n\n  const [url, setUrlValue] = React.useState('');\n  const [urlError, setUrlError] = React.useState(false);\n\n  const [typeId, setTypeValue] = React.useState('');\n\n  const [languageId, setLanguageValue] = React.useState('');\n\n  const [genreIds, setGenresValue] = React.useState([]);\n  const [genreError, setGenreError] = React.useState(false);\n\n  const getStyles = genreId => ({\n    fontWeight: genreIds.indexOf(genreId) === -1 ? 500 : 700,\n  });\n\n  const handleNameTyping = event => {\n    setNameValue(event.target.value);\n  };\n\n  const handleUrlTyping = event => {\n    setUrlValue(event.target.value);\n  };\n\n  const checkUrlValue = event => {\n    if (regex.URL.test(event.target.value) || event.target.value === '') {\n      setUrlError(false);\n    } else {\n      setUrlError(true);\n    }\n  };\n\n  const handleTypeSelect = event => {\n    setTypeValue(event.target.value);\n  };\n\n  const handleLanguageSelect = event => {\n    setLanguageValue(event.target.value);\n  };\n\n  const handleGenresSelect = event => {\n    if (event.target.value.length > 3) {\n      setGenreError(true);\n    } else {\n      setGenreError(false);\n    }\n    setGenresValue(event.target.value);\n  };\n\n  const handleAddShowSubmit = event => {\n    event.preventDefault();\n    onAddShowSubmit({\n      name,\n      url,\n      type: typeId,\n      language: languageId,\n      genres: genreIds,\n    });\n  };\n\n  return (\n    <>\n      <Grid container spacing={1} justify=\"center\" alignContent=\"center\">\n        <Grid item xs={12} sm={10}>\n          <Grid container justify=\"center\" className={classes.addShowElement}>\n            <Typography variant=\"h4\">Add Show</Typography>\n          </Grid>\n          <form onSubmit={handleAddShowSubmit}>\n            <Grid container justify=\"center\" className={classes.addShowElement}>\n              <Grid item xs={12} sm={10}>\n                <TextField\n                  id=\"name\"\n                  variant=\"outlined\"\n                  label=\"Name\"\n                  placeholder=\"The Shawshank Redemption\"\n                  value={name}\n                  onChange={handleNameTyping}\n                  InputLabelProps={{ shrink: true }}\n                  autoFocus\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n\n            <Grid container justify=\"center\" className={classes.addShowElement}>\n              <Grid item xs={12} sm={10}>\n                <TextField\n                  id=\"url\"\n                  variant=\"outlined\"\n                  label=\"URL (Optional)\"\n                  placeholder=\"\"\n                  value={url}\n                  onChange={handleUrlTyping}\n                  onBlur={checkUrlValue}\n                  error={urlError}\n                  helperText={urlError && 'Invalid URL format.'}\n                  InputLabelProps={{ shrink: true }}\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n\n            <Grid container justify=\"center\" className={classes.addShowElement}>\n              <Grid item xs={12} sm={10}>\n                <FormControl variant=\"outlined\" fullWidth>\n                  <InputLabel id=\"select-type-label\">Type</InputLabel>\n                  <Select\n                    labelId=\"select-type-label\"\n                    id=\"select-type\"\n                    value={typeId}\n                    onChange={handleTypeSelect}\n                    labelWidth={35}\n                    fullWidth\n                  >\n                    {Object.values(types).map(type => (\n                      <MenuItem key={type._id} value={type._id}>\n                        {type.name}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n            </Grid>\n\n            <Grid container justify=\"center\" className={classes.addShowElement}>\n              <Grid item xs={12} sm={10}>\n                <FormControl variant=\"outlined\" fullWidth>\n                  <InputLabel id=\"select-language-label\">Language</InputLabel>\n                  <Select\n                    labelId=\"select-language-label\"\n                    id=\"select-language\"\n                    value={languageId}\n                    onChange={handleLanguageSelect}\n                    labelWidth={67}\n                    fullWidth\n                  >\n                    {Object.values(languages).map(language => (\n                      <MenuItem key={language._id} value={language._id}>\n                        {language.name}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n            </Grid>\n\n            <Grid container justify=\"center\" className={classes.addShowElement}>\n              <Grid item xs={12} sm={10}>\n                <FormControl variant=\"outlined\" fullWidth error={genreError}>\n                  <div\n                    className={clsx(\n                      genreError\n                        ? classes.multipleSelectError\n                        : classes.multipleSelect\n                    )}\n                  >\n                    <InputLabel\n                      className={classes.multipleSelectLabel}\n                      id=\"select-genres-chip-label\"\n                    >\n                      Genre (Max 3)\n                    </InputLabel>\n                    <Select\n                      labelId=\"select-genres-chip-label\"\n                      id=\"genres-chip\"\n                      value={genreIds}\n                      onChange={handleGenresSelect}\n                      labelWidth={67}\n                      input={<Input id=\"select-genres-chip\" />}\n                      renderValue={selected => (\n                        <Grid className={classes.chips}>\n                          {selected.map(value => (\n                            <Chip\n                              key={value}\n                              variant=\"outlined\"\n                              label={genres[value].name}\n                              className={classes.chip}\n                            />\n                          ))}\n                        </Grid>\n                      )}\n                      multiple\n                      fullWidth\n                    >\n                      {Object.values(genres).map(genre => (\n                        <MenuItem\n                          key={genre._id}\n                          value={genre._id}\n                          style={getStyles(genre._id)}\n                        >\n                          {genre.name}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </div>\n                  {genreError && (\n                    <FormHelperText>\n                      Can't add more than 3 genre.\n                    </FormHelperText>\n                  )}\n                </FormControl>\n              </Grid>\n            </Grid>\n\n            <Grid container justify=\"center\" className={classes.lastElement}>\n              <Grid item xs={12} sm={10}>\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  size=\"large\"\n                  disabled={urlError || name === ''}\n                  onClick={handleAddShowSubmit}\n                  fullWidth\n                >\n                  {!isAddShowSubmitLoading ? 'Add' : <CircularProgress />}\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default AddShow;\n","import React from 'react';\n\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\n\nconst ElevationScroll = props => {\n  const { children } = props;\n\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n  });\n\n  return React.cloneElement(children, {\n    style: trigger\n      ? { boxShadow: '0 5px 5px -5px #333' }\n      : { boxShadow: 'none' },\n  });\n};\n\nexport default ElevationScroll;\n","const style = theme => ({\n  loginElement: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n});\n\nexport default style;\n","import React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Link from '@material-ui/core/Link';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport style from './style';\n\nimport { regex } from '../../constants';\n\nconst Login = props => {\n  const {\n    handleOpenRegisterPopup,\n    handleCloseLoginPopup,\n    onLoginSubmit,\n    isSubmitLoginLoading,\n  } = props;\n\n  const classes = makeStyles(style)();\n\n  const [username, setUsernameValue] = React.useState('');\n  const [usernameError, setUsernameError] = React.useState(false);\n  const [password, setPasswordValue] = React.useState('');\n  const [passwordVisible, setPasswordVisibility] = React.useState(false);\n\n  const handleUsernameTyping = event => {\n    if (\n      regex.USERNAME_TYPING.test(event.target.value) ||\n      event.target.value === ''\n    ) {\n      setUsernameError(false);\n    } else {\n      setUsernameError(true);\n    }\n    setUsernameValue(event.target.value);\n  };\n\n  const checkUsername = event => {\n    if (regex.USERNAME.test(event.target.value) || event.target.value === '') {\n      setUsernameError(false);\n    } else {\n      setUsernameError(true);\n    }\n  };\n\n  const handlePasswordTyping = event => {\n    setPasswordValue(event.target.value);\n  };\n\n  const handleTogglePasswordVisibility = () => {\n    setPasswordVisibility(!passwordVisible);\n  };\n\n  const handleLoginSubmit = event => {\n    event.preventDefault();\n    onLoginSubmit(username, password);\n  };\n\n  const handleRegisterClick = event => {\n    event.preventDefault();\n    handleCloseLoginPopup();\n    setTimeout(handleOpenRegisterPopup, 500);\n  };\n\n  return (\n    <>\n      <Grid container spacing={1} justify=\"center\" alignContent=\"center\">\n        <Grid item xs={12} sm={10}>\n          <Grid container justify=\"center\" className={classes.loginElement}>\n            <Typography variant=\"h4\">Login</Typography>\n          </Grid>\n          <form onSubmit={handleLoginSubmit}>\n            <Grid container justify=\"center\" className={classes.loginElement}>\n              <Grid item xs={12} sm={10}>\n                <TextField\n                  id=\"email\"\n                  variant=\"outlined\"\n                  label=\"Username\"\n                  placeholder=\"rajnikanth\"\n                  value={username}\n                  onChange={handleUsernameTyping}\n                  onBlur={checkUsername}\n                  error={usernameError}\n                  helperText={usernameError && 'Invalid username format.'}\n                  InputLabelProps={{ shrink: true }}\n                  autoFocus\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n            <Grid container justify=\"center\" className={classes.loginElement}>\n              <Grid item xs={12} sm={10}>\n                <TextField\n                  id=\"password\"\n                  variant=\"outlined\"\n                  type={passwordVisible ? 'text' : 'password'}\n                  label=\"Password\"\n                  placeholder=\"●●●●●●●●\"\n                  value={password}\n                  onChange={handlePasswordTyping}\n                  InputLabelProps={{ shrink: true }}\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          aria-label=\"toggle password visibility\"\n                          edge=\"end\"\n                          onClick={handleTogglePasswordVisibility}\n                        >\n                          {passwordVisible ? <Visibility /> : <VisibilityOff />}\n                        </IconButton>\n                      </InputAdornment>\n                    ),\n                  }}\n                  autoComplete=\"true\"\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n            <Grid container justify=\"center\" className={classes.loginElement}>\n              <Grid item xs={12} sm={10}>\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  size=\"large\"\n                  disabled={usernameError || username === '' || password === ''}\n                  onClick={handleLoginSubmit}\n                  fullWidth\n                >\n                  {!isSubmitLoginLoading ? 'Login' : <CircularProgress />}\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Grid>\n        <Grid container justify=\"center\" className={classes.loginElement}>\n          <Grid item xs={12} sm={10}>\n            <Grid container justify=\"center\">\n              <Typography variant=\"subtitle1\">\n                Not our user yet?{' '}\n                <Link href=\"\" onClick={handleRegisterClick}>\n                  Register Here.\n                </Link>\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Login;\n","const style = theme => ({\n  registerElement: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n});\n\nexport default style;\n","import React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Link from '@material-ui/core/Link';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport style from './style';\n\nimport { regex } from '../../constants';\n\nconst Register = props => {\n  const {\n    handleOpenLoginPopup,\n    handleCloseRegisterPopup,\n    checkForUsername,\n    isCheckUsernameLoading,\n    isSubmitRegisterLoading,\n    isValidUsername,\n    onRegisterSubmit,\n  } = props;\n\n  const classes = makeStyles(style)();\n\n  const [username, setUsernameValue] = React.useState('');\n  const [usernameError, setUsernameError] = React.useState(false);\n  const [password, setPasswordValue] = React.useState('');\n  const [passwordVisible, setPasswordVisibility] = React.useState(false);\n\n  React.useEffect(() => {\n    if (username !== '' && !isValidUsername) {\n      setUsernameError('This username is already taken.');\n    } else {\n      setUsernameError(false);\n    }\n  }, [isValidUsername, username]);\n\n  const handleUsernameTyping = event => {\n    if (!isValidUsername) {\n      setUsernameError('This username is already taken.');\n    } else if (\n      regex.USERNAME_TYPING.test(event.target.value) ||\n      event.target.value === ''\n    ) {\n      setUsernameError(false);\n    } else {\n      setUsernameError('Invalid Username format');\n    }\n\n    setUsernameValue(event.target.value);\n\n    if (event.target.value !== '') {\n      checkForUsername(event.target.value);\n    }\n  };\n\n  const checkUsername = event => {\n    if (!isValidUsername) {\n      setUsernameError('This username is already taken.');\n    } else if (\n      regex.USERNAME.test(event.target.value) ||\n      event.target.value === ''\n    ) {\n      setUsernameError(false);\n    } else {\n      setUsernameError('Invalid Username format');\n    }\n\n    if (event.target.value !== '') {\n      checkForUsername(event.target.value);\n    }\n  };\n\n  const handlePasswordTyping = event => {\n    setPasswordValue(event.target.value);\n  };\n\n  const handleTogglePasswordVisibility = () => {\n    setPasswordVisibility(!passwordVisible);\n  };\n\n  const handleRegisterSubmit = event => {\n    event.preventDefault();\n    onRegisterSubmit(username, password);\n  };\n\n  const handleLoginClick = event => {\n    event.preventDefault();\n    handleCloseRegisterPopup();\n    setTimeout(handleOpenLoginPopup, 500);\n  };\n\n  return (\n    <>\n      <Grid container spacing={1} justify=\"center\" alignContent=\"center\">\n        <Grid item xs={12} sm={10}>\n          <Grid container justify=\"center\" className={classes.registerElement}>\n            <Typography variant=\"h4\">Register</Typography>\n          </Grid>\n          <form onSubmit={handleRegisterSubmit}>\n            <Grid\n              container\n              justify=\"center\"\n              className={classes.registerElement}\n            >\n              <Grid item xs={12} sm={10}>\n                <TextField\n                  id=\"email\"\n                  variant=\"outlined\"\n                  label=\"Username\"\n                  placeholder=\"rajnikanth\"\n                  value={username}\n                  onChange={handleUsernameTyping}\n                  onBlur={checkUsername}\n                  error={!!usernameError}\n                  helperText={!!usernameError && usernameError}\n                  InputLabelProps={{ shrink: true }}\n                  autoFocus\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n            <Grid\n              container\n              justify=\"center\"\n              className={classes.registerElement}\n            >\n              <Grid item xs={12} sm={10}>\n                <TextField\n                  id=\"password\"\n                  variant=\"outlined\"\n                  type={passwordVisible ? 'text' : 'password'}\n                  label=\"Password\"\n                  placeholder=\"●●●●●●●●\"\n                  value={password}\n                  onChange={handlePasswordTyping}\n                  InputLabelProps={{ shrink: true }}\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          aria-label=\"toggle password visibility\"\n                          edge=\"end\"\n                          onClick={handleTogglePasswordVisibility}\n                        >\n                          {passwordVisible ? <Visibility /> : <VisibilityOff />}\n                        </IconButton>\n                      </InputAdornment>\n                    ),\n                  }}\n                  autoComplete=\"true\"\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n            <Grid\n              container\n              justify=\"center\"\n              className={classes.registerElement}\n            >\n              <Grid item xs={12} sm={10}>\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  size=\"large\"\n                  disabled={\n                    isCheckUsernameLoading ||\n                    !!usernameError ||\n                    username === '' ||\n                    password === ''\n                  }\n                  onClick={handleRegisterSubmit}\n                  fullWidth\n                >\n                  {!isSubmitRegisterLoading ? 'Register' : <CircularProgress />}\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Grid>\n        <Grid container justify=\"center\" className={classes.registerElement}>\n          <Grid item xs={12} sm={10}>\n            <Grid container justify=\"center\">\n              <Typography variant=\"subtitle1\">\n                Already registered?{' '}\n                <Link href=\"\" onClick={handleLoginClick}>\n                  Login Here.\n                </Link>\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Register;\n","const style = () => ({\n  navbar: {\n    backgroundColor: '#F7F7F7',\n  },\n  logo: {\n    cursor: 'pointer',\n    height: '7vh',\n  },\n});\n\nexport default style;\n","import React from 'react';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\nimport ExitToAppRoundedIcon from '@material-ui/icons/ExitToAppRounded';\nimport LibraryAddRoundedIcon from '@material-ui/icons/LibraryAddRounded';\nimport PersonAddRoundedIcon from '@material-ui/icons/PersonAddRounded';\n\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\n\nimport AddShow from '../AddShow';\nimport ElevationScroll from '../ElevationScroll';\nimport Login from '../Login';\nimport Register from '../Register';\nimport SlideTransition from '../SlideTransition';\n\nimport style from './style';\n\nimport { utils } from '../../constants';\n\nconst Navbar = props => {\n  const {\n    redirectToPage,\n    requestToShowToast,\n    checkForUsername,\n    onRegisterSubmit,\n    onLoginSubmit,\n    onAddShowSubmit,\n    logoutUser,\n    isSubmitRegisterLoading,\n    isSubmitLoginLoading,\n    isAddShowSubmitLoading,\n    isCheckUsernameLoading,\n    isUserLoggedIn,\n    isValidUsername,\n    loginPopupState,\n    setLoginPopupState,\n    username,\n    types,\n    languages,\n    genres,\n  } = props;\n\n  const classes = makeStyles(style)();\n  const theme = useTheme();\n  const isMobileView = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const [registerPopupState, setRegisterPopupState] = React.useState(false);\n  const [addShowPopupState, setAddShowPopupState] = React.useState(false);\n\n  React.useEffect(() => {\n    setLoginPopupState(false);\n    setRegisterPopupState(false);\n  }, [isUserLoggedIn, setLoginPopupState]);\n\n  React.useEffect(() => {\n    if (!isAddShowSubmitLoading) {\n      setAddShowPopupState(false);\n    }\n  }, [isAddShowSubmitLoading]);\n\n  const handleLogout = () => {\n    logoutUser();\n  };\n\n  const handleOpenLoginPopup = () => {\n    setLoginPopupState(true);\n  };\n\n  const handleCloseLoginPopup = () => {\n    setLoginPopupState(false);\n  };\n\n  const handleOpenRegisterPopup = () => {\n    setRegisterPopupState(true);\n  };\n\n  const handleCloseRegisterPopup = () => {\n    setRegisterPopupState(false);\n  };\n\n  const handleOpenAddShowPopup = () => {\n    if (isUserLoggedIn) {\n      setAddShowPopupState(true);\n    } else {\n      requestToShowToast(\n        utils.MESSAGE_VARIANTS.INFO,\n        'You have to login first.'\n      );\n      setLoginPopupState(true);\n    }\n  };\n\n  const handleCloseAddShowPopup = () => {\n    if (isUserLoggedIn) {\n      setAddShowPopupState(false);\n    } else {\n      setLoginPopupState(false);\n    }\n  };\n\n  return (\n    <>\n      <ElevationScroll {...props}>\n        <AppBar className={classes.navbar} position=\"sticky\" elevation={0}>\n          <Toolbar>\n            <Grid container justify=\"space-between\" alignItems=\"center\">\n              <Grid item>\n                <img\n                  className={classes.logo}\n                  src={isMobileView ? '/bwg_mobile_logo.png' : '/bwg_logo.png'}\n                  alt=\"Binge Watcher's Guide\"\n                  onClick={() => redirectToPage('/')}\n                />\n              </Grid>\n              <Grid item>\n                <Grid container justify=\"space-between\" alignItems=\"center\">\n                  <Grid item xs>\n                    {isMobileView ? (\n                      <IconButton onClick={handleOpenAddShowPopup}>\n                        <LibraryAddRoundedIcon color=\"primary\" />\n                      </IconButton>\n                    ) : (\n                      <Grid container justify=\"center\" alignItems=\"center\">\n                        <Button\n                          color=\"primary\"\n                          size=\"large\"\n                          startIcon={<LibraryAddRoundedIcon />}\n                          onClick={handleOpenAddShowPopup}\n                        >\n                          Add your entry\n                        </Button>\n                      </Grid>\n                    )}\n                  </Grid>\n                  <Grid item xs>\n                    {isUserLoggedIn ? (\n                      <Grid container justify=\"center\" alignItems=\"center\">\n                        <Button\n                          color=\"primary\"\n                          size=\"large\"\n                          startIcon={<ExitToAppRoundedIcon />}\n                          onClick={handleLogout}\n                        >\n                          Logout ({username})\n                        </Button>\n                      </Grid>\n                    ) : isMobileView ? (\n                      <IconButton onClick={handleOpenLoginPopup}>\n                        <PersonAddRoundedIcon color=\"primary\" />\n                      </IconButton>\n                    ) : (\n                      <Grid container justify=\"center\" alignItems=\"center\">\n                        <Button\n                          color=\"primary\"\n                          size=\"large\"\n                          startIcon={<PersonAddRoundedIcon />}\n                          onClick={handleOpenLoginPopup}\n                        >\n                          Login\n                        </Button>\n                      </Grid>\n                    )}\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Toolbar>\n        </AppBar>\n      </ElevationScroll>\n      <Dialog\n        open={loginPopupState}\n        TransitionComponent={SlideTransition}\n        fullWidth\n        maxWidth=\"sm\"\n        keepMounted={false}\n        onClose={handleCloseLoginPopup}\n      >\n        <DialogContent>\n          <Grid container>\n            <Grid item xs={12}>\n              <Grid container justify=\"flex-end\">\n                <IconButton onClick={handleCloseLoginPopup}>\n                  <CloseRoundedIcon />\n                </IconButton>\n              </Grid>\n            </Grid>\n            <Grid item xs={12}>\n              <Login\n                onLoginSubmit={onLoginSubmit}\n                isSubmitLoginLoading={isSubmitLoginLoading}\n                handleOpenRegisterPopup={handleOpenRegisterPopup}\n                handleCloseLoginPopup={handleCloseLoginPopup}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n      </Dialog>\n      <Dialog\n        open={registerPopupState}\n        TransitionComponent={SlideTransition}\n        fullWidth\n        maxWidth=\"sm\"\n        keepMounted={false}\n        onClose={handleCloseRegisterPopup}\n      >\n        <DialogContent>\n          <Grid container>\n            <Grid item xs={12}>\n              <Grid container justify=\"flex-end\">\n                <IconButton onClick={handleCloseRegisterPopup}>\n                  <CloseRoundedIcon />\n                </IconButton>\n              </Grid>\n            </Grid>\n            <Grid item xs={12}>\n              <Register\n                checkForUsername={checkForUsername}\n                isSubmitRegisterLoading={isSubmitRegisterLoading}\n                isCheckUsernameLoading={isCheckUsernameLoading}\n                isValidUsername={isValidUsername}\n                onRegisterSubmit={onRegisterSubmit}\n                handleOpenLoginPopup={handleOpenLoginPopup}\n                handleCloseRegisterPopup={handleCloseRegisterPopup}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n      </Dialog>\n      <Dialog\n        open={addShowPopupState}\n        TransitionComponent={SlideTransition}\n        fullWidth\n        maxWidth=\"sm\"\n        keepMounted={false}\n        onClose={handleCloseAddShowPopup}\n      >\n        <DialogContent>\n          <Grid container>\n            <Grid item xs={12}>\n              <Grid container justify=\"flex-end\">\n                <IconButton onClick={handleCloseAddShowPopup}>\n                  <CloseRoundedIcon />\n                </IconButton>\n              </Grid>\n            </Grid>\n            <Grid item xs={12}>\n              <AddShow\n                isAddShowSubmitLoading={isAddShowSubmitLoading}\n                onAddShowSubmit={onAddShowSubmit}\n                types={types}\n                languages={languages}\n                genres={genres}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n};\n\nexport default Navbar;\n","import React, { Component } from 'react';\nimport { push } from 'connected-react-router';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport Grid from '@material-ui/core/Grid';\nimport Hidden from '@material-ui/core/Hidden';\n\nimport FilterAreaMobile from '../components/FilterAreaMobile';\nimport FilterAreaWeb from '../components/FilterAreaWeb';\nimport Loading from '../components/Loading';\nimport MovieDescription from '../components/MovieDescription';\nimport Navbar from '../components/Navbar';\n\nimport {\n  loadingAction,\n  loginAction,\n  registerAction,\n  showsAction,\n  staticAction,\n  toastAction,\n  userAction,\n} from '../actions';\nimport {\n  loadingSelector,\n  showsSelector,\n  staticSelector,\n  userSelector,\n} from '../selectors';\n\nimport { logoutUser } from '../utils/users';\n\nclass IndexPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loginPopupState: false,\n    };\n  }\n\n  setLoginPopupState = popupState => {\n    this.setState({ loginPopupState: popupState });\n  };\n\n  componentDidMount() {\n    const { getAllStatics, getAllShows, userId } = this.props;\n\n    getAllStatics();\n    getAllShows({ userId });\n  }\n\n  render() {\n    const {\n      redirectToPage,\n      requestToShowToast,\n      getAllShows,\n      checkForUsername,\n      onRegisterSubmit,\n      onLoginSubmit,\n      onAddShowSubmit,\n      onUpvoteShow,\n      onDownvoteShow,\n      logoutUser,\n      isGetStaticsLoading,\n      isCheckUsernameLoading,\n      isSubmitLoginLoading,\n      isSubmitRegisterLoading,\n      isAddShowSubmitLoading,\n      isUserLoggedIn,\n      isValidUsername,\n      userId,\n      username,\n      types,\n      languages,\n      genres,\n      shows,\n    } = this.props;\n\n    const { loginPopupState } = this.state;\n\n    return (\n      <>\n        {isGetStaticsLoading ? (\n          <Loading loading={isGetStaticsLoading} />\n        ) : (\n          <>\n            <>\n              <Navbar\n                loginPopupState={loginPopupState}\n                setLoginPopupState={this.setLoginPopupState}\n                redirectToPage={redirectToPage}\n                requestToShowToast={requestToShowToast}\n                checkForUsername={checkForUsername}\n                onRegisterSubmit={onRegisterSubmit}\n                onLoginSubmit={onLoginSubmit}\n                onAddShowSubmit={onAddShowSubmit}\n                logoutUser={logoutUser}\n                isSubmitLoginLoading={isSubmitLoginLoading}\n                isSubmitRegisterLoading={isSubmitRegisterLoading}\n                isAddShowSubmitLoading={isAddShowSubmitLoading}\n                isCheckUsernameLoading={isCheckUsernameLoading}\n                isUserLoggedIn={isUserLoggedIn}\n                isValidUsername={isValidUsername}\n                username={username}\n                types={types}\n                languages={languages}\n                genres={genres}\n              />\n            </>\n\n            <Grid container justify=\"flex-start\">\n              <Hidden mdUp>\n                <Grid item xs={12}>\n                  <FilterAreaMobile\n                    userId={userId}\n                    getAllShows={getAllShows}\n                    types={types}\n                    languages={languages}\n                    genres={genres}\n                  />\n                </Grid>\n              </Hidden>\n              <Grid item xs={12} md={8}>\n                {shows.map(show => (\n                  <MovieDescription\n                    key={show._id}\n                    isUserLoggedIn={isUserLoggedIn}\n                    requestToShowToast={requestToShowToast}\n                    onUpvoteShow={onUpvoteShow}\n                    onDownvoteShow={onDownvoteShow}\n                    loginPopupState={loginPopupState}\n                    setLoginPopupState={this.setLoginPopupState}\n                    {...show}\n                    type={types && types[show.type] && types[show.type].name}\n                    language={\n                      languages &&\n                      languages[show.language] &&\n                      languages[show.language].name\n                    }\n                    genres={show.genres.map(\n                      genreId =>\n                        genres && genres[genreId] && genres[genreId].name\n                    )}\n                  />\n                ))}\n              </Grid>\n              <Hidden smDown>\n                <Grid item md>\n                  <FilterAreaWeb\n                    userId={userId}\n                    getAllShows={getAllShows}\n                    types={types}\n                    languages={languages}\n                    genres={genres}\n                  />\n                </Grid>\n              </Hidden>\n            </Grid>\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  redirectToPage: url => {\n    return dispatch(push(url));\n  },\n  getAllStatics: () => {\n    dispatch(loadingAction.startGetStaticsLoading());\n    return dispatch(staticAction.getAllStatics());\n  },\n  getAllShows: filter => {\n    return dispatch(showsAction.getAllShows(filter));\n  },\n  requestToShowToast: (variant, message) => {\n    return dispatch(toastAction.requestToShowToast(variant, message));\n  },\n  checkForUsername: username => {\n    dispatch(loadingAction.startCheckUsernameLoading());\n    return dispatch(registerAction.checkUsername(username));\n  },\n  onRegisterSubmit: (username, password) => {\n    dispatch(loadingAction.startRegisterLoading());\n    return dispatch(registerAction.registerUser(username, password));\n  },\n  onLoginSubmit: (username, password) => {\n    dispatch(loadingAction.startLoginLoading());\n    return dispatch(loginAction.submitForLogin(username, password));\n  },\n  onAddShowSubmit: show => {\n    dispatch(loadingAction.startAddShowLoading());\n    return dispatch(showsAction.addShow(show));\n  },\n  logoutUser: () => {\n    logoutUser();\n    dispatch(showsAction.resetVotes());\n    return dispatch(userAction.resetUserData());\n  },\n  onUpvoteShow: (showId, isUpvote) => {\n    dispatch(loadingAction.startVoteShowLoading());\n    return dispatch(showsAction.upvoteShow(showId, isUpvote));\n  },\n  onDownvoteShow: (showId, isDownvote) => {\n    dispatch(loadingAction.startVoteShowLoading());\n    return dispatch(showsAction.downvoteShow(showId, isDownvote));\n  },\n});\n\nconst mapStateToProps = createStructuredSelector({\n  isGetStaticsLoading: loadingSelector.getStaticsLoadingState(),\n  isGetAllShowsLoading: loadingSelector.getAllShowsLoadingState(),\n  isCheckUsernameLoading: loadingSelector.getCheckUsernameLoadingState(),\n  isSubmitLoginLoading: loadingSelector.getLoginLoadingState(),\n  isSubmitRegisterLoading: loadingSelector.getRegisterLoadingState(),\n  isAddShowSubmitLoading: loadingSelector.getAddShowSubmitLoadingState(),\n  isUserLoggedIn: userSelector.isUserLoggedIn(),\n  isValidUsername: userSelector.isValidUsername(),\n  userId: userSelector.getCurrentUserId(),\n  username: userSelector.getCurrentUsername(),\n  types: staticSelector.getAllTypes(),\n  languages: staticSelector.getAllLanguages(),\n  genres: staticSelector.getAllGenres(),\n  shows: showsSelector.getAllShows(),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IndexPage);\n","import { amber, blue, green, red } from '@material-ui/core/colors';\n\nconst style = theme => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: red[500],\n  },\n  info: {\n    backgroundColor: blue[400],\n  },\n  warning: {\n    backgroundColor: amber[800],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n});\n\nexport default style;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport clsx from 'clsx';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport style from './style';\n\nimport { toastAction } from '../../actions';\nimport { toastSelector } from '../../selectors';\n\nclass Toast extends Component {\n  onClose = () => {\n    const { hideToast } = this.props;\n    hideToast();\n  };\n\n  render() {\n    const { toastState, toastMessage, toastVariant, classes } = this.props;\n    const toastPosition = { vertical: 'bottom', horizontal: 'left' };\n\n    const variantIcon = {\n      success: CheckCircleIcon,\n      warning: WarningIcon,\n      error: ErrorIcon,\n      info: InfoIcon,\n    };\n\n    const ToastIcon = variantIcon[toastVariant];\n\n    const toastIcon = toastVariant && (\n      <ToastIcon className={clsx(classes.icon, classes.iconVariant)} />\n    );\n\n    return (\n      <Snackbar\n        autoHideDuration={3000}\n        open={toastState}\n        anchorOrigin={toastPosition}\n        onClose={this.onClose}\n        transitionDuration={100}\n        action={[\n          <IconButton\n            key=\"close\"\n            aria-label=\"close\"\n            color=\"inherit\"\n            onClick={this.onClose}\n          >\n            <CloseIcon />\n          </IconButton>,\n        ]}\n      >\n        <SnackbarContent\n          className={clsx(classes[toastVariant], classes.icon)}\n          message={\n            <span id=\"snackbar-message\" className={classes.message}>\n              {toastIcon}\n              {toastMessage}\n            </span>\n          }\n          action={[\n            <IconButton\n              key=\"close\"\n              aria-label=\"close\"\n              color=\"inherit\"\n              onClick={this.onClose}\n            >\n              <CloseIcon className={classes.icon} />\n            </IconButton>,\n          ]}\n        />\n      </Snackbar>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  hideToast: () => dispatch(toastAction.hideToast()),\n});\n\nconst mapStateToProps = createStructuredSelector({\n  toastState: toastSelector.getToastState(),\n  toastMessage: toastSelector.getToastMessage(),\n  toastVariant: toastSelector.getToastVariant(),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(style)(Toast));\n","import React, { lazy, Suspense } from 'react';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { Helmet } from 'react-helmet';\nimport { Provider } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\n\nimport history from './utils/history';\nimport reduxStore from './utils/store';\nimport CustomTheme from './utils/theme';\n\nimport IndexPage from './pages/Index.page';\n\nimport Loading from './components/Loading';\nimport Toast from './components/Toast';\n\n// Lazy Load\nconst NotFoundPage = lazy(() => import('./pages/NotFound.page'));\n\nconst App = () => {\n  return (\n    <Provider store={reduxStore}>\n      <Helmet\n        titleTemplate=\"%s - Binge Watcher's Guide\"\n        defaultTitle=\"Binge Watcher's Guide - Complete Movie and Series Directory\"\n      >\n        <meta\n          name=\"description\"\n          content=\"Binge Watcher's Guide - Complete Movie and Series Directory\"\n        />\n      </Helmet>\n      <ConnectedRouter history={history}>\n        <Toast />\n        <ThemeProvider theme={CustomTheme}>\n          <Suspense fallback={<Loading />}>\n            <Switch>\n              <Route exact path=\"/\" component={IndexPage} />\n              <Route component={NotFoundPage} />\n            </Switch>\n          </Suspense>\n        </ThemeProvider>\n      </ConnectedRouter>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}