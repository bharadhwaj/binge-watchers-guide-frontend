{"version":3,"sources":["utils/history.js","constants/actions.js","reducers/loading.reducer.js","reducers/shows.reducer.js","constants/regex.js","constants/storage.js","constants/urls.js","constants/utils.js","schemas/static.schema.js","utils/users.js","reducers/static.reducer.js","reducers/toast.reducer.js","reducers/user.reducer.js","reducers/index.js","actions/loading.action.js","actions/login.action.js","actions/register.action.js","actions/shows.action.js","actions/static.action.js","actions/toast.action.js","actions/user.action.js","utils/errorHandler.js","sagas/login.saga.js","sagas/register.saga.js","selectors/loading.selector.js","selectors/shows.selector.js","selectors/static.selector.js","selectors/toast.selector.js","selectors/user.selector.js","sagas/shows.saga.js","sagas/static.saga.js","sagas/toast.saga.js","sagas/index.js","utils/token.js","utils/store.js","utils/theme.js","components/ListFilters/style.js","components/ListFilters/index.js","components/FilterArea/style.js","components/FilterArea/index.js","components/SlideTransition/index.js","components/SortArea/style.js","components/SortArea/index.js","components/FilterAreaMobile/index.js","components/FilterAreaWeb/style.js","components/FilterAreaWeb/index.js","components/Loading/index.js","components/MovieDescriptionCard/style.js","components/MovieDescriptionCard/index.js","utils/lib.js","components/VoteArea/style.js","components/VoteArea/index.js","components/MovieDescription/style.js","components/MovieDescription/index.js","components/AddShow/style.js","components/AddShow/index.js","components/ElevationScroll/index.js","components/Login/style.js","components/Login/index.js","components/Register/style.js","components/Register/index.js","components/Search/style.js","components/Search/index.js","components/Navbar/style.js","components/Navbar/index.js","pages/Index.page.js","components/Toast/style.js","components/Toast/index.js","App.js","serviceWorker.js","index.js"],"names":["history","createBrowserHistory","LOADING","START_GET_STATICS_LOADING","STOP_GET_STATICS_LOADING","START_GET_ALL_SHOWS_LOADING","STOP_GET_ALL_SHOWS_LOADING","START_CHECK_USERNAME_LOADING","STOP_CHECK_USERNAME_LOADING","START_REGISTER_LOADING","STOP_REGISTER_LOADING","START_LOGIN_LOADING","STOP_LOGIN_LOADING","START_ADD_SHOW_LOADING","STOP_ADD_SHOW_LOADING","START_VOTE_SHOW_LOADING","STOP_VOTE_SHOW_LOADING","START_DELETE_SHOW_LOADING","STOP_DELETE_SHOW_LOADING","TOAST","REQUEST_TO_SHOW_TOAST","SHOW_TOAST","HIDE_TOAST","REGISTER","CHECK_USERNAME","REGISTER_USER","LOGIN","SUBMIT_FOR_LOGIN","RESET_LOGIN_STATE","USER","UPDATE_USER_DATA","SET_USERNAME_STATUS","RESET_USER_DATA","STATIC","GET_ALL_STATICS","UPDATE_TYPE_DATA","UPDATE_LANGUAGE_DATA","UPDATE_GENRE_DATA","ADD_FILTER","REMOVE_FILTER","RESET_FILTERS","SHOWS","GET_ALL_SHOWS","SET_SORT_AND_ORDER","ADD_SHOW","APPEND_SHOWS","REMOVE_SHOW","UPDATE_SHOWS","RESET_VOTES","UPVOTE_SHOW","DOWNVOTE_SHOW","DELETE_SHOW","initialState","isGetStaticsLoading","isGetAllShowsLoading","isCheckUsernameLoading","isRegisterSubmitLoading","isLoginSubmitLoading","isAddShowSubmitLoading","loadingReducer","state","action","type","shows","sort","order","staticReducer","currentShows","newShows","payload","newShowIds","Set","map","show","_id","mergedShows","filter","has","haveUpvoted","haveDownvoted","item","USERNAME","USERNAME_TYPING","URL","URL_WITH_HTTP","IS_LOGGED_IN","EXPIRE_AT","ID","TOKEN","BASE_URL","process","REGISTER_URL","LOGIN_URL","GET_STATICS","ADD_SHOWS","MESSAGE_VARIANTS","SUCCESS","WARNING","INFO","ERROR","APPLICATION_ERROR_STATUS_CODES","INTERNAL_SERVER_ERROR","UNAUTHORIZED","FORBIDDEN","MISSING_PARAMS","NOT_FOUND","NOT_ALLOWED","FILTER_TYPES","TYPE","LANGUAGE","GENRE","SORT_TYPES","CREATED_AT","POPULAR","VOTE","ORDER_TYPES","ASCENDING","DESCENDING","formatData","schema","Entity","idAttribute","processStrategy","value","isChecked","normalizeData","data","normalize","mergeData","currentData","newData","newDataIds","Object","keys","id","updateUserLoginInfo","userInfo","decodedToken","decode","token","expiryEpoch","exp","localStorage","setItem","username","updateUserInfo","checkIfUserIsLoggedIn","isLoggedIn","getItem","expireAt","Date","logoutUser","removeItem","types","languages","genres","appliedFilters","user_id","q","staticSchema","utils","entities","formattedData","filterObj","language","genre","newFilterData","find","typeId","languageId","genreId","message","variant","toastReducer","notLoggedInState","isValidUsername","userReducer","status","rootReducer","combineReducers","router","connectRouter","toast","loading","static","user","showsReducer","startGetStaticsLoading","stopGetStaticsLoading","startGetAllShowsLoading","stopGetAllShowsLoading","startCheckUsernameLoading","stopCheckUsernameLoading","startRegisterLoading","stopRegisterLoading","startLoginLoading","stopLoginLoading","startAddShowLoading","stopAddShowLoading","startVoteShowLoading","stopVoteShowLoading","startDeleteShowLoading","stopDeleteShowLoading","submitForLogin","password","resetLoginState","checkUsername","registerUser","getAllShows","setSortAndOrder","addShow","appendShows","updateShows","resetVotes","upvoteShow","showId","isUpvote","downvoteShow","isDownvote","deleteShow","removeShow","getAllStatics","updateTypeData","updateLanguageData","updateGenreData","addFilter","removeFilter","resetFilter","requestToShowToast","showToast","hideToast","updateUserData","setUsernameStatus","resetUserData","handleError","axios","interceptors","response","use","error","store","dispatch","toastAction","Promise","reject","loginSubmitWorker","loginSubmitWatcher","loginSaga","requestURL","urls","body","headers","post","put","loadingAction","userAction","showsAction","userId","takeLatest","actions","all","checkUsernameWorker","registerSubmitWorker","checkUsernameWatcher","registerSubmitWatcher","registerSaga","replace","get","success","debounce","selectLoadingState","getStaticsLoadingState","createSelector","loadingState","getAllShowsLoadingState","getRegisterLoadingState","getLoginLoadingState","getCheckUsernameLoadingState","getAddShowSubmitLoadingState","selectShows","selectSort","selectOrder","createdAtDescSort","showA","showB","created_at","createdAtAscSort","popularDescSort","upvotes","downvotes","popularAscSort","votesDescSort","votesAscSort","getSortFunction","getSortAndOrder","selectTypes","selectLanguages","selectGenres","selectFilter","selectAppliedFilters","getAllTypes","allTypeIds","newTypes","getAllLanguages","allLanguageIds","newLanguages","getAllGenres","allGenreIds","newGenres","getSearchText","getFilters","filterState","getAppliedFilters","appliedFilterState","selectToastState","getToastState","toastState","getToastMessage","getToastVariant","selectUserState","isUserLoggedIn","userState","getAuthToken","getCurrentUserId","getCurrentUsername","getAllShowsWorker","addShowWorker","upvoteShowWorker","downvoteShowWorker","deleteShowWorker","getAllShowsWatcher","addShowWatcher","upvoteShowWatcher","downvoteShowWatcher","deleteShowWatcher","showsSaga","select","userSelector","authToken","staticSelector","filters","showsSelector","Authorization","params","length","join","isFilterApiCall","delete","takeEvery","getAllStaticsWorker","getAllStaticsWatcher","staticSaga","staticAction","showToastWorker","showToastWatcher","toastSaga","toastSelector","toastVariant","toastMessage","delay","rootSaga","fork","checkTokenExpiration","next","tokenExpireAt","storage","sagaMiddleWare","createSagaMiddleware","composeEnhancers","compose","enhancers","applyMiddleware","routerMiddleware","createStore","run","CustomTheme","createMuiTheme","typography","fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","palette","primary","light","main","dark","secondary","style","filterArea","paddingTop","paddingBottom","expansionPanelHeading","borderBottom","expansionPanelBody","padding","filterListArea","width","maxHeight","overflow","ListFilters","props","title","values","expanded","handleExpansion","handleOnCheckBoxClick","valuesList","valueA","valueB","name","toLowerCase","localeCompare","classes","makeStyles","Grid","className","xs","ExpansionPanel","square","ExpansionPanelSummary","clsx","expandIcon","onClick","Typography","ExpansionPanelDetails","List","ListItem","key","role","undefined","dense","button","ListItemIcon","Checkbox","edge","checked","tabIndex","disableRipple","ListItemText","theme","margin","spacing","filterChipsArea","marginTop","marginBottom","backgroundColor","chips","divider","FilterArea","React","useState","typeExpanded","setTypeExpansion","languageExpanded","setLanguageExpansion","genreExpanded","setGenreExpansion","currentValue","applyFilter","handleCloseFilterArea","filterChipComponent","Chip","color","label","onDelete","container","justify","Button","fullWidth","disabled","Paper","elevation","Hidden","smDown","md","mdUp","Divider","SlideTransition","forwardRef","ref","Slide","direction","sortArea","sortTitle","breakpoints","down","SortArea","setSortValue","alignItems","gutterBottom","FormControl","InputLabel","Select","labelId","onChange","event","target","split","MenuItem","FilterAreaMobile","openFilterArea","setFilterAreaState","size","startIcon","Dialog","open","keepMounted","TransitionComponent","fullScreen","maxWidth","onClose","AppBar","position","Toolbar","IconButton","FilterAreaWeb","Card","CardContent","Loading","height","descriptionArea","paddingRight","titleArea","fontWeight","watchButton","paddingLeft","metadataArea","tabArea","languageIcon","deleteIcon","languageText","marginLeft","typeIcon","typeText","genreIcon","genreTab","sideHamburger","MovieDescriptionCard","useTheme","isMobileView","useMediaQuery","url","created_by","onDeleteShow","hamburgerElement","setHamburgerElement","deleteShowPopupState","setDeleteShowPopupState","genreComponent","index","handleCancelDelete","endIcon","disableElevation","window","match","regex","getCompleteUrl","currentTarget","sm","display","Menu","anchorEl","Boolean","DialogContent","DialogContentText","DialogActions","autoFocus","preventDefault","element","icons","text","upvoted","downvoted","vote","marginRight","voteExpanded","voteExpandedDivider","marginBotton","VoteArea","setLoginPopupState","onUpvoteShow","onDownvoteShow","votes","expandedView","setExpandedView","shortView","setShortView","expandedVoteArea","Grow","in","timeout","disableTouchRipple","disableFocusRipple","setTimeout","cardArea","dividerArea","MovieDescription","orientation","flexItem","addShowElement","multipleSelect","border","borderRadius","multipleSelectError","multipleSelectLabel","background","flexWrap","chip","lastElement","AddShow","onAddShowSubmit","setNameValue","setUrlValue","urlError","setUrlError","setTypeValue","setLanguageValue","genreIds","setGenresValue","genreError","setGenreError","handleAddShowSubmit","alignContent","onSubmit","TextField","placeholder","InputLabelProps","shrink","onBlur","RegExp","test","trim","helperText","labelWidth","input","Input","renderValue","selected","multiple","indexOf","FormHelperText","CircularProgress","ElevationScroll","children","trigger","useScrollTrigger","disableHysteresis","threshold","cloneElement","boxShadow","loginElement","Login","handleOpenRegisterPopup","handleCloseLoginPopup","onLoginSubmit","isSubmitLoginLoading","setUsernameValue","usernameError","setUsernameError","setPasswordValue","passwordVisible","setPasswordVisibility","handleLoginSubmit","InputProps","endAdornment","InputAdornment","aria-label","autoComplete","Link","href","registerElement","Register","handleOpenLoginPopup","handleCloseRegisterPopup","checkForUsername","isSubmitRegisterLoading","onRegisterSubmit","useEffect","handleRegisterSubmit","search","shape","fade","up","searchIcon","pointerEvents","justifyContent","inputRoot","inputInput","transition","transitions","create","Search","searchText","InputBase","root","inputProps","navbar","logo","cursor","Navbar","redirectToPage","loginPopupState","registerPopupState","setRegisterPopupState","addShowPopupState","setAddShowPopupState","handleOpenAddShowPopup","handleCloseAddShowPopup","src","alt","IndexPage","popupState","setState","handleOnDeleteValue","this","Component","mapStateToProps","createStructuredSelector","loadingSelector","connect","push","registerAction","loginAction","green","red","info","blue","warning","amber","icon","iconVariant","opacity","Toast","ToastIcon","CheckCircleIcon","WarningIcon","ErrorIcon","InfoIcon","toastIcon","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","transitionDuration","SnackbarContent","withStyles","NotFoundPage","lazy","App","reduxStore","Helmet","titleTemplate","defaultTitle","content","ThemeProvider","fallback","exact","path","component","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.06d11683.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport default history;\n","// ------------------ LOADING ACTIONS ------------------ //\nexport const LOADING = {\n  START_GET_STATICS_LOADING: 'bwg/Loading/START_GET_STATICS_LOADING',\n  STOP_GET_STATICS_LOADING: 'bwg/Loading/STOP_GET_STATICS_LOADING',\n  START_GET_ALL_SHOWS_LOADING: 'bwg/Loading/START_GET_ALL_SHOWS_LOADING',\n  STOP_GET_ALL_SHOWS_LOADING: 'bwg/Loading/STOP_GET_ALL_SHOWS_LOADING',\n  START_CHECK_USERNAME_LOADING: 'bwg/Loading/START_CHECK_USERNAME_LOADING',\n  STOP_CHECK_USERNAME_LOADING: 'bwg/Loading/STOP_CHECK_USERNAME_LOADING',\n  START_REGISTER_LOADING: 'bwg/Loading/START_REGISTER_LOADING',\n  STOP_REGISTER_LOADING: 'bwg/Loading/STOP_REGISTER_LOADING',\n  START_LOGIN_LOADING: 'bwg/Loading/START_LOGIN_LOADING',\n  STOP_LOGIN_LOADING: 'bwg/Loading/STOP_LOGIN_LOADING',\n  START_ADD_SHOW_LOADING: 'bwg/Loading/START_ADD_SHOW_LOADING',\n  STOP_ADD_SHOW_LOADING: 'bwg/Loading/STOP_ADD_SHOW_LOADING',\n  START_VOTE_SHOW_LOADING: 'bwg/Loading/START_VOTE_SHOW_LOADING',\n  STOP_VOTE_SHOW_LOADING: 'bwg/Loading/STOP_VOTE_SHOW_LOADING',\n  START_DELETE_SHOW_LOADING: 'bwg/Loading/START_DELETE_SHOW_LOADING',\n  STOP_DELETE_SHOW_LOADING: 'bwg/Loading/STOP_DELETE_SHOW_LOADING',\n};\n\n// ------------------ TOAST ACTIONS ------------------ //\nexport const TOAST = {\n  REQUEST_TO_SHOW_TOAST: 'bwg/Toast/REQUEST_TO_SHOW_TOAST',\n  SHOW_TOAST: 'bwg/Toast/SHOW_TOAST',\n  HIDE_TOAST: 'bwg/Toast/HIDE_TOAST',\n};\n\n// ------------------ REGISTER ACTIONS ------------------ //\nexport const REGISTER = {\n  CHECK_USERNAME: 'bwg/Register/CHECK_USERNAME',\n  REGISTER_USER: 'bwg/Register/REGISTER_USER',\n};\n\n// ------------------ LOGIN ACTIONS ------------------ //\nexport const LOGIN = {\n  SUBMIT_FOR_LOGIN: 'bwg/Login/SUBMIT_FOR_LOGIN',\n  RESET_LOGIN_STATE: 'bwg/Login/RESET_LOGIN_STATE',\n};\n\n// ------------------ USER ACTIONS ------------------ //\nexport const USER = {\n  UPDATE_USER_DATA: 'bwg/User/UPDATE_USER_DATA',\n  SET_USERNAME_STATUS: 'bwg/User/SET_USERNAME_STATUS',\n  RESET_USER_DATA: 'bwg/User/RESET_USER_DATA',\n};\n\n// ------------------ STATIC ACTIONS ------------------ //\nexport const STATIC = {\n  GET_ALL_STATICS: 'bwg/Static/GET_ALL_STATICS',\n  UPDATE_TYPE_DATA: 'bwg/Static/UPDATE_TYPE_DATA',\n  UPDATE_LANGUAGE_DATA: 'bwg/Static/UPDATE_LANGUAGE_DATA',\n  UPDATE_GENRE_DATA: 'bwg/Static/UPDATE_GENRE_DATA',\n  ADD_FILTER: 'bwg/Static/ADD_FILTER',\n  REMOVE_FILTER: 'bwg/Static/REMOVE_FILTER',\n  RESET_FILTERS: 'bwg/Static/RESET_FILTERS',\n};\n\n// ------------------ SHOWS ACTIONS ------------------ //\nexport const SHOWS = {\n  GET_ALL_SHOWS: 'bwg/Shows/GET_ALL_SHOWS',\n  SET_SORT_AND_ORDER: 'bwg/Shows/SET_SORT_AND_ORDER',\n  ADD_SHOW: 'bwg/Shows/ADD_SHOW',\n  APPEND_SHOWS: 'bwg/Shows/APPEND_SHOWS',\n  REMOVE_SHOW: 'bwg/Shows/REMOVE_SHOW',\n  UPDATE_SHOWS: 'bwg/Shows/UPDATE_SHOWS',\n  RESET_VOTES: 'bwg/Shows/RESET_VOTES',\n  UPVOTE_SHOW: 'bwg/Shows/UPVOTE_SHOW',\n  DOWNVOTE_SHOW: 'bwg/Shows/DOWNVOTE_SHOW',\n  DELETE_SHOW: 'bwg/Shows/DELETE_SHOW',\n};\n","import { LOADING } from '../constants/actions';\n\nconst initialState = {\n  isGetStaticsLoading: false,\n  isGetAllShowsLoading: false,\n  isCheckUsernameLoading: false,\n  isRegisterSubmitLoading: false,\n  isLoginSubmitLoading: false,\n  isAddShowSubmitLoading: false,\n};\n\nexport default function loadingReducer(state = initialState, action) {\n  switch (action.type) {\n    case LOADING.START_GET_STATICS_LOADING:\n      return {\n        ...state,\n        isGetStaticsLoading: true,\n      };\n\n    case LOADING.STOP_GET_STATICS_LOADING:\n      return {\n        ...state,\n        isGetStaticsLoading: false,\n      };\n\n    case LOADING.START_GET_ALL_SHOWS_LOADING:\n      return {\n        ...state,\n        isGetAllShowsLoading: true,\n      };\n\n    case LOADING.STOP_GET_ALL_SHOWS_LOADING:\n      return {\n        ...state,\n        isGetAllShowsLoading: false,\n      };\n\n    case LOADING.START_CHECK_USERNAME_LOADING:\n      return {\n        ...state,\n        isCheckUsernameLoading: true,\n      };\n\n    case LOADING.STOP_CHECK_USERNAME_LOADING:\n      return {\n        ...state,\n        isCheckUsernameLoading: false,\n      };\n\n    case LOADING.START_REGISTER_LOADING:\n      return {\n        ...state,\n        isRegisterSubmitLoading: true,\n      };\n\n    case LOADING.STOP_REGISTER_LOADING:\n      return {\n        ...state,\n        isRegisterSubmitLoading: false,\n      };\n\n    case LOADING.START_LOGIN_LOADING:\n      return {\n        ...state,\n        isLoginSubmitLoading: true,\n      };\n\n    case LOADING.STOP_LOGIN_LOADING:\n      return {\n        ...state,\n        isLoginSubmitLoading: false,\n      };\n\n    case LOADING.START_ADD_SHOW_LOADING:\n      return {\n        ...state,\n        isAddShowSubmitLoading: true,\n      };\n\n    case LOADING.STOP_ADD_SHOW_LOADING:\n      return {\n        ...state,\n        isAddShowSubmitLoading: false,\n      };\n\n    default:\n      return { ...state };\n  }\n}\n","import { SHOWS } from '../constants/actions';\n\nconst initialState = {\n  shows: [],\n  sort: null,\n  order: null,\n};\n\nexport default function staticReducer(state = initialState, action) {\n  switch (action.type) {\n    case SHOWS.APPEND_SHOWS: {\n      const currentShows = state.shows;\n      const newShows = action.payload.shows;\n      const newShowIds = new Set(newShows.map(show => show._id));\n      const mergedShows = [\n        ...newShows,\n        ...currentShows.filter(show => !newShowIds.has(show._id)),\n      ];\n\n      return {\n        ...state,\n        shows: [...mergedShows],\n      };\n    }\n\n    case SHOWS.SET_SORT_AND_ORDER:\n      return {\n        ...state,\n        sort: action.payload.sort,\n        order: action.payload.order,\n      };\n\n    case SHOWS.UPDATE_SHOWS:\n      return {\n        ...state,\n        shows: [...action.payload.shows],\n      };\n\n    case SHOWS.RESET_VOTES: {\n      const currentShows = [...state.shows].map(show => ({\n        ...show,\n        haveUpvoted: false,\n        haveDownvoted: false,\n      }));\n\n      return {\n        ...state,\n        shows: currentShows,\n      };\n    }\n\n    case SHOWS.REMOVE_SHOW:\n      return {\n        ...state,\n        shows: [\n          ...state.shows.filter(item => item._id !== action.payload.show._id),\n        ],\n      };\n\n    default:\n      return { ...state };\n  }\n}\n","export const USERNAME = /^[a-z][a-z'-_.]{2,}$/i;\nexport const USERNAME_TYPING = /^[a-z][a-z'-_.]*$/i;\n\n// eslint-disable-next-line  no-useless-escape\nexport const URL = /((?:https?:\\/\\/)?(?:(?:\\w|\\d)+(?:\\.(?:\\w|\\d){2,})+)+(?:(?:\\/(?!.+))|(?:\\/[a-zA-Z0-9?+#&=\\.\\-%_]+))*)/gi;\n// eslint-disable-next-line  no-useless-escape\nexport const URL_WITH_HTTP = /((?:https?:\\/\\/)(?:(?:\\w|\\d)+(?:\\.(?:\\w|\\d){2,})+)+(?:(?:\\/(?!.+))|(?:\\/[a-zA-Z0-9?+#&=\\.\\-%_]+))*)/gi;\n","export const USER = {\n  IS_LOGGED_IN: 'U_i_l_i',\n  EXPIRE_AT: 'U_w_e_b',\n  ID: 'U_i',\n  TOKEN: 'U_p_k',\n  USERNAME: 'U_n',\n};\n","const BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nexport const CHECK_USERNAME = `${BASE_URL}/users/username/<USER_NAME>`;\nexport const REGISTER_URL = `${BASE_URL}/users`;\nexport const LOGIN_URL = `${BASE_URL}/users/auth`;\n\nexport const GET_STATICS = `${BASE_URL}/shows/statics`;\n\nexport const GET_ALL_SHOWS = `${BASE_URL}/shows`;\nexport const ADD_SHOWS = `${BASE_URL}/users/<USER_ID>/shows`;\n\nexport const UPVOTE_SHOW = `${BASE_URL}/users/<USER_ID>/shows/<SHOW_ID>/upvote`;\nexport const DOWNVOTE_SHOW = `${BASE_URL}/users/<USER_ID>/shows/<SHOW_ID>/downvote`;\nexport const DELETE_SHOW = `${BASE_URL}/users/<USER_ID>/shows/<SHOW_ID>`;\n","export const MESSAGE_VARIANTS = {\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  INFO: 'info',\n  ERROR: 'error',\n};\n\nexport const APPLICATION_ERROR_STATUS_CODES = {\n  INTERNAL_SERVER_ERROR: 500,\n  UNAUTHORIZED: 401,\n  FORBIDDEN: 403,\n  MISSING_PARAMS: 422,\n  NOT_FOUND: 404,\n  NOT_ALLOWED: 409,\n};\n\nexport const FILTER_TYPES = {\n  TYPE: 'TYPE',\n  LANGUAGE: 'LANGUAGE',\n  GENRE: 'GENRE',\n};\n\nexport const SORT_TYPES = {\n  CREATED_AT: 'created_at',\n  POPULAR: 'popular',\n  VOTE: 'vote',\n};\n\nexport const ORDER_TYPES = {\n  ASCENDING: 'asc',\n  DESCENDING: 'desc',\n};\n","import { normalize, schema } from 'normalizr';\n\nexport const formatData = type =>\n  new schema.Entity(\n    'formattedData',\n    {},\n    {\n      idAttribute: '_id',\n      processStrategy: value => {\n        return {\n          ...value,\n          type,\n          isChecked: false,\n        };\n      },\n    }\n  );\n\nexport const normalizeData = (type, data) =>\n  normalize(data, [formatData(type)]);\n\nexport const mergeData = (currentData, newData = {}) => {\n  const newDataIds = Object.keys(newData);\n  for (let id of newDataIds) {\n    if (currentData[id]) {\n      newData[id] = {\n        ...currentData[id],\n        ...newData[id],\n      };\n    }\n  }\n  return { ...currentData, ...newData };\n};\n","import { decode } from 'jsonwebtoken';\n\nimport { USER } from '../constants/storage';\n\nexport const updateUserInfo = userInfo => {\n  userInfo._id && localStorage.setItem(USER.ID, userInfo._id);\n  userInfo.token && localStorage.setItem(USER.TOKEN, userInfo.token);\n  userInfo.username && localStorage.setItem(USER.USERNAME, userInfo.username);\n};\n\nexport const updateUserLoginInfo = userInfo => {\n  const decodedToken = decode(userInfo.token);\n  const expiryEpoch = decodedToken && decodedToken.exp * 1000;\n\n  localStorage.setItem(USER.IS_LOGGED_IN, 1);\n  localStorage.setItem(USER.EXPIRE_AT, expiryEpoch);\n  updateUserInfo(userInfo);\n};\n\nexport const checkIfUserIsLoggedIn = () => {\n  const isLoggedIn = +localStorage.getItem(USER.IS_LOGGED_IN);\n  const expireAt = +localStorage.getItem(USER.EXPIRE_AT);\n\n  if (expireAt && isLoggedIn === 1 && new Date(expireAt) > new Date()) {\n    const userInfo = {};\n    userInfo.isLoggedIn = true;\n    userInfo.expireAt = +localStorage.getItem(USER.EXPIRE_AT);\n    userInfo._id = localStorage.getItem(USER.ID);\n    userInfo.token = localStorage.getItem(USER.TOKEN);\n    userInfo.username = localStorage.getItem(USER.USERNAME);\n\n    return { isLoggedIn: true, userInfo };\n  }\n\n  return { isLoggedIn: false, userInfo: null };\n};\n\nexport const removeUserInfo = () => {\n  localStorage.removeItem(USER.IS_LOGGED_IN);\n  localStorage.removeItem(USER.EXPIRE_AT);\n  localStorage.removeItem(USER.ID);\n  localStorage.removeItem(USER.TOKEN);\n  localStorage.removeItem(USER.USERNAME);\n};\n\nexport const logoutUser = () => {\n  removeUserInfo();\n};\n","import { STATIC } from '../constants/actions';\n\nimport { utils } from '../constants';\nimport { staticSchema } from '../schemas';\n\nimport { checkIfUserIsLoggedIn } from '../utils/users';\nconst { isLoggedIn, userInfo } = checkIfUserIsLoggedIn();\n\nconst initialState = {\n  types: {},\n  languages: {},\n  genres: {},\n  appliedFilters: [],\n  filter: {\n    user_id: isLoggedIn ? userInfo._id : null,\n    types: [],\n    languages: [],\n    genres: [],\n    q: null,\n  },\n};\n\nexport default function staticReducer(state = initialState, action) {\n  switch (action.type) {\n    case STATIC.UPDATE_TYPE_DATA: {\n      const { entities } = staticSchema.normalizeData(\n        utils.FILTER_TYPES.TYPE,\n        action.payload.types\n      );\n\n      const { formattedData } = entities;\n\n      return {\n        ...state,\n        types: { ...formattedData },\n      };\n    }\n\n    case STATIC.UPDATE_LANGUAGE_DATA: {\n      const { entities } = staticSchema.normalizeData(\n        utils.FILTER_TYPES.LANGUAGE,\n        action.payload.languages\n      );\n\n      const { formattedData } = entities;\n\n      return {\n        ...state,\n        languages: { ...formattedData },\n      };\n    }\n\n    case STATIC.UPDATE_GENRE_DATA: {\n      const { entities } = staticSchema.normalizeData(\n        utils.FILTER_TYPES.GENRE,\n        action.payload.genres\n      );\n\n      const { formattedData } = entities;\n\n      return {\n        ...state,\n        genres: { ...formattedData },\n      };\n    }\n\n    case STATIC.ADD_FILTER: {\n      const filterObj = action.payload.type\n        ? state.types[action.payload.type]\n        : action.payload.language\n        ? state.languages[action.payload.language]\n        : action.payload.genre\n        ? state.genres[action.payload.genre]\n        : null;\n\n      const newFilterData =\n        !filterObj ||\n        state.appliedFilters.find(\n          data => data._id === filterObj._id && data.type === filterObj.type\n        )\n          ? [...state.appliedFilters]\n          : [...state.appliedFilters, filterObj];\n\n      return {\n        ...state,\n        appliedFilters: newFilterData,\n        filter: {\n          ...state.filter,\n          types: action.payload.type\n            ? [...new Set([...state.filter.types, action.payload.type])]\n            : [...state.filter.types],\n          languages: action.payload.language\n            ? [...new Set([...state.filter.languages, action.payload.language])]\n            : [...state.filter.languages],\n          genres: action.payload.genre\n            ? [...new Set([...state.filter.genres, action.payload.genre])]\n            : [...state.filter.genres],\n          q: action.payload.q,\n        },\n      };\n    }\n\n    case STATIC.REMOVE_FILTER: {\n      const filterObj = action.payload.type\n        ? state.types[action.payload.type]\n        : action.payload.language\n        ? state.languages[action.payload.language]\n        : action.payload.genre\n        ? state.genres[action.payload.genre]\n        : null;\n\n      const newFilterData = state.appliedFilters.filter(\n        data => data._id !== filterObj._id || data.type !== filterObj.type\n      );\n\n      return {\n        ...state,\n        appliedFilters: newFilterData,\n        filter: {\n          ...state.filter,\n          types: action.payload.type\n            ? [...state.filter.types.filter(typeId => typeId !== filterObj._id)]\n            : [...state.filter.types],\n          languages: action.payload.language\n            ? [\n                ...state.filter.languages.filter(\n                  languageId => languageId !== filterObj._id\n                ),\n              ]\n            : [...state.filter.languages],\n          genres: action.payload.genre\n            ? [\n                ...state.filter.genres.filter(\n                  genreId => genreId !== filterObj._id\n                ),\n              ]\n            : [...state.filter.genres],\n          q: action.payload.q || state.filter.q,\n        },\n      };\n    }\n\n    case STATIC.RESET_FILTERS: {\n      return {\n        ...state,\n        appliedFilters: [],\n        filter: {\n          ...state.filter,\n          user_id: isLoggedIn ? userInfo._id : null,\n          types: [],\n          languages: [],\n          genres: [],\n          q: null,\n        },\n      };\n    }\n\n    default:\n      return { ...state };\n  }\n}\n","import { TOAST } from '../constants/actions';\n\nconst initialState = {\n  show: false,\n  message: null,\n  variant: null,\n};\n\nexport default function toastReducer(state = initialState, action) {\n  switch (action.type) {\n    case TOAST.REQUEST_TO_SHOW_TOAST:\n      return {\n        ...state,\n        message: action.payload.message,\n        variant: action.payload.variant,\n      };\n\n    case TOAST.SHOW_TOAST:\n      return {\n        ...state,\n        show: true,\n        message: action.payload.message,\n        variant: action.payload.variant,\n      };\n\n    case TOAST.HIDE_TOAST:\n      return {\n        ...state,\n        show: false,\n        message: null,\n        variant: null,\n      };\n\n    default:\n      return { ...state };\n  }\n}\n","import { USER } from '../constants/actions';\nimport { checkIfUserIsLoggedIn } from '../utils/users';\n\nconst { isLoggedIn, userInfo } = checkIfUserIsLoggedIn();\n\nconst notLoggedInState = {\n  isLoggedIn: false,\n  _id: null,\n  username: null,\n  token: null,\n  isValidUsername: true,\n};\n\nconst initialState = isLoggedIn ? userInfo : notLoggedInState;\n\nexport default function userReducer(state = initialState, action) {\n  switch (action.type) {\n    case USER.UPDATE_USER_DATA:\n      return {\n        ...state,\n        isLoggedIn: true,\n        _id: action.payload.userInfo._id,\n        username: action.payload.userInfo.username,\n        token: action.payload.userInfo.token,\n      };\n\n    case USER.SET_USERNAME_STATUS:\n      return {\n        ...state,\n        isValidUsername: action.payload.status,\n      };\n\n    case USER.RESET_USER_DATA:\n      return {\n        ...notLoggedInState,\n      };\n\n    default:\n      return { ...state };\n  }\n}\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\n\nimport loadingReducer from './loading.reducer';\nimport showsReducer from './shows.reducer';\nimport staticReducer from './static.reducer';\nimport toastReducer from './toast.reducer';\nimport userReducer from './user.reducer';\n\nconst rootReducer = history =>\n  combineReducers({\n    router: connectRouter(history),\n    toast: toastReducer,\n    loading: loadingReducer,\n    static: staticReducer,\n    user: userReducer,\n    shows: showsReducer,\n  });\n\nexport default rootReducer;\n","import { LOADING } from '../constants/actions';\n\nexport function startGetStaticsLoading() {\n  return { type: LOADING.START_GET_STATICS_LOADING };\n}\n\nexport function stopGetStaticsLoading() {\n  return { type: LOADING.STOP_GET_STATICS_LOADING };\n}\n\nexport function startGetAllShowsLoading() {\n  return { type: LOADING.START_GET_ALL_SHOWS_LOADING };\n}\n\nexport function stopGetAllShowsLoading() {\n  return { type: LOADING.STOP_GET_ALL_SHOWS_LOADING };\n}\n\nexport function startCheckUsernameLoading() {\n  return { type: LOADING.START_CHECK_USERNAME_LOADING };\n}\n\nexport function stopCheckUsernameLoading() {\n  return { type: LOADING.STOP_CHECK_USERNAME_LOADING };\n}\n\nexport function startRegisterLoading() {\n  return { type: LOADING.START_REGISTER_LOADING };\n}\n\nexport function stopRegisterLoading() {\n  return { type: LOADING.STOP_REGISTER_LOADING };\n}\n\nexport function startLoginLoading() {\n  return { type: LOADING.START_LOGIN_LOADING };\n}\n\nexport function stopLoginLoading() {\n  return { type: LOADING.STOP_LOGIN_LOADING };\n}\n\nexport function startAddShowLoading() {\n  return { type: LOADING.START_ADD_SHOW_LOADING };\n}\n\nexport function stopAddShowLoading() {\n  return { type: LOADING.STOP_ADD_SHOW_LOADING };\n}\n\nexport function startVoteShowLoading() {\n  return { type: LOADING.START_VOTE_SHOW_LOADING };\n}\n\nexport function stopVoteShowLoading() {\n  return { type: LOADING.STOP_VOTE_SHOW_LOADING };\n}\n\nexport function startDeleteShowLoading() {\n  return { type: LOADING.START_DELETE_SHOW_LOADING };\n}\n\nexport function stopDeleteShowLoading() {\n  return { type: LOADING.STOP_DELETE_SHOW_LOADING };\n}\n","import { LOGIN } from '../constants/actions';\n\nexport function submitForLogin(username, password) {\n  return { type: LOGIN.SUBMIT_FOR_LOGIN, payload: { username, password } };\n}\n\nexport function resetLoginState() {\n  return { type: LOGIN.RESET_LOGIN_STATE };\n}\n","import { REGISTER } from '../constants/actions';\n\nexport function checkUsername(username) {\n  return { type: REGISTER.CHECK_USERNAME, payload: { username } };\n}\n\nexport function registerUser(username, password) {\n  return { type: REGISTER.REGISTER_USER, payload: { username, password } };\n}\n","import { SHOWS } from '../constants/actions';\n\nexport function getAllShows() {\n  return {\n    type: SHOWS.GET_ALL_SHOWS,\n  };\n}\n\nexport function setSortAndOrder(sort = null, order = null) {\n  sort = sort !== '' ? sort : null;\n  order = order !== '' ? order : null;\n\n  return {\n    type: SHOWS.SET_SORT_AND_ORDER,\n    payload: { sort, order },\n  };\n}\n\nexport function addShow(show) {\n  return { type: SHOWS.ADD_SHOW, payload: { show } };\n}\n\nexport function appendShows(shows) {\n  return { type: SHOWS.APPEND_SHOWS, payload: { shows } };\n}\n\nexport function updateShows(shows) {\n  return { type: SHOWS.UPDATE_SHOWS, payload: { shows } };\n}\n\nexport function resetVotes() {\n  return { type: SHOWS.RESET_VOTES };\n}\n\nexport function upvoteShow(showId, isUpvote) {\n  return { type: SHOWS.UPVOTE_SHOW, payload: { showId, isUpvote } };\n}\n\nexport function downvoteShow(showId, isDownvote) {\n  return { type: SHOWS.DOWNVOTE_SHOW, payload: { showId, isDownvote } };\n}\n\nexport function deleteShow(showId) {\n  return { type: SHOWS.DELETE_SHOW, payload: { showId } };\n}\n\nexport function removeShow(show) {\n  return { type: SHOWS.REMOVE_SHOW, payload: { show } };\n}\n","import { STATIC } from '../constants/actions';\n\nexport function getAllStatics() {\n  return { type: STATIC.GET_ALL_STATICS };\n}\n\nexport function updateTypeData(types) {\n  return { type: STATIC.UPDATE_TYPE_DATA, payload: { types } };\n}\n\nexport function updateLanguageData(languages) {\n  return { type: STATIC.UPDATE_LANGUAGE_DATA, payload: { languages } };\n}\n\nexport function updateGenreData(genres) {\n  return { type: STATIC.UPDATE_GENRE_DATA, payload: { genres } };\n}\n\nexport function addFilter({\n  type = null,\n  language = null,\n  genre = null,\n  q = null,\n} = {}) {\n  return {\n    type: STATIC.ADD_FILTER,\n    payload: { type, language, genre, q },\n  };\n}\n\nexport function removeFilter({\n  type = null,\n  language = null,\n  genre = null,\n} = {}) {\n  return {\n    type: STATIC.REMOVE_FILTER,\n    payload: { type, language, genre },\n  };\n}\n\nexport function resetFilter() {\n  return {\n    type: STATIC.RESET_FILTERS,\n  };\n}\n","import { TOAST } from '../constants/actions';\n\nexport function requestToShowToast(variant, message) {\n  return { type: TOAST.REQUEST_TO_SHOW_TOAST, payload: { variant, message } };\n}\n\nexport function showToast(variant, message) {\n  return { type: TOAST.SHOW_TOAST, payload: { variant, message } };\n}\n\nexport function hideToast() {\n  return { type: TOAST.HIDE_TOAST };\n}\n","import { USER } from '../constants/actions';\n\nexport function updateUserData(userInfo) {\n  return { type: USER.UPDATE_USER_DATA, payload: { userInfo } };\n}\n\nexport function setUsernameStatus(status) {\n  return { type: USER.SET_USERNAME_STATUS, payload: { status } };\n}\n\nexport function resetUserData() {\n  return { type: USER.RESET_USER_DATA };\n}\n","import { toastAction } from '../actions';\nimport { utils } from '../constants';\n\nimport store from './store';\n\nconst handleError = axios => {\n  axios.interceptors.response.use(\n    response => response,\n    error => {\n      const { status, data } = error.response;\n      if (\n        status === utils.APPLICATION_ERROR_STATUS_CODES.UNAUTHORIZED ||\n        status === utils.APPLICATION_ERROR_STATUS_CODES.NOT_ALLOWED\n      ) {\n        const { message } = data;\n        store.dispatch(\n          toastAction.requestToShowToast(\n            utils.MESSAGE_VARIANTS.WARNING,\n            message\n          )\n        );\n      } else if (status === utils.APPLICATION_ERROR_STATUS_CODES.FORBIDDEN) {\n        store.dispatch(\n          toastAction.requestToShowToast(\n            utils.MESSAGE_VARIANTS.WARNING,\n            'You are not allowed to access this.'\n          )\n        );\n      } else if (\n        status === utils.APPLICATION_ERROR_STATUS_CODES.MISSING_PARAMS ||\n        status === utils.APPLICATION_ERROR_STATUS_CODES.NOT_FOUND\n      ) {\n        store.dispatch(\n          toastAction.requestToShowToast(\n            utils.MESSAGE_VARIANTS.WARNING,\n            'The request you sent looks incomplete. Please check and try again.'\n          )\n        );\n      } else if (\n        status === utils.APPLICATION_ERROR_STATUS_CODES.INTERNAL_SERVER_ERROR\n      ) {\n        store.dispatch(\n          toastAction.requestToShowToast(\n            utils.MESSAGE_VARIANTS.ERROR,\n            'Some issue occured with the server. Please try again in sometime.'\n          )\n        );\n      }\n      return Promise.reject(error);\n    }\n  );\n};\n\nexport default handleError;\n","import axios from 'axios';\nimport { all, put, takeLatest } from '@redux-saga/core/effects';\n\nimport {\n  loadingAction,\n  showsAction,\n  toastAction,\n  userAction,\n} from '../actions';\n\nimport { actions, urls, utils } from '../constants';\n\nimport handleError from '../utils/errorHandler';\nimport { updateUserLoginInfo } from '../utils/users';\n\n/* -----------------------------------------\n *                 WORKERS\n * -----------------------------------------\n */\n\nfunction* loginSubmitWorker({ payload }) {\n  try {\n    handleError(axios);\n    const requestURL = urls.LOGIN_URL;\n\n    const body = payload;\n\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n\n    const response = yield axios.post(requestURL, body, { headers });\n\n    yield put(loadingAction.stopLoginLoading());\n\n    if (response && response.status === 200) {\n      const { data } = response;\n\n      const { message } = data;\n      const { user } = data.data;\n      updateUserLoginInfo(user);\n\n      yield put(\n        toastAction.requestToShowToast(utils.MESSAGE_VARIANTS.SUCCESS, message)\n      );\n\n      yield put(userAction.updateUserData(user));\n      yield put(showsAction.getAllShows({ userId: user._id }));\n    }\n  } catch (error) {\n    yield put(loadingAction.stopLoginLoading());\n  }\n}\n\n/* -----------------------------------------\n *                 WATCHERS\n * -----------------------------------------\n */\n\nfunction* loginSubmitWatcher() {\n  yield takeLatest(actions.LOGIN.SUBMIT_FOR_LOGIN, loginSubmitWorker);\n}\n\nexport default function* loginSaga() {\n  yield all([loginSubmitWatcher()]);\n}\n","import axios from 'axios';\nimport { all, debounce, put, takeLatest } from '@redux-saga/core/effects';\n\nimport {\n  loadingAction,\n  showsAction,\n  toastAction,\n  userAction,\n} from '../actions';\n\nimport { actions, urls, utils } from '../constants';\n\nimport handleError from '../utils/errorHandler';\nimport { updateUserLoginInfo } from '../utils/users';\n\n/* -----------------------------------------\n *                 WORKERS\n * -----------------------------------------\n */\n\nfunction* checkUsernameWorker({ payload }) {\n  try {\n    handleError(axios);\n\n    const { username } = payload;\n\n    const requestURL = urls.CHECK_USERNAME.replace(/<USER_NAME>/, username);\n\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n\n    const response = yield axios.get(requestURL, { headers });\n\n    yield put(loadingAction.stopCheckUsernameLoading());\n\n    if (response && response.status === 200) {\n      const { data } = response;\n      const { success } = data;\n      yield put(userAction.setUsernameStatus(success));\n    }\n  } catch (error) {\n    yield put(loadingAction.stopCheckUsernameLoading());\n  }\n}\n\nfunction* registerSubmitWorker({ payload }) {\n  try {\n    handleError(axios);\n    const requestURL = urls.REGISTER_URL;\n\n    const body = payload;\n\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n\n    const response = yield axios.post(requestURL, body, { headers });\n\n    yield put(loadingAction.stopRegisterLoading());\n\n    if (response && response.status === 201) {\n      const { data } = response;\n      const { message } = data;\n      const { user } = data.data;\n\n      updateUserLoginInfo(user);\n\n      yield put(\n        toastAction.requestToShowToast(utils.MESSAGE_VARIANTS.SUCCESS, message)\n      );\n\n      yield put(userAction.updateUserData(user));\n      yield put(showsAction.getAllShows({ userId: user._id }));\n    }\n  } catch (error) {\n    yield put(loadingAction.stopRegisterLoading());\n  }\n}\n\n/* -----------------------------------------\n *                 WATCHERS\n * -----------------------------------------\n */\n\nfunction* checkUsernameWatcher() {\n  yield debounce(1000, actions.REGISTER.CHECK_USERNAME, checkUsernameWorker);\n}\n\nfunction* registerSubmitWatcher() {\n  yield takeLatest(actions.REGISTER.REGISTER_USER, registerSubmitWorker);\n}\n\nexport default function* registerSaga() {\n  yield all([checkUsernameWatcher(), registerSubmitWatcher()]);\n}\n","import { createSelector } from 'reselect';\n\nconst selectLoadingState = state => state.loading;\n\nexport const getStaticsLoadingState = () =>\n  createSelector(\n    selectLoadingState,\n    loadingState => loadingState.isGetStaticsLoading\n  );\n\nexport const getAllShowsLoadingState = () =>\n  createSelector(\n    selectLoadingState,\n    loadingState => loadingState.isGetAllShowsLoading\n  );\n\nexport const getRegisterLoadingState = () =>\n  createSelector(\n    selectLoadingState,\n    loadingState => loadingState.isRegisterSubmitLoading\n  );\n\nexport const getLoginLoadingState = () =>\n  createSelector(\n    selectLoadingState,\n    loadingState => loadingState.isLoginSubmitLoading\n  );\n\nexport const getCheckUsernameLoadingState = () =>\n  createSelector(\n    selectLoadingState,\n    loadingState => loadingState.isCheckUsernameLoading\n  );\n\nexport const getAddShowSubmitLoadingState = () =>\n  createSelector(\n    selectLoadingState,\n    loadingState => loadingState.isAddShowSubmitLoading\n  );\n","import { createSelector } from 'reselect';\n\nimport { utils } from '../constants';\n\nconst selectShows = state => state.shows.shows;\nconst selectSort = state => state.shows.sort;\nconst selectOrder = state => state.shows.order;\n\nconst createdAtDescSort = (showA, showB) =>\n  new Date(showB.created_at) - new Date(showA.created_at);\n\nconst createdAtAscSort = (showA, showB) =>\n  new Date(showA.created_at) - new Date(showB.created_at);\n\nconst popularDescSort = (showA, showB) =>\n  showB.upvotes - showB.downvotes - (showA.upvotes - showA.downvotes);\n\nconst popularAscSort = (showA, showB) =>\n  showA.upvotes - showA.downvotes - (showB.upvotes - showB.downvotes);\n\nconst votesDescSort = (showA, showB) => showB.upvotes - showA.upvotes;\n\nconst votesAscSort = (showA, showB) => showB.downvotes - showA.downvotes;\n\nconst getSortFunction = (sort, order) => {\n  if (\n    sort === utils.SORT_TYPES.CREATED_AT &&\n    order === utils.ORDER_TYPES.ASCENDING\n  ) {\n    return createdAtAscSort;\n  } else if (\n    sort === utils.SORT_TYPES.POPULAR &&\n    order === utils.ORDER_TYPES.DESCENDING\n  ) {\n    return popularDescSort;\n  } else if (\n    sort === utils.SORT_TYPES.POPULAR &&\n    order === utils.ORDER_TYPES.ASCENDING\n  ) {\n    return popularAscSort;\n  } else if (\n    sort === utils.SORT_TYPES.VOTE &&\n    order === utils.ORDER_TYPES.DESCENDING\n  ) {\n    return votesDescSort;\n  } else if (\n    sort === utils.SORT_TYPES.VOTE &&\n    order === utils.ORDER_TYPES.ASCENDING\n  ) {\n    return votesAscSort;\n  }\n\n  return createdAtDescSort;\n};\n\nexport const getAllShows = () =>\n  createSelector([selectShows, selectSort, selectOrder], (shows, sort, order) =>\n    shows.sort(getSortFunction(sort, order))\n  );\n\nexport const getSortAndOrder = () =>\n  createSelector([selectSort, selectOrder], (sort, order) => ({\n    sort,\n    order,\n  }));\n","import { createSelector } from 'reselect';\n\nconst selectTypes = state => state.static.types;\nconst selectLanguages = state => state.static.languages;\nconst selectGenres = state => state.static.genres;\nconst selectFilter = state => state.static.filter;\nconst selectAppliedFilters = state => state.static.appliedFilters;\n\nexport const getAllTypes = () =>\n  createSelector([selectTypes, selectFilter], (types, filter) => {\n    const allTypeIds = Object.keys(types);\n    const newTypes = { ...types };\n\n    for (let typeId of allTypeIds) {\n      if (new Set(filter.types).has(typeId)) {\n        newTypes[typeId].isChecked = true;\n      } else {\n        newTypes[typeId].isChecked = false;\n      }\n    }\n\n    return newTypes;\n  });\n\nexport const getAllLanguages = () =>\n  createSelector([selectLanguages, selectFilter], (languages, filter) => {\n    const allLanguageIds = Object.keys(languages);\n    const newLanguages = { ...languages };\n\n    for (let languageId of allLanguageIds) {\n      if (new Set(filter.languages).has(languageId)) {\n        newLanguages[languageId].isChecked = true;\n      } else {\n        newLanguages[languageId].isChecked = false;\n      }\n    }\n\n    return newLanguages;\n  });\n\nexport const getAllGenres = () =>\n  createSelector([selectGenres, selectFilter], (genres, filter) => {\n    const allGenreIds = Object.keys(genres);\n    const newGenres = { ...genres };\n\n    for (let genreId of allGenreIds) {\n      if (new Set(filter.genres).has(genreId)) {\n        newGenres[genreId].isChecked = true;\n      } else {\n        newGenres[genreId].isChecked = false;\n      }\n    }\n\n    return newGenres;\n  });\n\nexport const getSearchText = () =>\n  createSelector(selectFilter, filter => filter.q);\n\nexport const getFilters = () =>\n  createSelector(selectFilter, filterState => filterState);\n\nexport const getAppliedFilters = () =>\n  createSelector(\n    selectAppliedFilters,\n    appliedFilterState => appliedFilterState\n  );\n","import { createSelector } from 'reselect';\n\nconst selectToastState = state => state.toast;\n\nexport const getToastState = () =>\n  createSelector(selectToastState, toastState => toastState.show);\n\nexport const getToastMessage = () =>\n  createSelector(selectToastState, toastState => toastState.message);\n\nexport const getToastVariant = () =>\n  createSelector(selectToastState, toastState => toastState.variant);\n","import { createSelector } from 'reselect';\n\nconst selectUserState = state => state.user;\n\nexport const isUserLoggedIn = () =>\n  createSelector(selectUserState, userState => userState.isLoggedIn);\n\nexport const getAuthToken = () =>\n  createSelector(\n    selectUserState,\n    userState =>\n      userState._id &&\n      userState.token &&\n      'Bearer ' + userState._id + ',' + userState.token\n  );\n\nexport const getCurrentUserId = () =>\n  createSelector(selectUserState, userState => userState._id);\n\nexport const getCurrentUsername = () =>\n  createSelector(selectUserState, userState => userState.username);\n\nexport const isValidUsername = () =>\n  createSelector(selectUserState, userState => userState.isValidUsername);\n","import axios from 'axios';\nimport {\n  all,\n  debounce,\n  put,\n  select,\n  takeEvery,\n} from '@redux-saga/core/effects';\n\nimport { loadingAction, showsAction, toastAction } from '../actions';\n\nimport { actions, urls, utils } from '../constants';\n\nimport { showsSelector, staticSelector, userSelector } from '../selectors';\n\nimport handleError from '../utils/errorHandler';\n\n/* -----------------------------------------\n *                 WORKERS\n * -----------------------------------------\n */\n\nfunction* getAllShowsWorker() {\n  try {\n    handleError(axios);\n\n    const authToken = yield select(userSelector.getAuthToken());\n\n    const filters = yield select(staticSelector.getFilters());\n    const { sort, order } = yield select(showsSelector.getSortAndOrder());\n\n    const { user_id, types, languages, genres, q } = filters;\n\n    const requestURL = urls.GET_ALL_SHOWS;\n\n    const headers = {\n      'Content-Type': 'application/json',\n      ...(authToken && { Authorization: authToken }),\n    };\n\n    const params = {\n      ...(user_id && { user_id }),\n      ...(types && types.length > 0 && { types: types.join(',') }),\n      ...(languages &&\n        languages.length > 0 && { languages: languages.join(',') }),\n      ...(genres && genres.length > 0 && { genres: genres.join(',') }),\n      ...(q && q !== '' && { q }),\n      ...(sort && { sort }),\n      ...(order && { order }),\n    };\n\n    const isFilterApiCall =\n      (types && types.length > 0) ||\n      (languages && languages.length > 0) ||\n      (genres && genres.length > 0) ||\n      (q && q !== '') ||\n      sort ||\n      order;\n\n    const response = yield axios.get(requestURL, { headers, params });\n\n    yield put(loadingAction.stopGetAllShowsLoading());\n\n    if (response && response.status === 200) {\n      const { data } = response;\n      const { shows } = data.data;\n\n      if (isFilterApiCall) {\n        yield put(showsAction.updateShows(shows));\n      } else {\n        yield put(showsAction.appendShows(shows));\n      }\n    }\n  } catch (error) {\n    yield put(loadingAction.stopGetAllShowsLoading());\n  }\n}\n\nfunction* addShowWorker({ payload }) {\n  try {\n    handleError(axios);\n    const userId = yield select(userSelector.getCurrentUserId());\n\n    const authToken = yield select(userSelector.getAuthToken());\n\n    const requestURL = urls.ADD_SHOWS.replace(/<USER_ID>/, userId);\n\n    const body = payload.show;\n\n    const headers = {\n      'Content-Type': 'application/json',\n      Authorization: authToken,\n    };\n\n    const response = yield axios.post(requestURL, body, { headers });\n\n    yield put(loadingAction.stopAddShowLoading());\n\n    if (response && response.status === 201) {\n      const { data } = response;\n      const { message } = data;\n      const { show } = data.data;\n\n      yield put(showsAction.appendShows([show]));\n\n      yield put(\n        toastAction.requestToShowToast(utils.MESSAGE_VARIANTS.SUCCESS, message)\n      );\n    }\n  } catch (error) {\n    yield put(loadingAction.stopAddShowLoading());\n  }\n}\n\nfunction* upvoteShowWorker({ payload }) {\n  try {\n    handleError(axios);\n    const userId = yield select(userSelector.getCurrentUserId());\n\n    const authToken = yield select(userSelector.getAuthToken());\n\n    const { showId, isUpvote } = payload;\n\n    const requestURL = urls.UPVOTE_SHOW.replace(/<USER_ID>/, userId).replace(\n      /<SHOW_ID>/,\n      showId\n    );\n\n    const body = { isUpvote };\n\n    const headers = {\n      'Content-Type': 'application/json',\n      Authorization: authToken,\n    };\n\n    const response = yield axios.post(requestURL, body, { headers });\n\n    yield put(loadingAction.stopVoteShowLoading());\n\n    if (response && response.status === 200) {\n      const { data } = response;\n      const { show } = data.data;\n\n      yield put(showsAction.appendShows([show]));\n    }\n  } catch (error) {\n    yield put(loadingAction.stopVoteShowLoading());\n  }\n}\n\nfunction* downvoteShowWorker({ payload }) {\n  try {\n    handleError(axios);\n    const userId = yield select(userSelector.getCurrentUserId());\n\n    const authToken = yield select(userSelector.getAuthToken());\n\n    const { showId, isDownvote } = payload;\n\n    const requestURL = urls.DOWNVOTE_SHOW.replace(/<USER_ID>/, userId).replace(\n      /<SHOW_ID>/,\n      showId\n    );\n\n    const body = { isDownvote };\n\n    const headers = {\n      'Content-Type': 'application/json',\n      Authorization: authToken,\n    };\n\n    const response = yield axios.post(requestURL, body, { headers });\n\n    yield put(loadingAction.stopVoteShowLoading());\n\n    if (response && response.status === 200) {\n      const { data } = response;\n      const { show } = data.data;\n\n      yield put(showsAction.appendShows([show]));\n    }\n  } catch (error) {\n    yield put(loadingAction.stopVoteShowLoading());\n  }\n}\n\nfunction* deleteShowWorker({ payload }) {\n  try {\n    debugger;\n    handleError(axios);\n    const userId = yield select(userSelector.getCurrentUserId());\n\n    const authToken = yield select(userSelector.getAuthToken());\n\n    const { showId } = payload;\n\n    const requestURL = urls.DELETE_SHOW.replace(/<USER_ID>/, userId).replace(\n      /<SHOW_ID>/,\n      showId\n    );\n\n    const headers = {\n      'Content-Type': 'application/json',\n      Authorization: authToken,\n    };\n\n    const response = yield axios.delete(requestURL, { headers });\n\n    yield put(loadingAction.stopDeleteShowLoading());\n\n    if (response && response.status === 200) {\n      const { data } = response;\n      const { show } = data.data;\n      const { message } = data;\n      yield put(\n        toastAction.requestToShowToast(utils.MESSAGE_VARIANTS.SUCCESS, message)\n      );\n\n      yield put(showsAction.removeShow(show));\n    }\n  } catch (error) {\n    yield put(loadingAction.stopDeleteShowLoading());\n  }\n}\n\n/* -----------------------------------------\n *                 WATCHERS\n * -----------------------------------------\n */\n\nfunction* getAllShowsWatcher() {\n  yield debounce(600, actions.SHOWS.GET_ALL_SHOWS, getAllShowsWorker);\n}\n\nfunction* addShowWatcher() {\n  yield takeEvery(actions.SHOWS.ADD_SHOW, addShowWorker);\n}\n\nfunction* upvoteShowWatcher() {\n  yield takeEvery(actions.SHOWS.UPVOTE_SHOW, upvoteShowWorker);\n}\n\nfunction* downvoteShowWatcher() {\n  yield takeEvery(actions.SHOWS.DOWNVOTE_SHOW, downvoteShowWorker);\n}\n\nfunction* deleteShowWatcher() {\n  yield takeEvery(actions.SHOWS.DELETE_SHOW, deleteShowWorker);\n}\n\nexport default function* showsSaga() {\n  yield all([\n    getAllShowsWatcher(),\n    addShowWatcher(),\n    upvoteShowWatcher(),\n    downvoteShowWatcher(),\n    deleteShowWatcher(),\n  ]);\n}\n","import axios from 'axios';\nimport { all, put, takeEvery } from '@redux-saga/core/effects';\n\nimport { loadingAction, staticAction } from '../actions';\n\nimport { actions, urls } from '../constants';\n\nimport handleError from '../utils/errorHandler';\n\n/* -----------------------------------------\n *                 WORKERS\n * -----------------------------------------\n */\n\nfunction* getAllStaticsWorker() {\n  try {\n    handleError(axios);\n\n    const requestURL = urls.GET_STATICS;\n\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n\n    const response = yield axios.get(requestURL, { headers });\n\n    yield put(loadingAction.stopGetStaticsLoading());\n\n    if (response && response.status === 200) {\n      const { data } = response;\n      let { types, languages, genres } = data.data;\n\n      yield put(staticAction.updateTypeData(types));\n      yield put(staticAction.updateLanguageData(languages));\n      yield put(staticAction.updateGenreData(genres));\n    }\n  } catch (error) {\n    yield put(loadingAction.stopGetStaticsLoading());\n  }\n}\n\n/* -----------------------------------------\n *                 WATCHERS\n * -----------------------------------------\n */\n\nfunction* getAllStaticsWatcher() {\n  yield takeEvery(actions.STATIC.GET_ALL_STATICS, getAllStaticsWorker);\n}\n\nexport default function* staticSaga() {\n  yield all([getAllStaticsWatcher()]);\n}\n","import { all, delay, put, select, takeEvery } from '@redux-saga/core/effects';\n\nimport { toastAction } from '../actions';\n\nimport { actions } from '../constants';\n\nimport { toastSelector } from '../selectors';\n\n/* -----------------------------------------\n *                 WORKERS\n * -----------------------------------------\n */\n\nfunction* showToastWorker() {\n  const toastVariant = yield select(toastSelector.getToastVariant());\n  const toastMessage = yield select(toastSelector.getToastMessage());\n\n  yield put(toastAction.hideToast());\n  yield delay(100);\n  yield put(toastAction.showToast(toastVariant, toastMessage));\n}\n\n/* -----------------------------------------\n *                 WATCHERS\n * -----------------------------------------\n */\n\nfunction* showToastWatcher() {\n  yield takeEvery(actions.TOAST.REQUEST_TO_SHOW_TOAST, showToastWorker);\n}\n\nexport default function* toastSaga() {\n  yield all([showToastWatcher()]);\n}\n","import { all, fork } from '@redux-saga/core/effects';\n\nimport loginSaga from './login.saga';\nimport registerSaga from './register.saga';\nimport showsSaga from './shows.saga';\nimport staticSaga from './static.saga';\nimport toastSaga from './toast.saga';\n\nexport default function* rootSaga() {\n  yield all([\n    fork(loginSaga),\n    fork(registerSaga),\n    fork(showsSaga),\n    fork(staticSaga),\n    fork(toastSaga),\n  ]);\n}\n","import { toastAction } from '../actions';\nimport { storage, utils } from '../constants';\nimport { checkIfUserIsLoggedIn, logoutUser } from './users';\n\nconst checkTokenExpiration = store => next => action => {\n  const tokenExpireAt = +localStorage.getItem(storage.USER.EXPIRE_AT);\n  const { isLoggedIn } = checkIfUserIsLoggedIn();\n\n  if (!isLoggedIn && tokenExpireAt) {\n    logoutUser();\n\n    store.dispatch(\n      toastAction.requestToShowToast(\n        utils.MESSAGE_VARIANTS.WARNING,\n        'Your session has expired. Please login again.'\n      )\n    );\n  }\n\n  next(action);\n};\n\nexport default checkTokenExpiration;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { routerMiddleware } from 'connected-react-router';\n\nimport history from './history';\nimport rootReducer from '../reducers';\nimport rootSaga from '../sagas';\n\nimport checkTokenExpiration from './token';\n\nconst sagaMiddleWare = createSagaMiddleware();\n\nconst composeEnhancers =\n  process.env.NODE_ENV !== 'production' &&\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        shouldHotReload: false,\n      })\n    : compose;\n\nconst enhancers = [\n  applyMiddleware(\n    sagaMiddleWare,\n    checkTokenExpiration,\n    routerMiddleware(history)\n  ),\n];\nconst store = createStore(rootReducer(history), composeEnhancers(...enhancers));\nsagaMiddleWare.run(rootSaga);\n\nexport default store;\n","import 'typeface-lato';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nconst CustomThemeObject = {\n  typography: {\n    fontFamily: '\"Lato\"',\n    fontSize: 14,\n    fontWeightLight: 300,\n    fontWeightRegular: 400,\n    fontWeightMedium: 500,\n  },\n  palette: {\n    primary: {\n      light: '#3492ca',\n      main: '#0277bd',\n      dark: '#015384',\n    },\n    secondary: {\n      light: '#fbcc57',\n      main: '#fbc02d',\n      dark: '#af861f',\n    },\n  },\n};\n\nconst CustomTheme = createMuiTheme(CustomThemeObject);\n\nexport default CustomTheme;\n","const style = () => ({\n  filterArea: {\n    paddingTop: '.5rem',\n    paddingBottom: '.5rem',\n  },\n  expansionPanelHeading: {\n    borderBottom: '1px solid #C3C3C3',\n  },\n  expansionPanelBody: {\n    padding: 0,\n  },\n  filterListArea: {\n    width: '100%',\n    maxHeight: 150,\n    overflow: 'auto',\n  },\n});\n\nexport default style;\n","import React from 'react';\nimport clsx from 'clsx';\n\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport style from './style';\nimport { utils } from '../../constants';\n\nconst ListFilters = props => {\n  const {\n    type,\n    title,\n    values,\n    expanded,\n    handleExpansion,\n    handleOnCheckBoxClick,\n  } = props;\n\n  let valuesList = Object.values(values);\n\n  if (type === utils.FILTER_TYPES.GENRE) {\n    valuesList = valuesList.sort((valueA, valueB) =>\n      valueA.name.toLowerCase().localeCompare(valueB.name.toLowerCase())\n    );\n  }\n\n  const classes = makeStyles(style)();\n\n  return (\n    <>\n      <Grid className={classes.filterArea} item xs={12}>\n        <ExpansionPanel square expanded={expanded}>\n          <ExpansionPanelSummary\n            className={clsx(expanded && classes.expansionPanelHeading)}\n            expandIcon={<ExpandMoreIcon />}\n            onClick={handleExpansion}\n          >\n            <Typography variant=\"h6\">{title}</Typography>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails className={classes.expansionPanelBody}>\n            <List className={classes.filterListArea}>\n              {valuesList.map(value => (\n                <ListItem\n                  key={value._id}\n                  role={undefined}\n                  dense\n                  button\n                  onClick={handleOnCheckBoxClick(value)}\n                >\n                  <ListItemIcon>\n                    <Checkbox\n                      edge=\"start\"\n                      checked={value.isChecked}\n                      tabIndex={-1}\n                      disableRipple\n                    />\n                  </ListItemIcon>\n                  <ListItemText primary={value.name} />\n                </ListItem>\n              ))}\n            </List>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n      </Grid>\n    </>\n  );\n};\n\nexport default ListFilters;\n","const style = theme => ({\n  filterArea: {\n    margin: theme.spacing(1),\n  },\n  filterChipsArea: {\n    marginTop: '.5rem',\n    marginBottom: '.5rem',\n    backgroundColor: '#F7F7F7',\n  },\n  chips: {\n    padding: '.25rem',\n    margin: '.5rem',\n  },\n  divider: {\n    marginTop: '1rem',\n    marginBottom: '1rem',\n  },\n});\n\nexport default style;\n","import React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Hidden from '@material-ui/core/Hidden';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ListFilters from '../ListFilters';\n\nimport style from './style';\n\nimport { utils } from '../../constants';\n\nconst FilterArea = props => {\n  const { types, languages, genres, appliedFilters } = props;\n\n  const classes = makeStyles(style)();\n\n  const [typeExpanded, setTypeExpansion] = React.useState(true);\n  const [languageExpanded, setLanguageExpansion] = React.useState(false);\n  const [genreExpanded, setGenreExpansion] = React.useState(false);\n\n  const handleExpansion = type => {\n    if (type === utils.FILTER_TYPES.TYPE) {\n      setTypeExpansion(!typeExpanded);\n    } else if (type === utils.FILTER_TYPES.LANGUAGE) {\n      setLanguageExpansion(!languageExpanded);\n    } else if (type === utils.FILTER_TYPES.GENRE) {\n      setGenreExpansion(!genreExpanded);\n    }\n  };\n\n  const handleOnCheckBoxClick = currentValue => () => {\n    const { addFilter, removeFilter } = props;\n\n    if (currentValue.type === utils.FILTER_TYPES.TYPE) {\n      if (!currentValue.isChecked) {\n        addFilter({ type: currentValue._id });\n      } else {\n        removeFilter({ type: currentValue._id });\n      }\n    } else if (currentValue.type === utils.FILTER_TYPES.LANGUAGE) {\n      if (!currentValue.isChecked) {\n        addFilter({ language: currentValue._id });\n      } else {\n        removeFilter({ language: currentValue._id });\n      }\n    } else if (currentValue.type === utils.FILTER_TYPES.GENRE) {\n      if (!currentValue.isChecked) {\n        addFilter({ genre: currentValue._id });\n      } else {\n        removeFilter({ genre: currentValue._id });\n      }\n    }\n  };\n\n  const handleOnDeleteValue = currentValue => () => {\n    const { removeFilter } = props;\n\n    if (currentValue.type === utils.FILTER_TYPES.TYPE) {\n      removeFilter({ type: currentValue._id });\n    } else if (currentValue.type === utils.FILTER_TYPES.LANGUAGE) {\n      removeFilter({ language: currentValue._id });\n    } else if (currentValue.type === utils.FILTER_TYPES.GENRE) {\n      removeFilter({ genre: currentValue._id });\n    }\n  };\n\n  const handleResetFilter = () => {\n    const { resetFilter } = props;\n    resetFilter();\n  };\n\n  const applyFilter = () => {\n    const { getAllShows, handleCloseFilterArea } = props;\n    getAllShows();\n    handleCloseFilterArea && handleCloseFilterArea();\n  };\n\n  const filterChipComponent =\n    appliedFilters &&\n    appliedFilters.length > 0 &&\n    appliedFilters.map(value => (\n      <Chip\n        className={classes.chips}\n        key={value._id + ' ' + value.type}\n        variant=\"outlined\"\n        color=\"primary\"\n        label={value.name}\n        onDelete={handleOnDeleteValue(value)}\n      />\n    ));\n\n  return (\n    <>\n      <Grid className={classes.filterArea}>\n        <Grid container justify=\"space-between\">\n          <Grid item xs>\n            <Typography variant=\"h6\">Filters</Typography>\n          </Grid>\n\n          {appliedFilters && appliedFilters.length > 0 && (\n            <Grid item xs={4}>\n              <Button\n                color=\"primary\"\n                fullWidth\n                disabled={appliedFilters && appliedFilters.length < 1}\n                onClick={handleResetFilter}\n              >\n                Clear All\n              </Button>\n            </Grid>\n          )}\n        </Grid>\n\n        <Paper className={classes.filterChipsArea} elevation={0}>\n          {filterChipComponent}\n        </Paper>\n\n        {appliedFilters && appliedFilters.length > 0 && (\n          <>\n            <Hidden smDown>\n              <Grid item md={5}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  fullWidth\n                  disabled={appliedFilters && appliedFilters.length < 1}\n                  onClick={applyFilter}\n                >\n                  Apply\n                </Button>\n              </Grid>\n            </Hidden>\n\n            <Hidden mdUp>\n              <Grid container justify=\"center\">\n                <Grid item xs={6}>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    fullWidth\n                    disabled={appliedFilters && appliedFilters.length < 1}\n                    onClick={applyFilter}\n                  >\n                    Apply\n                  </Button>\n                </Grid>\n              </Grid>\n            </Hidden>\n          </>\n        )}\n\n        <Divider className={classes.divider} />\n\n        <ListFilters\n          type={utils.FILTER_TYPES.TYPE}\n          title=\"Types\"\n          values={types}\n          expanded={typeExpanded}\n          handleExpansion={() => handleExpansion(utils.FILTER_TYPES.TYPE)}\n          handleOnCheckBoxClick={handleOnCheckBoxClick}\n        />\n\n        <ListFilters\n          type={utils.FILTER_TYPES.LANGUAGE}\n          title=\"Languages\"\n          values={languages}\n          expanded={languageExpanded}\n          handleExpansion={() => handleExpansion(utils.FILTER_TYPES.LANGUAGE)}\n          handleOnCheckBoxClick={handleOnCheckBoxClick}\n        />\n\n        <ListFilters\n          type={utils.FILTER_TYPES.GENRE}\n          title=\"Genres\"\n          values={genres}\n          expanded={genreExpanded}\n          handleExpansion={() => handleExpansion(utils.FILTER_TYPES.GENRE)}\n          handleOnCheckBoxClick={handleOnCheckBoxClick}\n        />\n      </Grid>\n    </>\n  );\n};\n\nexport default FilterArea;\n","import React from 'react';\n\nimport Slide from '@material-ui/core/Slide';\n\nconst SlideTransition = React.forwardRef((props, ref) => {\n  return (\n    <>\n      <Slide direction=\"up\" ref={ref} {...props} />;\n    </>\n  );\n});\n\nexport default SlideTransition;\n","const style = theme => ({\n  sortArea: {\n    padding: theme.spacing(2, 1),\n  },\n  sortTitle: {\n    fontSize: 22,\n    [theme.breakpoints.down('xm')]: {\n      fontSize: 19,\n    },\n    [theme.breakpoints.down('xs')]: {\n      fontSize: 16,\n    },\n  },\n});\n\nexport default style;\n","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Typography from '@material-ui/core/Typography';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport style from './style';\n\nimport { utils } from '../../constants';\n\nconst SortArea = props => {\n  const classes = makeStyles(style)();\n\n  const [sort, setSortValue] = React.useState('-');\n\n  const handleChangeSortBy = event => {\n    const { setSortAndOrder, getAllShows } = props;\n    setSortValue(event.target.value);\n    const [sort, order] = event.target.value.split('-');\n    setSortAndOrder(sort, order);\n    getAllShows();\n  };\n\n  return (\n    <>\n      <Grid className={classes.sortArea} container alignItems=\"center\">\n        <Grid item xs={3}>\n          <Typography className={classes.sortTitle} variant=\"h6\" gutterBottom>\n            Sort By\n          </Typography>\n        </Grid>\n        <Grid item xs>\n          <FormControl variant=\"outlined\" fullWidth>\n            <InputLabel id=\"sort-area-label\">Sort by</InputLabel>\n            <Select\n              labelId=\"sort-area-label\"\n              id=\"sort-area-select\"\n              value={sort}\n              onChange={handleChangeSortBy}\n              label=\"Sort by\"\n            >\n              <MenuItem value={'-'}>Recently Added</MenuItem>\n              <MenuItem\n                value={`${utils.SORT_TYPES.CREATED_AT}-${utils.ORDER_TYPES.ASCENDING}`}\n              >\n                Oldest Post\n              </MenuItem>\n              <MenuItem\n                value={`${utils.SORT_TYPES.POPULAR}-${utils.ORDER_TYPES.DESCENDING}`}\n              >\n                Most Popular\n              </MenuItem>\n              <MenuItem\n                value={`${utils.SORT_TYPES.POPULAR}-${utils.ORDER_TYPES.ASCENDING}`}\n              >\n                Least Popular\n              </MenuItem>\n              <MenuItem\n                value={`${utils.SORT_TYPES.VOTE}-${utils.ORDER_TYPES.DESCENDING}`}\n              >\n                Most Upvoted\n              </MenuItem>\n              <MenuItem\n                value={`${utils.SORT_TYPES.VOTE}-${utils.ORDER_TYPES.ASCENDING}`}\n              >\n                Most Downvoted\n              </MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default SortArea;\n","import React from 'react';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\nimport FilterListRoundedIcon from '@material-ui/icons/FilterListRounded';\n\nimport FilterArea from '../FilterArea';\nimport SlideTransition from '../SlideTransition';\nimport SortArea from '../SortArea';\n\nconst FilterAreaMobile = props => {\n  const [openFilterArea, setFilterAreaState] = React.useState(false);\n\n  const handleOpenFilterArea = () => {\n    setFilterAreaState(true);\n  };\n\n  const handleCloseFilterArea = () => {\n    setFilterAreaState(false);\n  };\n\n  return (\n    <>\n      <Grid container justify=\"center\">\n        <Grid item xs={8}>\n          <SortArea {...props} />\n        </Grid>\n        <Grid item xs={8}>\n          <Button\n            color=\"primary\"\n            size=\"large\"\n            startIcon={<FilterListRoundedIcon />}\n            onClick={handleOpenFilterArea}\n            fullWidth\n          >\n            Filter List\n          </Button>\n        </Grid>\n      </Grid>\n\n      <Dialog\n        open={openFilterArea}\n        keepMounted={false}\n        TransitionComponent={SlideTransition}\n        fullScreen\n        maxWidth=\"sm\"\n        onClose={handleCloseFilterArea}\n      >\n        <AppBar position=\"sticky\">\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              onClick={handleCloseFilterArea}\n            >\n              <CloseRoundedIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        <FilterArea {...props} handleCloseFilterArea={handleCloseFilterArea} />\n      </Dialog>\n    </>\n  );\n};\n\nexport default FilterAreaMobile;\n","const style = theme => ({\n  filterArea: {\n    margin: theme.spacing(3, 1),\n  },\n});\n\nexport default style;\n","import React from 'react';\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport FilterArea from '../FilterArea';\nimport SortArea from '../SortArea';\n\nimport style from './style';\n\nconst FilterAreaWeb = props => {\n  const classes = makeStyles(style)();\n\n  return (\n    <>\n      <Card className={classes.filterArea}>\n        <CardContent>\n          <SortArea {...props} />\n          <FilterArea {...props} />\n        </CardContent>\n      </Card>\n    </>\n  );\n};\n\nexport default FilterAreaWeb;\n","import React from 'react';\n\nimport PacmanLoader from 'react-spinners/PacmanLoader';\n\nimport Grid from '@material-ui/core/Grid';\n\nconst Loading = ({ loading }) => {\n  return (\n    <Grid\n      container\n      justify=\"center\"\n      alignItems=\"center\"\n      style={{ height: '100vh' }}\n    >\n      <PacmanLoader color=\"#FFDF46\" size={50} loading={loading} />\n    </Grid>\n  );\n};\n\nexport default Loading;\n","const style = theme => ({\n  descriptionArea: {\n    paddingTop: '2rem',\n    paddingRight: '2rem',\n    [theme.breakpoints.down('sm')]: {\n      paddingRight: '1rem',\n    },\n    [theme.breakpoints.down('xs')]: {\n      paddingRight: '0rem',\n    },\n  },\n  titleArea: {\n    marginBottom: '1rem',\n  },\n  title: {\n    fontWeight: 700,\n    fontSize: 30,\n    color: '#424242',\n    [theme.breakpoints.down('sm')]: {\n      fontWeight: 600,\n      fontSize: 26,\n    },\n    [theme.breakpoints.down('xs')]: {\n      fontWeight: 600,\n      fontSize: 22,\n    },\n  },\n  watchButton: {\n    fontWeight: 600,\n    paddingRight: '2rem',\n    paddingLeft: '2rem',\n    [theme.breakpoints.down('xs')]: {\n      fontWeight: 500,\n      paddingRight: '1rem',\n      paddingLeft: '1rem',\n    },\n  },\n  metadataArea: {\n    marginTop: '.5rem',\n    marginBottom: '1rem',\n  },\n  tabArea: {\n    marginTop: '.5rem',\n  },\n  languageIcon: {\n    color: '#8097A4',\n  },\n  deleteIcon: {\n    color: '#8097A4',\n    marginTop: 6,\n  },\n  languageText: {\n    marginLeft: '.75rem',\n    fontSize: 16,\n    color: '#8097A4',\n  },\n  typeIcon: {\n    color: '#556B84',\n  },\n  typeText: {\n    marginLeft: '.75rem',\n    fontSize: 16,\n    color: '#556B84',\n  },\n  genreIcon: {\n    color: '#125BA2',\n  },\n  genreTab: {\n    marginLeft: '.75rem',\n  },\n  sideHamburger: {\n    marginLeft: '1rem',\n  },\n});\n\nexport default style;\n","import React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Typography from '@material-ui/core/Typography';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nimport CameraRollRoundedIcon from '@material-ui/icons/CameraRollRounded';\nimport DeleteRoundedIcon from '@material-ui/icons/DeleteRounded';\nimport LanguageRoundedIcon from '@material-ui/icons/LanguageRounded';\nimport MoreVertRoundedIcon from '@material-ui/icons/MoreVertRounded';\nimport MovieRoundedIcon from '@material-ui/icons/MovieRounded';\nimport OpenInNewRoundedIcon from '@material-ui/icons/OpenInNewRounded';\n\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\n\nimport style from './style';\nimport { getCompleteUrl } from '../../utils/lib';\n\nconst MovieDescriptionCard = props => {\n  const classes = makeStyles(style)();\n  const theme = useTheme();\n  const isMobileView = useMediaQuery(theme.breakpoints.down('xs'));\n\n  const {\n    name,\n    _id,\n    url,\n    created_by,\n    userId,\n    language,\n    type,\n    genres,\n    onDeleteShow,\n  } = props;\n\n  const [hamburgerElement, setHamburgerElement] = React.useState(null);\n  const [deleteShowPopupState, setDeleteShowPopupState] = React.useState(false);\n\n  const genreComponent =\n    genres &&\n    genres.map((genre, index) => (\n      <Chip\n        key={index}\n        className={classes.genreTab}\n        variant=\"outlined\"\n        color=\"primary\"\n        size=\"small\"\n        label={genre}\n      />\n    ));\n\n  const handleHamburgerOpen = event => {\n    setHamburgerElement(event.currentTarget);\n  };\n\n  const handleHamburgerClose = () => {\n    setHamburgerElement(null);\n  };\n\n  const handleDeleteShowSubmit = event => {\n    event.preventDefault();\n    onDeleteShow(_id);\n  };\n\n  const handleCancelDelete = () => {\n    setHamburgerElement(null);\n    setDeleteShowPopupState(false);\n  };\n\n  return (\n    <>\n      <Grid className={classes.descriptionArea}>\n        <Grid className={classes.titleArea} container justify=\"space-between\">\n          <Grid item>\n            <Typography className={classes.title}>{name}</Typography>\n          </Grid>\n          <Grid item>\n            {url && (\n              <Button\n                className={classes.watchButton}\n                variant=\"contained\"\n                color=\"default\"\n                endIcon={!isMobileView && <OpenInNewRoundedIcon />}\n                disableElevation\n                onClick={() => window.open(getCompleteUrl(url), '_blank')}\n              >\n                {isMobileView ? <OpenInNewRoundedIcon /> : 'Watch'}\n              </Button>\n            )}\n            {created_by === userId && (\n              <IconButton\n                className={classes.sideHamburger}\n                onClick={handleHamburgerOpen}\n              >\n                <MoreVertRoundedIcon />\n              </IconButton>\n            )}\n          </Grid>\n        </Grid>\n\n        <Divider />\n\n        <Grid className={classes.metadataArea} container>\n          <Grid className={classes.tabArea} item xs={12} sm={3}>\n            <Grid container alignItems=\"center\">\n              <Grid item>\n                <LanguageRoundedIcon className={classes.languageIcon} />\n              </Grid>\n              <Grid item>\n                <Typography\n                  className={classes.languageText}\n                  variant=\"subtitle2\"\n                  display=\"inline\"\n                >\n                  {language}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid className={classes.tabArea} item xs={12} sm={3}>\n            <Grid container alignItems=\"center\">\n              <Grid item>\n                <CameraRollRoundedIcon className={classes.typeIcon} />\n              </Grid>\n              <Grid item>\n                <Typography\n                  className={classes.typeText}\n                  variant=\"subtitle2\"\n                  display=\"inline\"\n                >\n                  {type}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid className={classes.tabArea} item xs={12} sm>\n            <Grid container alignItems=\"center\">\n              <Grid item>\n                <MovieRoundedIcon className={classes.genreIcon} />\n              </Grid>\n              <Grid item>{genreComponent}</Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <Menu\n        id=\"hamburger-menu\"\n        anchorEl={hamburgerElement}\n        keepMounted\n        open={Boolean(hamburgerElement)}\n        onClose={handleHamburgerClose}\n      >\n        <MenuItem onClick={() => setDeleteShowPopupState(true)}>\n          <ListItemIcon>\n            <DeleteRoundedIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Delete\" />\n        </MenuItem>\n      </Menu>\n\n      <Dialog\n        open={deleteShowPopupState}\n        fullWidth\n        maxWidth=\"sm\"\n        keepMounted={false}\n        onClose={handleCancelDelete}\n      >\n        <DialogContent>\n          <Typography variant=\"h5\">Delete</Typography>\n          <DialogContentText>\n            Are you sure you want to delete the show ?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleCancelDelete} color=\"default\">\n            CANCEL\n          </Button>\n          <Button onClick={handleDeleteShowSubmit} color=\"primary\" autoFocus>\n            DELETE\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default MovieDescriptionCard;\n","import { regex } from '../constants';\n\nexport const getCompleteUrl = url =>\n  url.match(regex.URL_WITH_HTTP) ? url : 'https://' + url;\n","const style = theme => ({\n  element: {\n    padding: '.25rem, 0rem',\n  },\n  icons: {\n    color: theme.palette.text.secondary,\n  },\n  upvoted: {\n    color: theme.palette.success.light,\n  },\n  downvoted: {\n    color: theme.palette.error.light,\n  },\n  vote: {\n    marginRight: '.75rem',\n  },\n  voteExpanded: {\n    marginRight: '.5rem',\n  },\n  voteExpandedDivider: {\n    marginTop: '.25rem',\n    marginBotton: '.25rem',\n    marginLeft: '1.25rem',\n    marginRight: '-1rem',\n  },\n});\n\nexport default style;\n","import React from 'react';\nimport clsx from 'clsx';\n\nimport Grid from '@material-ui/core/Grid';\nimport Grow from '@material-ui/core/Grow';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n\nimport ThumbUpRoundedIcon from '@material-ui/icons/ThumbUpRounded';\nimport ThumbDownRoundedIcon from '@material-ui/icons/ThumbDownRounded';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport style from './style';\n\nimport { utils } from '../../constants';\nimport { Divider } from '@material-ui/core';\n\nconst VoteArea = props => {\n  const classes = makeStyles(style)();\n\n  const {\n    isUserLoggedIn,\n    requestToShowToast,\n    setLoginPopupState,\n    onUpvoteShow,\n    onDownvoteShow,\n    _id,\n    upvotes,\n    downvotes,\n    haveUpvoted,\n    haveDownvoted,\n  } = props;\n\n  const votes = upvotes - downvotes;\n\n  const [expandedView, setExpandedView] = React.useState(false);\n  const [shortView, setShortView] = React.useState(true);\n\n  const onUpvote = () => {\n    if (isUserLoggedIn) {\n      onUpvoteShow(_id, !haveUpvoted);\n    } else {\n      setLoginPopupState(true);\n      requestToShowToast(\n        utils.MESSAGE_VARIANTS.INFO,\n        'You have to login to vote.'\n      );\n    }\n  };\n\n  const onDownvote = () => {\n    if (isUserLoggedIn) {\n      onDownvoteShow(_id, !haveDownvoted);\n    } else {\n      setLoginPopupState(true);\n      requestToShowToast(\n        utils.MESSAGE_VARIANTS.INFO,\n        'You have to login to vote.'\n      );\n    }\n  };\n\n  const toggleExpandedView = () => {\n    if (expandedView) {\n      setExpandedView(!expandedView);\n      setTimeout(() => setShortView(expandedView), 500);\n    } else {\n      setShortView(expandedView);\n      setTimeout(() => setExpandedView(!expandedView), 500);\n    }\n  };\n\n  const expandedVoteArea = (\n    <>\n      <Grow in={expandedView} timeout={500}>\n        <Grid container>\n          <Grid className={classes.upvoted} item xs={12}>\n            <Grid container justify=\"flex-end\">\n              <Typography variant=\"h6\">{'+ ' + upvotes}</Typography>\n            </Grid>\n          </Grid>\n          <Grid item xs={12}>\n            <Divider className={classes.voteExpandedDivider} />\n          </Grid>\n\n          <Grid className={classes.downvoted} item xs={12}>\n            <Grid container justify=\"flex-end\">\n              <Typography variant=\"h6\">{'- ' + downvotes}</Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grow>\n    </>\n  );\n\n  return (\n    <>\n      <Grid className={classes.element} item xs={12}>\n        <Grid container justify=\"flex-end\">\n          <IconButton onClick={onUpvote}>\n            <ThumbUpRoundedIcon\n              fontSize=\"large\"\n              className={clsx(classes.icons, haveUpvoted && classes.upvoted)}\n            />\n          </IconButton>\n        </Grid>\n      </Grid>\n\n      <Grid className={classes.element} item xs={12}>\n        <Grid container justify=\"flex-end\">\n          <IconButton\n            disableRipple\n            disableTouchRipple\n            disableFocusRipple\n            className={clsx(expandedView ? classes.voteExpanded : classes.vote)}\n            onClick={toggleExpandedView}\n          >\n            {expandedView ? (\n              expandedVoteArea\n            ) : (\n              <Grow in={shortView} timeout={500}>\n                <Typography variant=\"h6\">{votes}</Typography>\n              </Grow>\n            )}\n          </IconButton>\n        </Grid>\n      </Grid>\n\n      <Grid className={classes.element} item xs={12}>\n        <Grid container justify=\"flex-end\">\n          <IconButton onClick={onDownvote}>\n            <ThumbDownRoundedIcon\n              fontSize=\"large\"\n              className={clsx(\n                classes.icons,\n                !haveUpvoted && haveDownvoted && classes.downvoted\n              )}\n            />\n          </IconButton>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default VoteArea;\n","const style = theme => ({\n  cardArea: {\n    margin: theme.spacing(3, 1),\n  },\n  dividerArea: {\n    marginLeft: '1rem',\n    marginRight: '1rem',\n    [theme.breakpoints.down('sm')]: {\n      marginLeft: '0rem',\n      marginRight: '.75rem',\n    },\n  },\n});\n\nexport default style;\n","import React from 'react';\n\nimport Card from '@material-ui/core/Card';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport MovieDescriptionCard from '../MovieDescriptionCard';\nimport VoteArea from '../VoteArea';\n\nimport style from './style';\n\nconst MovieDescription = props => {\n  const classes = makeStyles(style)();\n\n  return (\n    <>\n      <Card className={classes.cardArea}>\n        <Grid container alignItems=\"center\">\n          <Grid item xs={2} sm={1}>\n            <VoteArea {...props} />\n          </Grid>\n\n          <Divider\n            className={classes.dividerArea}\n            orientation=\"vertical\"\n            flexItem\n          />\n\n          <Grid item xs={9} sm>\n            <MovieDescriptionCard {...props} />\n          </Grid>\n        </Grid>\n      </Card>\n    </>\n  );\n};\n\nexport default MovieDescription;\n","const style = theme => ({\n  addShowElement: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n  multipleSelect: {\n    border: '1px solid #C3C3C3',\n    borderRadius: 4,\n  },\n  multipleSelectError: {\n    border: '1px solid red',\n    borderRadius: 4,\n  },\n  multipleSelectLabel: {\n    background: '#FFF',\n    paddingLeft: theme.spacing(0.5),\n    paddingRight: theme.spacing(1),\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: 2,\n    backgroundColor: theme.palette.primary,\n  },\n  lastElement: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(5),\n  },\n});\n\nexport default style;\n","import React from 'react';\nimport clsx from 'clsx';\n\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Grid from '@material-ui/core/Grid';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport style from './style';\n\nimport { regex } from '../../constants';\n\nconst AddShow = props => {\n  const {\n    onAddShowSubmit,\n    isAddShowSubmitLoading,\n    types,\n    languages,\n    genres,\n  } = props;\n\n  const classes = makeStyles(style)();\n\n  const [name, setNameValue] = React.useState('');\n\n  const [url, setUrlValue] = React.useState('');\n  const [urlError, setUrlError] = React.useState(false);\n\n  const [typeId, setTypeValue] = React.useState('');\n\n  const [languageId, setLanguageValue] = React.useState('');\n\n  const [genreIds, setGenresValue] = React.useState([]);\n  const [genreError, setGenreError] = React.useState(false);\n\n  const getStyles = genreId => ({\n    fontWeight: genreIds.indexOf(genreId) === -1 ? 500 : 700,\n  });\n\n  const handleNameTyping = event => {\n    setNameValue(event.target.value);\n  };\n\n  const handleUrlTyping = event => {\n    setUrlValue(event.target.value);\n  };\n\n  const checkUrlValue = () => {\n    if (new RegExp(regex.URL).test(url.trim()) || url.trim() === '') {\n      setUrlError(false);\n    } else {\n      setUrlError(true);\n    }\n    setUrlValue(url.trim());\n  };\n\n  const handleTypeSelect = event => {\n    setTypeValue(event.target.value);\n  };\n\n  const handleLanguageSelect = event => {\n    setLanguageValue(event.target.value);\n  };\n\n  const handleGenresSelect = event => {\n    if (event.target.value.length > 3) {\n      setGenreError(true);\n    } else {\n      setGenreError(false);\n    }\n    setGenresValue(event.target.value);\n  };\n\n  const handleAddShowSubmit = event => {\n    event.preventDefault();\n    onAddShowSubmit({\n      name,\n      url,\n      type: typeId,\n      language: languageId,\n      genres: genreIds,\n    });\n  };\n\n  return (\n    <>\n      <Grid container spacing={1} justify=\"center\" alignContent=\"center\">\n        <Grid item xs={12} sm={10}>\n          <Grid container justify=\"center\" className={classes.addShowElement}>\n            <Typography variant=\"h4\">Add Show</Typography>\n          </Grid>\n          <form onSubmit={handleAddShowSubmit}>\n            <Grid container justify=\"center\" className={classes.addShowElement}>\n              <Grid item xs={12} sm={10}>\n                <TextField\n                  id=\"name\"\n                  variant=\"outlined\"\n                  label=\"Name\"\n                  placeholder=\"The Shawshank Redemption\"\n                  value={name}\n                  onChange={handleNameTyping}\n                  InputLabelProps={{ shrink: true }}\n                  autoFocus\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n\n            <Grid container justify=\"center\" className={classes.addShowElement}>\n              <Grid item xs={12} sm={10}>\n                <TextField\n                  id=\"url\"\n                  variant=\"outlined\"\n                  label=\"URL (Optional)\"\n                  placeholder=\"\"\n                  value={url}\n                  onChange={handleUrlTyping}\n                  onBlur={() => checkUrlValue()}\n                  error={urlError}\n                  helperText={urlError && 'Invalid URL format.'}\n                  InputLabelProps={{ shrink: true }}\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n\n            <Grid container justify=\"center\" className={classes.addShowElement}>\n              <Grid item xs={12} sm={10}>\n                <FormControl variant=\"outlined\" fullWidth>\n                  <InputLabel id=\"select-type-label\">Type</InputLabel>\n                  <Select\n                    labelId=\"select-type-label\"\n                    id=\"select-type\"\n                    value={typeId}\n                    onChange={handleTypeSelect}\n                    labelWidth={35}\n                    fullWidth\n                  >\n                    {Object.values(types).map(type => (\n                      <MenuItem key={type._id} value={type._id}>\n                        {type.name}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n            </Grid>\n\n            <Grid container justify=\"center\" className={classes.addShowElement}>\n              <Grid item xs={12} sm={10}>\n                <FormControl variant=\"outlined\" fullWidth>\n                  <InputLabel id=\"select-language-label\">Language</InputLabel>\n                  <Select\n                    labelId=\"select-language-label\"\n                    id=\"select-language\"\n                    value={languageId}\n                    onChange={handleLanguageSelect}\n                    labelWidth={67}\n                    fullWidth\n                  >\n                    {Object.values(languages).map(language => (\n                      <MenuItem key={language._id} value={language._id}>\n                        {language.name}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n            </Grid>\n\n            <Grid container justify=\"center\" className={classes.addShowElement}>\n              <Grid item xs={12} sm={10}>\n                <FormControl variant=\"outlined\" fullWidth error={genreError}>\n                  <div\n                    className={clsx(\n                      genreError\n                        ? classes.multipleSelectError\n                        : classes.multipleSelect\n                    )}\n                  >\n                    <InputLabel\n                      className={classes.multipleSelectLabel}\n                      id=\"select-genres-chip-label\"\n                    >\n                      Genre (Max 3)\n                    </InputLabel>\n                    <Select\n                      labelId=\"select-genres-chip-label\"\n                      id=\"genres-chip\"\n                      value={genreIds}\n                      onChange={handleGenresSelect}\n                      labelWidth={67}\n                      input={<Input id=\"select-genres-chip\" />}\n                      renderValue={selected => (\n                        <Grid className={classes.chips}>\n                          {selected.map(value => (\n                            <Chip\n                              key={value}\n                              variant=\"outlined\"\n                              label={genres[value].name}\n                              className={classes.chip}\n                            />\n                          ))}\n                        </Grid>\n                      )}\n                      multiple\n                      fullWidth\n                    >\n                      {Object.values(genres).map(genre => (\n                        <MenuItem\n                          key={genre._id}\n                          value={genre._id}\n                          style={getStyles(genre._id)}\n                        >\n                          {genre.name}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </div>\n                  {genreError && (\n                    <FormHelperText>\n                      Can't add more than 3 genre.\n                    </FormHelperText>\n                  )}\n                </FormControl>\n              </Grid>\n            </Grid>\n\n            <Grid container justify=\"center\" className={classes.lastElement}>\n              <Grid item xs={12} sm={10}>\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  size=\"large\"\n                  disabled={\n                    urlError ||\n                    name === '' ||\n                    typeId === '' ||\n                    languageId === '' ||\n                    genreIds.length === 0 ||\n                    genreError\n                  }\n                  onClick={handleAddShowSubmit}\n                  fullWidth\n                >\n                  {!isAddShowSubmitLoading ? 'Add' : <CircularProgress />}\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default AddShow;\n","import React from 'react';\n\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\n\nconst ElevationScroll = props => {\n  const { children } = props;\n\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n  });\n\n  return React.cloneElement(children, {\n    style: trigger\n      ? { boxShadow: '0 5px 5px -5px #333' }\n      : { boxShadow: 'none' },\n  });\n};\n\nexport default ElevationScroll;\n","const style = theme => ({\n  loginElement: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n});\n\nexport default style;\n","import React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Link from '@material-ui/core/Link';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport style from './style';\n\nimport { regex } from '../../constants';\n\nconst Login = props => {\n  const {\n    handleOpenRegisterPopup,\n    handleCloseLoginPopup,\n    onLoginSubmit,\n    isSubmitLoginLoading,\n  } = props;\n\n  const classes = makeStyles(style)();\n\n  const [username, setUsernameValue] = React.useState('');\n  const [usernameError, setUsernameError] = React.useState(false);\n  const [password, setPasswordValue] = React.useState('');\n  const [passwordVisible, setPasswordVisibility] = React.useState(false);\n\n  const handleUsernameTyping = event => {\n    if (\n      regex.USERNAME_TYPING.test(event.target.value) ||\n      event.target.value === ''\n    ) {\n      setUsernameError(false);\n    } else {\n      setUsernameError(true);\n    }\n    setUsernameValue(event.target.value);\n  };\n\n  const checkUsername = event => {\n    if (regex.USERNAME.test(event.target.value) || event.target.value === '') {\n      setUsernameError(false);\n    } else {\n      setUsernameError(true);\n    }\n  };\n\n  const handlePasswordTyping = event => {\n    setPasswordValue(event.target.value);\n  };\n\n  const handleTogglePasswordVisibility = () => {\n    setPasswordVisibility(!passwordVisible);\n  };\n\n  const handleLoginSubmit = event => {\n    event.preventDefault();\n    onLoginSubmit(username.trim(), password);\n  };\n\n  const handleRegisterClick = event => {\n    event.preventDefault();\n    handleCloseLoginPopup();\n    setTimeout(handleOpenRegisterPopup, 500);\n  };\n\n  return (\n    <>\n      <Grid container spacing={1} justify=\"center\" alignContent=\"center\">\n        <Grid item xs={12} sm={10}>\n          <Grid container justify=\"center\" className={classes.loginElement}>\n            <Typography variant=\"h4\">Login</Typography>\n          </Grid>\n          <form onSubmit={handleLoginSubmit}>\n            <Grid container justify=\"center\" className={classes.loginElement}>\n              <Grid item xs={12} sm={10}>\n                <TextField\n                  id=\"email\"\n                  variant=\"outlined\"\n                  label=\"Username\"\n                  placeholder=\"rajnikanth\"\n                  value={username}\n                  onChange={handleUsernameTyping}\n                  onBlur={checkUsername}\n                  error={usernameError}\n                  helperText={usernameError && 'Invalid username format.'}\n                  InputLabelProps={{ shrink: true }}\n                  autoFocus\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n            <Grid container justify=\"center\" className={classes.loginElement}>\n              <Grid item xs={12} sm={10}>\n                <TextField\n                  id=\"password\"\n                  variant=\"outlined\"\n                  type={passwordVisible ? 'text' : 'password'}\n                  label=\"Password\"\n                  placeholder=\"●●●●●●●●\"\n                  value={password}\n                  onChange={handlePasswordTyping}\n                  InputLabelProps={{ shrink: true }}\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          aria-label=\"toggle password visibility\"\n                          edge=\"end\"\n                          onClick={handleTogglePasswordVisibility}\n                        >\n                          {passwordVisible ? <Visibility /> : <VisibilityOff />}\n                        </IconButton>\n                      </InputAdornment>\n                    ),\n                  }}\n                  autoComplete=\"true\"\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n            <Grid container justify=\"center\" className={classes.loginElement}>\n              <Grid item xs={12} sm={10}>\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  size=\"large\"\n                  disabled={usernameError || username === '' || password === ''}\n                  onClick={handleLoginSubmit}\n                  fullWidth\n                >\n                  {!isSubmitLoginLoading ? 'Login' : <CircularProgress />}\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Grid>\n        <Grid container justify=\"center\" className={classes.loginElement}>\n          <Grid item xs={12} sm={10}>\n            <Grid container justify=\"center\">\n              <Typography variant=\"subtitle1\">\n                Not our user yet?{' '}\n                <Link href=\"\" onClick={handleRegisterClick}>\n                  Register Here.\n                </Link>\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Login;\n","const style = theme => ({\n  registerElement: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n});\n\nexport default style;\n","import React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Link from '@material-ui/core/Link';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport style from './style';\n\nimport { regex } from '../../constants';\n\nconst Register = props => {\n  const {\n    handleOpenLoginPopup,\n    handleCloseRegisterPopup,\n    checkForUsername,\n    isCheckUsernameLoading,\n    isSubmitRegisterLoading,\n    isValidUsername,\n    onRegisterSubmit,\n  } = props;\n\n  const classes = makeStyles(style)();\n\n  const [username, setUsernameValue] = React.useState('');\n  const [usernameError, setUsernameError] = React.useState(false);\n  const [password, setPasswordValue] = React.useState('');\n  const [passwordVisible, setPasswordVisibility] = React.useState(false);\n\n  React.useEffect(() => {\n    if (username !== '' && !isValidUsername) {\n      setUsernameError('This username is already taken.');\n    } else {\n      setUsernameError(false);\n    }\n  }, [isValidUsername, username]);\n\n  const handleUsernameTyping = event => {\n    if (!isValidUsername) {\n      setUsernameError('This username is already taken.');\n    } else if (\n      regex.USERNAME_TYPING.test(event.target.value) ||\n      event.target.value === ''\n    ) {\n      setUsernameError(false);\n    } else {\n      setUsernameError('Invalid Username format');\n    }\n\n    setUsernameValue(event.target.value);\n\n    if (event.target.value !== '') {\n      checkForUsername(event.target.value);\n    }\n  };\n\n  const checkUsername = event => {\n    if (!isValidUsername) {\n      setUsernameError('This username is already taken.');\n    } else if (\n      regex.USERNAME.test(event.target.value) ||\n      event.target.value === ''\n    ) {\n      setUsernameError(false);\n    } else {\n      setUsernameError('Invalid Username format');\n    }\n\n    if (event.target.value !== '') {\n      checkForUsername(event.target.value);\n    }\n  };\n\n  const handlePasswordTyping = event => {\n    setPasswordValue(event.target.value);\n  };\n\n  const handleTogglePasswordVisibility = () => {\n    setPasswordVisibility(!passwordVisible);\n  };\n\n  const handleRegisterSubmit = event => {\n    event.preventDefault();\n    onRegisterSubmit(username.trim(), password);\n  };\n\n  const handleLoginClick = event => {\n    event.preventDefault();\n    handleCloseRegisterPopup();\n    setTimeout(handleOpenLoginPopup, 500);\n  };\n\n  return (\n    <>\n      <Grid container spacing={1} justify=\"center\" alignContent=\"center\">\n        <Grid item xs={12} sm={10}>\n          <Grid container justify=\"center\" className={classes.registerElement}>\n            <Typography variant=\"h4\">Register</Typography>\n          </Grid>\n          <form onSubmit={handleRegisterSubmit}>\n            <Grid\n              container\n              justify=\"center\"\n              className={classes.registerElement}\n            >\n              <Grid item xs={12} sm={10}>\n                <TextField\n                  id=\"email\"\n                  variant=\"outlined\"\n                  label=\"Username\"\n                  placeholder=\"rajnikanth\"\n                  value={username}\n                  onChange={handleUsernameTyping}\n                  onBlur={checkUsername}\n                  error={!!usernameError}\n                  helperText={!!usernameError && usernameError}\n                  InputLabelProps={{ shrink: true }}\n                  autoFocus\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n            <Grid\n              container\n              justify=\"center\"\n              className={classes.registerElement}\n            >\n              <Grid item xs={12} sm={10}>\n                <TextField\n                  id=\"password\"\n                  variant=\"outlined\"\n                  type={passwordVisible ? 'text' : 'password'}\n                  label=\"Password\"\n                  placeholder=\"●●●●●●●●\"\n                  value={password}\n                  onChange={handlePasswordTyping}\n                  InputLabelProps={{ shrink: true }}\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          aria-label=\"toggle password visibility\"\n                          edge=\"end\"\n                          onClick={handleTogglePasswordVisibility}\n                        >\n                          {passwordVisible ? <Visibility /> : <VisibilityOff />}\n                        </IconButton>\n                      </InputAdornment>\n                    ),\n                  }}\n                  autoComplete=\"true\"\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n            <Grid\n              container\n              justify=\"center\"\n              className={classes.registerElement}\n            >\n              <Grid item xs={12} sm={10}>\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  size=\"large\"\n                  disabled={\n                    isCheckUsernameLoading ||\n                    !!usernameError ||\n                    username === '' ||\n                    password === ''\n                  }\n                  onClick={handleRegisterSubmit}\n                  fullWidth\n                >\n                  {!isSubmitRegisterLoading ? 'Register' : <CircularProgress />}\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Grid>\n        <Grid container justify=\"center\" className={classes.registerElement}>\n          <Grid item xs={12} sm={10}>\n            <Grid container justify=\"center\">\n              <Typography variant=\"subtitle1\">\n                Already registered?{' '}\n                <Link href=\"\" onClick={handleLoginClick}>\n                  Login Here.\n                </Link>\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Register;\n","import { fade } from '@material-ui/core/styles';\n\nconst style = theme => ({\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.primary.main, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.primary.main, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    color: theme.palette.primary.dark,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: '#000',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  },\n});\n\nexport default style;\n","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport InputBase from '@material-ui/core/InputBase';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport style from './style';\n\nconst Search = props => {\n  const { getAllShows, addFilter, searchText } = props;\n\n  const classes = makeStyles(style)();\n\n  const onTypingInSearch = event => {\n    addFilter({ q: event.target.value || '' });\n    getAllShows();\n  };\n\n  return (\n    <Grid className={classes.search}>\n      <Grid className={classes.searchIcon}>\n        <SearchIcon />\n      </Grid>\n      <InputBase\n        onChange={onTypingInSearch}\n        value={searchText}\n        placeholder=\"Search…\"\n        classes={{\n          root: classes.inputRoot,\n          input: classes.inputInput,\n        }}\n        inputProps={{ 'aria-label': 'search' }}\n      />\n    </Grid>\n  );\n};\n\nexport default Search;\n","const style = () => ({\n  navbar: {\n    backgroundColor: '#F7F7F7',\n  },\n  logo: {\n    cursor: 'pointer',\n    height: '7vh',\n  },\n});\n\nexport default style;\n","import React from 'react';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\nimport ExitToAppRoundedIcon from '@material-ui/icons/ExitToAppRounded';\nimport LibraryAddRoundedIcon from '@material-ui/icons/LibraryAddRounded';\nimport PersonAddRoundedIcon from '@material-ui/icons/PersonAddRounded';\n\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\n\nimport AddShow from '../AddShow';\nimport ElevationScroll from '../ElevationScroll';\nimport Login from '../Login';\nimport Register from '../Register';\nimport Search from '../Search';\nimport SlideTransition from '../SlideTransition';\n\nimport style from './style';\n\nimport { utils } from '../../constants';\n\nconst Navbar = props => {\n  const {\n    redirectToPage,\n    requestToShowToast,\n    checkForUsername,\n    onRegisterSubmit,\n    onLoginSubmit,\n    onAddShowSubmit,\n    getAllShows,\n    addFilter,\n    logoutUser,\n    isSubmitRegisterLoading,\n    isSubmitLoginLoading,\n    isAddShowSubmitLoading,\n    isCheckUsernameLoading,\n    isUserLoggedIn,\n    isValidUsername,\n    loginPopupState,\n    setLoginPopupState,\n    username,\n    searchText,\n    types,\n    languages,\n    genres,\n  } = props;\n\n  const classes = makeStyles(style)();\n  const theme = useTheme();\n  const isMobileView = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const [registerPopupState, setRegisterPopupState] = React.useState(false);\n  const [addShowPopupState, setAddShowPopupState] = React.useState(false);\n\n  React.useEffect(() => {\n    setLoginPopupState(false);\n    setRegisterPopupState(false);\n  }, [isUserLoggedIn, setLoginPopupState]);\n\n  React.useEffect(() => {\n    if (!isAddShowSubmitLoading) {\n      setAddShowPopupState(false);\n    }\n  }, [isAddShowSubmitLoading]);\n\n  const handleLogout = () => {\n    logoutUser();\n  };\n\n  const handleOpenLoginPopup = () => {\n    setLoginPopupState(true);\n  };\n\n  const handleCloseLoginPopup = () => {\n    setLoginPopupState(false);\n  };\n\n  const handleOpenRegisterPopup = () => {\n    setRegisterPopupState(true);\n  };\n\n  const handleCloseRegisterPopup = () => {\n    setRegisterPopupState(false);\n  };\n\n  const handleOpenAddShowPopup = () => {\n    if (isUserLoggedIn) {\n      setAddShowPopupState(true);\n    } else {\n      requestToShowToast(\n        utils.MESSAGE_VARIANTS.INFO,\n        'You have to login first.'\n      );\n      setLoginPopupState(true);\n    }\n  };\n\n  const handleCloseAddShowPopup = () => {\n    if (isUserLoggedIn) {\n      setAddShowPopupState(false);\n    } else {\n      setLoginPopupState(false);\n    }\n  };\n\n  return (\n    <>\n      <ElevationScroll {...props}>\n        <AppBar className={classes.navbar} position=\"sticky\" elevation={0}>\n          <Toolbar>\n            <Grid container justify=\"space-between\" alignItems=\"center\">\n              <Grid item>\n                <img\n                  className={classes.logo}\n                  src={isMobileView ? '/bwg_mobile_logo.png' : '/bwg_logo.png'}\n                  alt=\"Binge Watcher's Guide\"\n                  onClick={() => redirectToPage('/')}\n                />\n              </Grid>\n              <Grid item>\n                <Grid container justify=\"space-between\" alignItems=\"center\">\n                  {!isMobileView && (\n                    <Grid item xs>\n                      <Search\n                        getAllShows={getAllShows}\n                        addFilter={addFilter}\n                        searchText={searchText}\n                      />\n                    </Grid>\n                  )}\n                  <Grid item xs>\n                    {isMobileView ? (\n                      <IconButton onClick={handleOpenAddShowPopup}>\n                        <LibraryAddRoundedIcon color=\"primary\" />\n                      </IconButton>\n                    ) : (\n                      <Grid container justify=\"center\" alignItems=\"center\">\n                        <Button\n                          color=\"primary\"\n                          size=\"large\"\n                          startIcon={<LibraryAddRoundedIcon />}\n                          onClick={handleOpenAddShowPopup}\n                        >\n                          Add Show\n                        </Button>\n                      </Grid>\n                    )}\n                  </Grid>\n                  <Grid item xs>\n                    {isUserLoggedIn ? (\n                      <Grid container justify=\"center\" alignItems=\"center\">\n                        <Button\n                          color=\"primary\"\n                          size=\"large\"\n                          startIcon={<ExitToAppRoundedIcon />}\n                          onClick={handleLogout}\n                        >\n                          Logout ({username})\n                        </Button>\n                      </Grid>\n                    ) : isMobileView ? (\n                      <IconButton onClick={handleOpenLoginPopup}>\n                        <PersonAddRoundedIcon color=\"primary\" />\n                      </IconButton>\n                    ) : (\n                      <Grid container justify=\"center\" alignItems=\"center\">\n                        <Button\n                          color=\"primary\"\n                          size=\"large\"\n                          startIcon={<PersonAddRoundedIcon />}\n                          onClick={handleOpenLoginPopup}\n                        >\n                          Login\n                        </Button>\n                      </Grid>\n                    )}\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Toolbar>\n        </AppBar>\n      </ElevationScroll>\n      <Dialog\n        open={loginPopupState}\n        TransitionComponent={SlideTransition}\n        fullWidth\n        maxWidth=\"sm\"\n        keepMounted={false}\n        onClose={handleCloseLoginPopup}\n      >\n        <DialogContent>\n          <Grid container>\n            <Grid item xs={12}>\n              <Grid container justify=\"flex-end\">\n                <IconButton onClick={handleCloseLoginPopup}>\n                  <CloseRoundedIcon />\n                </IconButton>\n              </Grid>\n            </Grid>\n            <Grid item xs={12}>\n              <Login\n                onLoginSubmit={onLoginSubmit}\n                isSubmitLoginLoading={isSubmitLoginLoading}\n                handleOpenRegisterPopup={handleOpenRegisterPopup}\n                handleCloseLoginPopup={handleCloseLoginPopup}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n      </Dialog>\n      <Dialog\n        open={registerPopupState}\n        TransitionComponent={SlideTransition}\n        fullWidth\n        maxWidth=\"sm\"\n        keepMounted={false}\n        onClose={handleCloseRegisterPopup}\n      >\n        <DialogContent>\n          <Grid container>\n            <Grid item xs={12}>\n              <Grid container justify=\"flex-end\">\n                <IconButton onClick={handleCloseRegisterPopup}>\n                  <CloseRoundedIcon />\n                </IconButton>\n              </Grid>\n            </Grid>\n            <Grid item xs={12}>\n              <Register\n                checkForUsername={checkForUsername}\n                isSubmitRegisterLoading={isSubmitRegisterLoading}\n                isCheckUsernameLoading={isCheckUsernameLoading}\n                isValidUsername={isValidUsername}\n                onRegisterSubmit={onRegisterSubmit}\n                handleOpenLoginPopup={handleOpenLoginPopup}\n                handleCloseRegisterPopup={handleCloseRegisterPopup}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n      </Dialog>\n      <Dialog\n        open={addShowPopupState}\n        TransitionComponent={SlideTransition}\n        fullWidth\n        maxWidth=\"sm\"\n        keepMounted={false}\n        onClose={handleCloseAddShowPopup}\n      >\n        <DialogContent>\n          <Grid container>\n            <Grid item xs={12}>\n              <Grid container justify=\"flex-end\">\n                <IconButton onClick={handleCloseAddShowPopup}>\n                  <CloseRoundedIcon />\n                </IconButton>\n              </Grid>\n            </Grid>\n            <Grid item xs={12}>\n              <AddShow\n                isAddShowSubmitLoading={isAddShowSubmitLoading}\n                onAddShowSubmit={onAddShowSubmit}\n                types={types}\n                languages={languages}\n                genres={genres}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n};\n\nexport default Navbar;\n","import React, { Component } from 'react';\nimport { push } from 'connected-react-router';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport Chip from '@material-ui/core/Chip';\nimport Grid from '@material-ui/core/Grid';\nimport Hidden from '@material-ui/core/Hidden';\n\nimport FilterAreaMobile from '../components/FilterAreaMobile';\nimport FilterAreaWeb from '../components/FilterAreaWeb';\nimport Loading from '../components/Loading';\nimport MovieDescription from '../components/MovieDescription';\nimport Navbar from '../components/Navbar';\nimport Search from '../components/Search';\n\nimport {\n  loadingAction,\n  loginAction,\n  registerAction,\n  showsAction,\n  staticAction,\n  toastAction,\n  userAction,\n} from '../actions';\nimport { utils } from '../constants';\nimport {\n  loadingSelector,\n  showsSelector,\n  staticSelector,\n  userSelector,\n} from '../selectors';\n\nimport { logoutUser } from '../utils/users';\n\nclass IndexPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loginPopupState: false,\n    };\n  }\n\n  setLoginPopupState = popupState => {\n    this.setState({ loginPopupState: popupState });\n  };\n\n  handleOnDeleteValue = value => {\n    const { removeFilter, getAllShows } = this.props;\n\n    if (value.type === utils.FILTER_TYPES.TYPE) {\n      removeFilter({ type: value._id });\n    } else if (value.type === utils.FILTER_TYPES.LANGUAGE) {\n      removeFilter({ language: value._id });\n    } else if (value.type === utils.FILTER_TYPES.GENRE) {\n      removeFilter({ genre: value._id });\n    }\n\n    getAllShows();\n  };\n\n  componentDidMount() {\n    const { getAllStatics, getAllShows, userId } = this.props;\n\n    getAllStatics();\n    getAllShows({ userId });\n  }\n\n  render() {\n    const {\n      redirectToPage,\n      requestToShowToast,\n      getAllShows,\n      setSortAndOrder,\n      addFilter,\n      removeFilter,\n      resetFilter,\n      checkForUsername,\n      onRegisterSubmit,\n      onLoginSubmit,\n      onAddShowSubmit,\n      onUpvoteShow,\n      onDownvoteShow,\n      onDeleteShow,\n      logoutUser,\n      isGetStaticsLoading,\n      isCheckUsernameLoading,\n      isSubmitLoginLoading,\n      isSubmitRegisterLoading,\n      isAddShowSubmitLoading,\n      isUserLoggedIn,\n      isValidUsername,\n      userId,\n      username,\n      searchText,\n      types,\n      languages,\n      genres,\n      shows,\n      appliedFilters,\n    } = this.props;\n\n    const { loginPopupState } = this.state;\n\n    const filterChipComponent =\n      appliedFilters &&\n      appliedFilters.length > 0 &&\n      appliedFilters.map(value => (\n        <Chip\n          key={value._id + ' ' + value.type}\n          variant=\"outlined\"\n          color=\"primary\"\n          label={value.name}\n          onDelete={() => this.handleOnDeleteValue(value)}\n          style={{ padding: '.25rem', margin: '.5rem' }}\n        />\n      ));\n    return (\n      <>\n        {isGetStaticsLoading ? (\n          <Loading loading={isGetStaticsLoading} />\n        ) : (\n          <>\n            <>\n              <Navbar\n                loginPopupState={loginPopupState}\n                setLoginPopupState={this.setLoginPopupState}\n                redirectToPage={redirectToPage}\n                requestToShowToast={requestToShowToast}\n                checkForUsername={checkForUsername}\n                onRegisterSubmit={onRegisterSubmit}\n                onLoginSubmit={onLoginSubmit}\n                onAddShowSubmit={onAddShowSubmit}\n                getAllShows={getAllShows}\n                addFilter={addFilter}\n                logoutUser={logoutUser}\n                isSubmitLoginLoading={isSubmitLoginLoading}\n                isSubmitRegisterLoading={isSubmitRegisterLoading}\n                isAddShowSubmitLoading={isAddShowSubmitLoading}\n                isCheckUsernameLoading={isCheckUsernameLoading}\n                isUserLoggedIn={isUserLoggedIn}\n                isValidUsername={isValidUsername}\n                username={username}\n                searchText={searchText}\n                types={types}\n                languages={languages}\n                genres={genres}\n              />\n            </>\n\n            <Grid container justify=\"flex-start\">\n              <Hidden mdUp>\n                <Grid container justify=\"center\" style={{ paddingTop: '1rem' }}>\n                  <Grid item xs={8}>\n                    <Search\n                      getAllShows={getAllShows}\n                      addFilter={addFilter}\n                      searchText={searchText}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <FilterAreaMobile\n                      userId={userId}\n                      getAllShows={getAllShows}\n                      setSortAndOrder={setSortAndOrder}\n                      addFilter={addFilter}\n                      removeFilter={removeFilter}\n                      resetFilter={resetFilter}\n                      appliedFilters={appliedFilters}\n                      types={types}\n                      languages={languages}\n                      genres={genres}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Grid container justify=\"center\">\n                      <Grid item xs={10}>\n                        {filterChipComponent}\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Hidden>\n              <Grid item xs={12} md={8}>\n                {shows.map(show => (\n                  <MovieDescription\n                    key={show._id}\n                    userId={userId}\n                    isUserLoggedIn={isUserLoggedIn}\n                    requestToShowToast={requestToShowToast}\n                    onUpvoteShow={onUpvoteShow}\n                    onDownvoteShow={onDownvoteShow}\n                    onDeleteShow={onDeleteShow}\n                    loginPopupState={loginPopupState}\n                    setLoginPopupState={this.setLoginPopupState}\n                    {...show}\n                    type={types && types[show.type] && types[show.type].name}\n                    language={\n                      languages &&\n                      languages[show.language] &&\n                      languages[show.language].name\n                    }\n                    genres={show.genres.map(\n                      genreId =>\n                        genres && genres[genreId] && genres[genreId].name\n                    )}\n                  />\n                ))}\n              </Grid>\n              <Hidden smDown>\n                <Grid item md>\n                  <FilterAreaWeb\n                    userId={userId}\n                    getAllShows={getAllShows}\n                    setSortAndOrder={setSortAndOrder}\n                    addFilter={addFilter}\n                    removeFilter={removeFilter}\n                    resetFilter={resetFilter}\n                    appliedFilters={appliedFilters}\n                    types={types}\n                    languages={languages}\n                    genres={genres}\n                  />\n                </Grid>\n              </Hidden>\n            </Grid>\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  redirectToPage: url => {\n    return dispatch(push(url));\n  },\n  getAllStatics: () => {\n    dispatch(loadingAction.startGetStaticsLoading());\n    return dispatch(staticAction.getAllStatics());\n  },\n  getAllShows: () => {\n    return dispatch(showsAction.getAllShows());\n  },\n  setSortAndOrder: (sort, order) => {\n    return dispatch(showsAction.setSortAndOrder(sort, order));\n  },\n  addFilter: filter => {\n    return dispatch(staticAction.addFilter(filter));\n  },\n  removeFilter: filter => {\n    return dispatch(staticAction.removeFilter(filter));\n  },\n  resetFilter: () => {\n    return dispatch(staticAction.resetFilter());\n  },\n  requestToShowToast: (variant, message) => {\n    return dispatch(toastAction.requestToShowToast(variant, message));\n  },\n  checkForUsername: username => {\n    dispatch(loadingAction.startCheckUsernameLoading());\n    return dispatch(registerAction.checkUsername(username));\n  },\n  onRegisterSubmit: (username, password) => {\n    dispatch(loadingAction.startRegisterLoading());\n    return dispatch(registerAction.registerUser(username, password));\n  },\n  onLoginSubmit: (username, password) => {\n    dispatch(loadingAction.startLoginLoading());\n    return dispatch(loginAction.submitForLogin(username, password));\n  },\n  onAddShowSubmit: show => {\n    dispatch(loadingAction.startAddShowLoading());\n    return dispatch(showsAction.addShow(show));\n  },\n  logoutUser: () => {\n    logoutUser();\n    dispatch(showsAction.resetVotes());\n    return dispatch(userAction.resetUserData());\n  },\n  onUpvoteShow: (showId, isUpvote) => {\n    dispatch(loadingAction.startVoteShowLoading());\n    return dispatch(showsAction.upvoteShow(showId, isUpvote));\n  },\n  onDownvoteShow: (showId, isDownvote) => {\n    dispatch(loadingAction.startVoteShowLoading());\n    return dispatch(showsAction.downvoteShow(showId, isDownvote));\n  },\n  onDeleteShow: showId => {\n    dispatch(loadingAction.startDeleteShowLoading());\n    return dispatch(showsAction.deleteShow(showId));\n  },\n});\n\nconst mapStateToProps = createStructuredSelector({\n  isGetStaticsLoading: loadingSelector.getStaticsLoadingState(),\n  isGetAllShowsLoading: loadingSelector.getAllShowsLoadingState(),\n  isCheckUsernameLoading: loadingSelector.getCheckUsernameLoadingState(),\n  isSubmitLoginLoading: loadingSelector.getLoginLoadingState(),\n  isSubmitRegisterLoading: loadingSelector.getRegisterLoadingState(),\n  isAddShowSubmitLoading: loadingSelector.getAddShowSubmitLoadingState(),\n  isUserLoggedIn: userSelector.isUserLoggedIn(),\n  isValidUsername: userSelector.isValidUsername(),\n  userId: userSelector.getCurrentUserId(),\n  username: userSelector.getCurrentUsername(),\n  types: staticSelector.getAllTypes(),\n  languages: staticSelector.getAllLanguages(),\n  genres: staticSelector.getAllGenres(),\n  shows: showsSelector.getAllShows(),\n  searchText: staticSelector.getSearchText(),\n  appliedFilters: staticSelector.getAppliedFilters(),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IndexPage);\n","import { amber, blue, green, red } from '@material-ui/core/colors';\n\nconst style = theme => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: red[500],\n  },\n  info: {\n    backgroundColor: blue[400],\n  },\n  warning: {\n    backgroundColor: amber[800],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n});\n\nexport default style;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport clsx from 'clsx';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport style from './style';\n\nimport { toastAction } from '../../actions';\nimport { toastSelector } from '../../selectors';\n\nclass Toast extends Component {\n  onClose = () => {\n    const { hideToast } = this.props;\n    hideToast();\n  };\n\n  render() {\n    const { toastState, toastMessage, toastVariant, classes } = this.props;\n    const toastPosition = { vertical: 'bottom', horizontal: 'left' };\n\n    const variantIcon = {\n      success: CheckCircleIcon,\n      warning: WarningIcon,\n      error: ErrorIcon,\n      info: InfoIcon,\n    };\n\n    const ToastIcon = variantIcon[toastVariant];\n\n    const toastIcon = toastVariant && (\n      <ToastIcon className={clsx(classes.icon, classes.iconVariant)} />\n    );\n\n    return (\n      <Snackbar\n        autoHideDuration={3000}\n        open={toastState}\n        anchorOrigin={toastPosition}\n        onClose={this.onClose}\n        transitionDuration={100}\n        action={[\n          <IconButton\n            key=\"close\"\n            aria-label=\"close\"\n            color=\"inherit\"\n            onClick={this.onClose}\n          >\n            <CloseIcon />\n          </IconButton>,\n        ]}\n      >\n        <SnackbarContent\n          className={clsx(classes[toastVariant], classes.icon)}\n          message={\n            <span id=\"snackbar-message\" className={classes.message}>\n              {toastIcon}\n              {toastMessage}\n            </span>\n          }\n          action={[\n            <IconButton\n              key=\"close\"\n              aria-label=\"close\"\n              color=\"inherit\"\n              onClick={this.onClose}\n            >\n              <CloseIcon className={classes.icon} />\n            </IconButton>,\n          ]}\n        />\n      </Snackbar>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  hideToast: () => dispatch(toastAction.hideToast()),\n});\n\nconst mapStateToProps = createStructuredSelector({\n  toastState: toastSelector.getToastState(),\n  toastMessage: toastSelector.getToastMessage(),\n  toastVariant: toastSelector.getToastVariant(),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(style)(Toast));\n","import React, { lazy, Suspense } from 'react';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { Helmet } from 'react-helmet';\nimport { Provider } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\n\nimport history from './utils/history';\nimport reduxStore from './utils/store';\nimport CustomTheme from './utils/theme';\n\nimport IndexPage from './pages/Index.page';\n\nimport Loading from './components/Loading';\nimport Toast from './components/Toast';\n\n// Lazy Load\nconst NotFoundPage = lazy(() => import('./pages/NotFound.page'));\n\nconst App = () => {\n  return (\n    <Provider store={reduxStore}>\n      <Helmet\n        titleTemplate=\"%s - Binge Watcher's Guide\"\n        defaultTitle=\"Binge Watcher's Guide - Complete Movie and Series Directory\"\n      >\n        <meta\n          name=\"description\"\n          content=\"Binge Watcher's Guide - Complete Movie and Series Directory\"\n        />\n      </Helmet>\n      <ConnectedRouter history={history}>\n        <Toast />\n        <ThemeProvider theme={CustomTheme}>\n          <Suspense fallback={<Loading />}>\n            <Switch>\n              <Route exact path=\"/\" component={IndexPage} />\n              <Route component={NotFoundPage} />\n            </Switch>\n          </Suspense>\n        </ThemeProvider>\n      </ConnectedRouter>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}