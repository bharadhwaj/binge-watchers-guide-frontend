{"version":3,"sources":["utils/history.js","constants/actions.js","reducers/loading.reducer.js","reducers/shows.reducer.js","constants/regex.js","constants/storage.js","constants/urls.js","constants/utils.js","schemas/static.schema.js","reducers/static.reducer.js","reducers/toast.reducer.js","utils/users.js","reducers/user.reducer.js","reducers/index.js","actions/loading.action.js","actions/login.action.js","actions/register.action.js","actions/shows.action.js","actions/static.action.js","actions/toast.action.js","actions/user.action.js","utils/errorHandler.js","sagas/login.saga.js","sagas/register.saga.js","selectors/loading.selector.js","selectors/shows.selector.js","selectors/static.selector.js","selectors/toast.selector.js","selectors/user.selector.js","sagas/shows.saga.js","sagas/static.saga.js","sagas/toast.saga.js","sagas/index.js","utils/token.js","utils/store.js","utils/theme.js","components/ListFilters/style.js","components/ListFilters/index.js","components/FilterArea/style.js","components/FilterArea/index.js","components/SlideTransition/index.js","components/FilterAreaMobile/index.js","components/FilterAreaWeb/style.js","components/FilterAreaWeb/index.js","components/Loading/index.js","components/MovieDescriptionCard/style.js","components/MovieDescriptionCard/index.js","components/VoteArea/style.js","components/VoteArea/index.js","components/MovieDescription/style.js","components/MovieDescription/index.js","components/AddShow/style.js","components/AddShow/index.js","components/ElevationScroll/index.js","components/Login/style.js","components/Login/index.js","components/Register/style.js","components/Register/index.js","components/Navbar/style.js","components/Navbar/index.js","pages/Index.page.js","components/Toast/style.js","components/Toast/index.js","App.js","serviceWorker.js","index.js"],"names":["history","createBrowserHistory","LOADING","START_GET_STATICS_LOADING","STOP_GET_STATICS_LOADING","START_GET_ALL_SHOWS_LOADING","STOP_GET_ALL_SHOWS_LOADING","START_CHECK_USERNAME_LOADING","STOP_CHECK_USERNAME_LOADING","START_REGISTER_LOADING","STOP_REGISTER_LOADING","START_LOGIN_LOADING","STOP_LOGIN_LOADING","START_ADD_SHOW_LOADING","STOP_ADD_SHOW_LOADING","TOAST","REQUEST_TO_SHOW_TOAST","SHOW_TOAST","HIDE_TOAST","REGISTER","CHECK_USERNAME","REGISTER_USER","LOGIN","SUBMIT_FOR_LOGIN","RESET_LOGIN_STATE","USER","UPDATE_USER_DATA","SET_USERNAME_STATUS","RESET_USER_DATA","STATIC","GET_ALL_STATICS","UPDATE_TYPE_DATA","UPDATE_LANGUAGE_DATA","UPDATE_GENRE_DATA","SHOWS","GET_ALL_SHOWS","ADD_SHOW","APPEND_SHOWS","UPDATE_SHOWS","RESET_VOTES","initialState","isGetStaticsLoading","isGetAllShowsLoading","isCheckUsernameLoading","isRegisterSubmitLoading","isLoginSubmitLoading","isAddShowSubmitLoading","loadingReducer","state","action","type","shows","staticReducer","currentShows","newShows","payload","newShowIds","Set","map","show","_id","mergedShows","filter","has","haveUpvoted","haveDownvoted","USERNAME","USERNAME_TYPING","URL","IS_LOGGED_IN","EXPIRE_AT","ID","TOKEN","BASE_URL","process","REGISTER_URL","LOGIN_URL","GET_STATICS","ADD_SHOWS","MESSAGE_VARIANTS","SUCCESS","WARNING","INFO","ERROR","APPLICATION_ERROR_STATUS_CODES","INTERNAL_SERVER_ERROR","UNAUTHORIZED","FORBIDDEN","MISSING_PARAMS","NOT_FOUND","NOT_ALLOWED","FILTER_TYPES","TYPE","LANGUAGE","GENRE","formatData","schema","Entity","idAttribute","processStrategy","value","isChecked","normalizeData","data","normalize","mergeData","currentData","newData","newDataIds","Object","keys","id","types","languages","genres","staticSchema","utils","entities","formattedData","message","variant","toastReducer","updateUserLoginInfo","userInfo","decodedToken","decode","token","expiryEpoch","exp","localStorage","setItem","username","updateUserInfo","checkIfUserIsLoggedIn","isLoggedIn","getItem","expireAt","Date","logoutUser","removeItem","notLoggedInState","isValidUsername","userReducer","status","rootReducer","combineReducers","router","connectRouter","toast","loading","static","user","showsReducer","startGetStaticsLoading","stopGetStaticsLoading","startGetAllShowsLoading","stopGetAllShowsLoading","startCheckUsernameLoading","stopCheckUsernameLoading","startRegisterLoading","stopRegisterLoading","startLoginLoading","stopLoginLoading","startAddShowLoading","stopAddShowLoading","submitForLogin","password","resetLoginState","checkUsername","registerUser","getAllShows","userId","addShow","appendShows","updateShows","resetVotes","getAllStatics","updateTypeData","updateLanguageData","updateGenreData","requestToShowToast","showToast","hideToast","updateUserData","setUsernameStatus","resetUserData","handleError","axios","interceptors","response","use","error","store","dispatch","toastAction","Promise","reject","loginSubmitWorker","loginSubmitWatcher","loginSaga","requestURL","urls","body","headers","post","put","loadingAction","userAction","showsAction","takeLatest","actions","all","checkUsernameWorker","registerSubmitWorker","checkUsernameWatcher","registerSubmitWatcher","registerSaga","replace","get","success","debounce","selectLoadingState","getStaticsLoadingState","createSelector","loadingState","getAllShowsLoadingState","getRegisterLoadingState","getLoginLoadingState","getCheckUsernameLoadingState","selectShowsState","showState","selectStaticState","getAllTypes","staticState","getAllLanguages","getAllGenres","selectToastState","getToastState","toastState","getToastMessage","getToastVariant","selectUserState","isUserLoggedIn","userState","getAuthToken","getCurrentUserId","getCurrentUsername","getAllShowsWorker","addShowWorker","getAllShowsWatcher","addShowWatcher","showsSaga","params","user_id","length","join","isFilterApiCall","console","log","select","userSelector","takeEvery","getAllStaticsWorker","getAllStaticsWatcher","staticSaga","staticAction","showToastWorker","showToastWatcher","toastSaga","toastSelector","toastVariant","toastMessage","delay","rootSaga","fork","checkTokenExpiration","next","tokenExpireAt","storage","sagaMiddleWare","createSagaMiddleware","composeEnhancers","compose","enhancers","applyMiddleware","routerMiddleware","createStore","run","CustomTheme","createMuiTheme","typography","fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","style","filterArea","paddingTop","paddingBottom","expansionPanelHeading","borderBottom","expansionPanelBody","padding","filterListArea","width","maxHeight","overflow","ListFilters","props","title","values","expanded","handleExpansion","handleOnCheckBoxClick","classes","makeStyles","Grid","className","item","xs","ExpansionPanel","square","ExpansionPanelSummary","clsx","expandIcon","onClick","Typography","ExpansionPanelDetails","List","ListItem","key","role","undefined","dense","button","ListItemIcon","Checkbox","edge","checked","tabIndex","disableRipple","ListItemText","primary","name","theme","margin","spacing","filterChipsArea","marginTop","marginBottom","backgroundColor","chips","divider","FilterArea","React","useState","allFilterValues","setFilterValues","setTypes","setLanguages","setGenres","useEffect","typeExpanded","setTypeExpansion","languageExpanded","setLanguageExpansion","genreExpanded","setGenreExpansion","currentValue","newFilterValues","newTypes","newLanguages","newGenres","applyFilter","typesList","languagesList","genresList","push","filterChipComponent","Chip","color","label","onDelete","container","justify","Button","fullWidth","disabled","Paper","elevation","Hidden","smDown","md","mdUp","Divider","SlideTransition","forwardRef","ref","Slide","direction","FilterAreaMobile","openFilterArea","setFilterAreaState","handleCloseFilterArea","size","startIcon","Dialog","open","TransitionComponent","fullScreen","maxWidth","keepMounted","onClose","AppBar","position","Toolbar","IconButton","FilterAreaWeb","Card","CardContent","Loading","alignItems","height","descriptionArea","paddingRight","breakpoints","down","titleArea","fontWeight","watchButton","paddingLeft","metadataArea","tabArea","languageIcon","languageText","marginLeft","typeIcon","typeText","genreIcon","genreTab","MovieDescriptionCard","useTheme","isMobileView","useMediaQuery","url","language","genreComponent","genre","index","endIcon","disableElevation","window","sm","display","element","icons","palette","text","secondary","upvoted","light","downvoted","vote","marginRight","VoteArea","upvotes","downvotes","votes","cardArea","dividerArea","MovieDescription","orientation","flexItem","addShowElement","multipleSelect","border","borderRadius","multipleSelectError","multipleSelectLabel","background","flexWrap","chip","lastElement","AddShow","onAddShowSubmit","setNameValue","setUrlValue","urlError","setUrlError","typeId","setTypeValue","languageId","setLanguageValue","genreIds","setGenresValue","genreError","setGenreError","handleAddShowSubmit","event","preventDefault","alignContent","onSubmit","TextField","placeholder","onChange","target","InputLabelProps","shrink","autoFocus","onBlur","regex","test","helperText","FormControl","InputLabel","Select","labelId","labelWidth","MenuItem","input","Input","renderValue","selected","multiple","genreId","indexOf","FormHelperText","CircularProgress","ElevationScroll","children","trigger","useScrollTrigger","disableHysteresis","threshold","cloneElement","boxShadow","loginElement","Login","handleOpenRegisterPopup","handleCloseLoginPopup","onLoginSubmit","isSubmitLoginLoading","setUsernameValue","usernameError","setUsernameError","setPasswordValue","passwordVisible","setPasswordVisibility","handleLoginSubmit","InputProps","endAdornment","InputAdornment","aria-label","autoComplete","Link","href","setTimeout","registerElement","Register","handleOpenLoginPopup","handleCloseRegisterPopup","checkForUsername","onRegisterSubmit","handleRegisterSubmit","navbar","logo","cursor","Navbar","redirectToPage","loginPopupState","setLoginPopupState","registerPopupState","setRegisterPopupState","addShowPopupState","setAddShowPopupState","handleOpenAddShowPopup","handleCloseAddShowPopup","src","alt","DialogContent","IndexPage","this","Component","mapStateToProps","createStructuredSelector","loadingSelector","staticSelector","showsSelector","connect","registerAction","loginAction","green","red","info","blue","warning","amber","icon","iconVariant","opacity","Toast","ToastIcon","CheckCircleIcon","WarningIcon","ErrorIcon","InfoIcon","toastIcon","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","transitionDuration","SnackbarContent","withStyles","NotFoundPage","lazy","App","reduxStore","Helmet","titleTemplate","defaultTitle","content","ThemeProvider","fallback","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.22f1d9f8.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport default history;\n","// ------------------ LOADING ACTIONS ------------------ //\nexport const LOADING = {\n  START_GET_STATICS_LOADING: 'bwg/Loading/START_GET_STATICS_LOADING',\n  STOP_GET_STATICS_LOADING: 'bwg/Loading/STOP_GET_STATICS_LOADING',\n  START_GET_ALL_SHOWS_LOADING: 'bwg/Loading/START_GET_ALL_SHOWS_LOADING',\n  STOP_GET_ALL_SHOWS_LOADING: 'bwg/Loading/STOP_GET_ALL_SHOWS_LOADING',\n  START_CHECK_USERNAME_LOADING: 'bwg/Loading/START_CHECK_USERNAME_LOADING',\n  STOP_CHECK_USERNAME_LOADING: 'bwg/Loading/STOP_CHECK_USERNAME_LOADING',\n  START_REGISTER_LOADING: 'bwg/Loading/START_REGISTER_LOADING',\n  STOP_REGISTER_LOADING: 'bwg/Loading/STOP_REGISTER_LOADING',\n  START_LOGIN_LOADING: 'bwg/Loading/START_LOGIN_LOADING',\n  STOP_LOGIN_LOADING: 'bwg/Loading/STOP_LOGIN_LOADING',\n  START_ADD_SHOW_LOADING: 'bwg/Loading/START_ADD_SHOW_LOADING',\n  STOP_ADD_SHOW_LOADING: 'bwg/Loading/STOP_ADD_SHOW_LOADING',\n};\n\n// ------------------ TOAST ACTIONS ------------------ //\nexport const TOAST = {\n  REQUEST_TO_SHOW_TOAST: 'bwg/Toast/REQUEST_TO_SHOW_TOAST',\n  SHOW_TOAST: 'bwg/Toast/SHOW_TOAST',\n  HIDE_TOAST: 'bwg/Toast/HIDE_TOAST',\n};\n\n// ------------------ REGISTER ACTIONS ------------------ //\nexport const REGISTER = {\n  CHECK_USERNAME: 'bwg/Register/CHECK_USERNAME',\n  REGISTER_USER: 'bwg/Register/REGISTER_USER',\n};\n\n// ------------------ LOGIN ACTIONS ------------------ //\nexport const LOGIN = {\n  SUBMIT_FOR_LOGIN: 'bwg/Login/SUBMIT_FOR_LOGIN',\n  RESET_LOGIN_STATE: 'bwg/Login/RESET_LOGIN_STATE',\n};\n\n// ------------------ USER ACTIONS ------------------ //\nexport const USER = {\n  UPDATE_USER_DATA: 'bwg/User/UPDATE_USER_DATA',\n  SET_USERNAME_STATUS: 'bwg/User/SET_USERNAME_STATUS',\n  RESET_USER_DATA: 'bwg/User/RESET_USER_DATA',\n};\n\n// ------------------ STATIC ACTIONS ------------------ //\nexport const STATIC = {\n  GET_ALL_STATICS: 'bwg/Static/GET_ALL_STATICS',\n  UPDATE_TYPE_DATA: 'bwg/Static/UPDATE_TYPE_DATA',\n  UPDATE_LANGUAGE_DATA: 'bwg/Static/UPDATE_LANGUAGE_DATA',\n  UPDATE_GENRE_DATA: 'bwg/Static/UPDATE_GENRE_DATA',\n};\n\n// ------------------ SHOWS ACTIONS ------------------ //\nexport const SHOWS = {\n  GET_ALL_SHOWS: 'bwg/Shows/GET_ALL_SHOWS',\n  ADD_SHOW: 'bwg/Shows/ADD_SHOW',\n  APPEND_SHOWS: 'bwg/Shows/APPEND_SHOWS',\n  UPDATE_SHOWS: 'bwg/Shows/UPDATE_SHOWS',\n  RESET_VOTES: 'bwg/Shows/RESET_VOTES',\n};\n","import { LOADING } from '../constants/actions';\n\nconst initialState = {\n  isGetStaticsLoading: false,\n  isGetAllShowsLoading: false,\n  isCheckUsernameLoading: false,\n  isRegisterSubmitLoading: false,\n  isLoginSubmitLoading: false,\n  isAddShowSubmitLoading: false,\n};\n\nexport default function loadingReducer(state = initialState, action) {\n  switch (action.type) {\n    case LOADING.START_GET_STATICS_LOADING:\n      return {\n        ...state,\n        isGetStaticsLoading: true,\n      };\n\n    case LOADING.STOP_GET_STATICS_LOADING:\n      return {\n        ...state,\n        isGetStaticsLoading: false,\n      };\n\n    case LOADING.START_GET_ALL_SHOWS_LOADING:\n      return {\n        ...state,\n        isGetAllShowsLoading: true,\n      };\n\n    case LOADING.STOP_GET_ALL_SHOWS_LOADING:\n      return {\n        ...state,\n        isGetAllShowsLoading: false,\n      };\n\n    case LOADING.START_CHECK_USERNAME_LOADING:\n      return {\n        ...state,\n        isCheckUsernameLoading: true,\n      };\n\n    case LOADING.STOP_CHECK_USERNAME_LOADING:\n      return {\n        ...state,\n        isCheckUsernameLoading: false,\n      };\n\n    case LOADING.START_REGISTER_LOADING:\n      return {\n        ...state,\n        isRegisterSubmitLoading: true,\n      };\n\n    case LOADING.STOP_REGISTER_LOADING:\n      return {\n        ...state,\n        isRegisterSubmitLoading: false,\n      };\n\n    case LOADING.START_LOGIN_LOADING:\n      return {\n        ...state,\n        isLoginSubmitLoading: true,\n      };\n\n    case LOADING.STOP_LOGIN_LOADING:\n      return {\n        ...state,\n        isLoginSubmitLoading: false,\n      };\n\n    case LOADING.START_ADD_SHOW_LOADING:\n      return {\n        ...state,\n        isAddShowSubmitLoading: true,\n      };\n\n    case LOADING.STOP_ADD_SHOW_LOADING:\n      return {\n        ...state,\n        isAddShowSubmitLoading: false,\n      };\n\n    default:\n      return { ...state };\n  }\n}\n","import { SHOWS } from '../constants/actions';\n\nconst initialState = {\n  shows: [],\n};\n\nexport default function staticReducer(state = initialState, action) {\n  switch (action.type) {\n    case SHOWS.APPEND_SHOWS: {\n      const currentShows = state.shows;\n      const newShows = action.payload.shows;\n      const newShowIds = new Set(newShows.map(show => show._id));\n      const mergedShows = [\n        ...newShows,\n        ...currentShows.filter(show => !newShowIds.has(show._id)),\n      ];\n\n      return {\n        ...state,\n        shows: [...mergedShows],\n      };\n    }\n\n    case SHOWS.UPDATE_SHOWS:\n      return {\n        ...state,\n        shows: [...action.payload.shows],\n      };\n\n    case SHOWS.RESET_VOTES: {\n      const currentShows = [...state.shows].map(show => ({\n        ...show,\n        haveUpvoted: false,\n        haveDownvoted: false,\n      }));\n\n      return {\n        ...state,\n        shows: currentShows,\n      };\n    }\n\n    default:\n      return { ...state };\n  }\n}\n","export const USERNAME = /^[a-z][a-z'-_.]{2,}$/i;\nexport const USERNAME_TYPING = /^[a-z][a-z'-_.]*$/i;\n\nexport const URL = /[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,24}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)?/gi;\n","export const USER = {\n  IS_LOGGED_IN: 'U_i_l_i',\n  EXPIRE_AT: 'U_w_e_b',\n  ID: 'U_i',\n  TOKEN: 'U_p_k',\n  USERNAME: 'U_n',\n};\n","const BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nexport const CHECK_USERNAME = `${BASE_URL}/users/username/<USER_NAME>`;\nexport const REGISTER_URL = `${BASE_URL}/users`;\nexport const LOGIN_URL = `${BASE_URL}/users/auth`;\n\nexport const GET_STATICS = `${BASE_URL}/shows/statics`;\n\nexport const GET_ALL_SHOWS = `${BASE_URL}/shows`;\nexport const ADD_SHOWS = `${BASE_URL}/users/<USER_ID>/shows`;\n","export const MESSAGE_VARIANTS = {\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  INFO: 'info',\n  ERROR: 'error',\n};\n\nexport const APPLICATION_ERROR_STATUS_CODES = {\n  INTERNAL_SERVER_ERROR: 500,\n  UNAUTHORIZED: 401,\n  FORBIDDEN: 403,\n  MISSING_PARAMS: 422,\n  NOT_FOUND: 404,\n  NOT_ALLOWED: 409,\n};\n\nexport const FILTER_TYPES = {\n  TYPE: 'TYPE',\n  LANGUAGE: 'LANGUAGE',\n  GENRE: 'GENRE',\n};\n","import { normalize, schema } from 'normalizr';\n\nexport const formatData = type =>\n  new schema.Entity(\n    'formattedData',\n    {},\n    {\n      idAttribute: '_id',\n      processStrategy: value => {\n        return {\n          ...value,\n          type,\n          isChecked: false,\n        };\n      },\n    }\n  );\n\nexport const normalizeData = (type, data) =>\n  normalize(data, [formatData(type)]);\n\nexport const mergeData = (currentData, newData = {}) => {\n  const newDataIds = Object.keys(newData);\n  for (let id of newDataIds) {\n    if (currentData[id]) {\n      newData[id] = {\n        ...currentData[id],\n        ...newData[id],\n      };\n    }\n  }\n  return { ...currentData, ...newData };\n};\n","import { STATIC } from '../constants/actions';\n\nimport { utils } from '../constants';\nimport { staticSchema } from '../schemas';\n\nconst initialState = {\n  types: {},\n  languages: {},\n  genres: {},\n};\n\nexport default function staticReducer(state = initialState, action) {\n  switch (action.type) {\n    case STATIC.UPDATE_TYPE_DATA: {\n      const { entities } = staticSchema.normalizeData(\n        utils.FILTER_TYPES.TYPE,\n        action.payload.types\n      );\n\n      const { formattedData } = entities;\n\n      return {\n        ...state,\n        types: { ...formattedData },\n      };\n    }\n\n    case STATIC.UPDATE_LANGUAGE_DATA: {\n      const { entities } = staticSchema.normalizeData(\n        utils.FILTER_TYPES.LANGUAGE,\n        action.payload.languages\n      );\n\n      const { formattedData } = entities;\n\n      return {\n        ...state,\n        languages: { ...formattedData },\n      };\n    }\n\n    case STATIC.UPDATE_GENRE_DATA: {\n      const { entities } = staticSchema.normalizeData(\n        utils.FILTER_TYPES.GENRE,\n        action.payload.genres\n      );\n\n      const { formattedData } = entities;\n\n      return {\n        ...state,\n        genres: { ...formattedData },\n      };\n    }\n\n    default:\n      return { ...state };\n  }\n}\n","import { TOAST } from '../constants/actions';\n\nconst initialState = {\n  show: false,\n  message: null,\n  variant: null,\n};\n\nexport default function toastReducer(state = initialState, action) {\n  switch (action.type) {\n    case TOAST.REQUEST_TO_SHOW_TOAST:\n      return {\n        ...state,\n        message: action.payload.message,\n        variant: action.payload.variant,\n      };\n\n    case TOAST.SHOW_TOAST:\n      return {\n        ...state,\n        show: true,\n        message: action.payload.message,\n        variant: action.payload.variant,\n      };\n\n    case TOAST.HIDE_TOAST:\n      return {\n        ...state,\n        show: false,\n        message: null,\n        variant: null,\n      };\n\n    default:\n      return { ...state };\n  }\n}\n","import { decode } from 'jsonwebtoken';\n\nimport { USER } from '../constants/storage';\n\nexport const updateUserInfo = userInfo => {\n  userInfo._id && localStorage.setItem(USER.ID, userInfo._id);\n  userInfo.token && localStorage.setItem(USER.TOKEN, userInfo.token);\n  userInfo.username && localStorage.setItem(USER.USERNAME, userInfo.username);\n};\n\nexport const updateUserLoginInfo = userInfo => {\n  const decodedToken = decode(userInfo.token);\n  const expiryEpoch = decodedToken && decodedToken.exp * 1000;\n\n  localStorage.setItem(USER.IS_LOGGED_IN, 1);\n  localStorage.setItem(USER.EXPIRE_AT, expiryEpoch);\n  updateUserInfo(userInfo);\n};\n\nexport const checkIfUserIsLoggedIn = () => {\n  const isLoggedIn = +localStorage.getItem(USER.IS_LOGGED_IN);\n  const expireAt = +localStorage.getItem(USER.EXPIRE_AT);\n\n  if (expireAt && isLoggedIn === 1 && new Date(expireAt) > new Date()) {\n    const userInfo = {};\n    userInfo.isLoggedIn = true;\n    userInfo.expireAt = +localStorage.getItem(USER.EXPIRE_AT);\n    userInfo._id = localStorage.getItem(USER.ID);\n    userInfo.token = localStorage.getItem(USER.TOKEN);\n    userInfo.username = localStorage.getItem(USER.USERNAME);\n\n    return { isLoggedIn: true, userInfo };\n  }\n\n  return { isLoggedIn: false, userInfo: null };\n};\n\nexport const removeUserInfo = () => {\n  localStorage.removeItem(USER.IS_LOGGED_IN);\n  localStorage.removeItem(USER.EXPIRE_AT);\n  localStorage.removeItem(USER.ID);\n  localStorage.removeItem(USER.TOKEN);\n  localStorage.removeItem(USER.USERNAME);\n};\n\nexport const logoutUser = () => {\n  removeUserInfo();\n};\n","import { USER } from '../constants/actions';\nimport { checkIfUserIsLoggedIn } from '../utils/users';\n\nconst { isLoggedIn, userInfo } = checkIfUserIsLoggedIn();\n\nconst notLoggedInState = {\n  isLoggedIn: false,\n  _id: null,\n  username: null,\n  token: null,\n  isValidUsername: true,\n};\n\nconst initialState = isLoggedIn ? userInfo : notLoggedInState;\n\nexport default function userReducer(state = initialState, action) {\n  switch (action.type) {\n    case USER.UPDATE_USER_DATA:\n      return {\n        ...state,\n        isLoggedIn: true,\n        _id: action.payload.userInfo._id,\n        username: action.payload.userInfo.username,\n        token: action.payload.userInfo.token,\n      };\n\n    case USER.SET_USERNAME_STATUS:\n      return {\n        ...state,\n        isValidUsername: action.payload.status,\n      };\n\n    case USER.RESET_USER_DATA:\n      return {\n        ...notLoggedInState,\n      };\n\n    default:\n      return { ...state };\n  }\n}\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\n\nimport loadingReducer from './loading.reducer';\nimport showsReducer from './shows.reducer';\nimport staticReducer from './static.reducer';\nimport toastReducer from './toast.reducer';\nimport userReducer from './user.reducer';\n\nconst rootReducer = history =>\n  combineReducers({\n    router: connectRouter(history),\n    toast: toastReducer,\n    loading: loadingReducer,\n    static: staticReducer,\n    user: userReducer,\n    shows: showsReducer,\n  });\n\nexport default rootReducer;\n","import { LOADING } from '../constants/actions';\n\nexport function startGetStaticsLoading() {\n  return { type: LOADING.START_GET_STATICS_LOADING };\n}\n\nexport function stopGetStaticsLoading() {\n  return { type: LOADING.STOP_GET_STATICS_LOADING };\n}\n\nexport function startGetAllShowsLoading() {\n  return { type: LOADING.START_GET_ALL_SHOWS_LOADING };\n}\n\nexport function stopGetAllShowsLoading() {\n  return { type: LOADING.STOP_GET_ALL_SHOWS_LOADING };\n}\n\nexport function startCheckUsernameLoading() {\n  return { type: LOADING.START_CHECK_USERNAME_LOADING };\n}\n\nexport function stopCheckUsernameLoading() {\n  return { type: LOADING.STOP_CHECK_USERNAME_LOADING };\n}\n\nexport function startRegisterLoading() {\n  return { type: LOADING.START_REGISTER_LOADING };\n}\n\nexport function stopRegisterLoading() {\n  return { type: LOADING.STOP_REGISTER_LOADING };\n}\n\nexport function startLoginLoading() {\n  return { type: LOADING.START_LOGIN_LOADING };\n}\n\nexport function stopLoginLoading() {\n  return { type: LOADING.STOP_LOGIN_LOADING };\n}\n\nexport function startAddShowLoading() {\n  return { type: LOADING.START_ADD_SHOW_LOADING };\n}\n\nexport function stopAddShowLoading() {\n  return { type: LOADING.STOP_ADD_SHOW_LOADING };\n}\n","import { LOGIN } from '../constants/actions';\n\nexport function submitForLogin(username, password) {\n  return { type: LOGIN.SUBMIT_FOR_LOGIN, payload: { username, password } };\n}\n\nexport function resetLoginState() {\n  return { type: LOGIN.RESET_LOGIN_STATE };\n}\n","import { REGISTER } from '../constants/actions';\n\nexport function checkUsername(username) {\n  return { type: REGISTER.CHECK_USERNAME, payload: { username } };\n}\n\nexport function registerUser(username, password) {\n  return { type: REGISTER.REGISTER_USER, payload: { username, password } };\n}\n","import { SHOWS } from '../constants/actions';\n\nexport function getAllShows({\n  userId = null,\n  types = null,\n  languages = null,\n  genres = null,\n} = {}) {\n  return {\n    type: SHOWS.GET_ALL_SHOWS,\n    payload: { userId, types, languages, genres },\n  };\n}\n\nexport function addShow(show) {\n  return { type: SHOWS.ADD_SHOW, payload: { show } };\n}\n\nexport function appendShows(shows) {\n  return { type: SHOWS.APPEND_SHOWS, payload: { shows } };\n}\n\nexport function updateShows(shows) {\n  return { type: SHOWS.UPDATE_SHOWS, payload: { shows } };\n}\n\nexport function resetVotes() {\n  return { type: SHOWS.RESET_VOTES };\n}\n","import { STATIC } from '../constants/actions';\n\nexport function getAllStatics() {\n  return { type: STATIC.GET_ALL_STATICS };\n}\n\nexport function updateTypeData(types) {\n  return { type: STATIC.UPDATE_TYPE_DATA, payload: { types } };\n}\n\nexport function updateLanguageData(languages) {\n  return { type: STATIC.UPDATE_LANGUAGE_DATA, payload: { languages } };\n}\n\nexport function updateGenreData(genres) {\n  return { type: STATIC.UPDATE_GENRE_DATA, payload: { genres } };\n}\n","import { TOAST } from '../constants/actions';\n\nexport function requestToShowToast(variant, message) {\n  return { type: TOAST.REQUEST_TO_SHOW_TOAST, payload: { variant, message } };\n}\n\nexport function showToast(variant, message) {\n  return { type: TOAST.SHOW_TOAST, payload: { variant, message } };\n}\n\nexport function hideToast() {\n  return { type: TOAST.HIDE_TOAST };\n}\n","import { USER } from '../constants/actions';\n\nexport function updateUserData(userInfo) {\n  return { type: USER.UPDATE_USER_DATA, payload: { userInfo } };\n}\n\nexport function setUsernameStatus(status) {\n  return { type: USER.SET_USERNAME_STATUS, payload: { status } };\n}\n\nexport function resetUserData() {\n  return { type: USER.RESET_USER_DATA };\n}\n","import { toastAction } from '../actions';\nimport { utils } from '../constants';\n\nimport store from './store';\n\nconst handleError = axios => {\n  axios.interceptors.response.use(\n    response => response,\n    error => {\n      const { status, data } = error.response;\n      if (\n        status === utils.APPLICATION_ERROR_STATUS_CODES.UNAUTHORIZED ||\n        status === utils.APPLICATION_ERROR_STATUS_CODES.NOT_ALLOWED\n      ) {\n        const { message } = data;\n        store.dispatch(\n          toastAction.requestToShowToast(\n            utils.MESSAGE_VARIANTS.WARNING,\n            message\n          )\n        );\n      } else if (status === utils.APPLICATION_ERROR_STATUS_CODES.FORBIDDEN) {\n        store.dispatch(\n          toastAction.requestToShowToast(\n            utils.MESSAGE_VARIANTS.WARNING,\n            'You are not allowed to access this.'\n          )\n        );\n      } else if (\n        status === utils.APPLICATION_ERROR_STATUS_CODES.MISSING_PARAMS ||\n        status === utils.APPLICATION_ERROR_STATUS_CODES.NOT_FOUND\n      ) {\n        store.dispatch(\n          toastAction.requestToShowToast(\n            utils.MESSAGE_VARIANTS.WARNING,\n            'The request you sent looks incomplete. Please check and try again.'\n          )\n        );\n      } else if (\n        status === utils.APPLICATION_ERROR_STATUS_CODES.INTERNAL_SERVER_ERROR\n      ) {\n        store.dispatch(\n          toastAction.requestToShowToast(\n            utils.MESSAGE_VARIANTS.ERROR,\n            'Some issue occured with the server. Please try again in sometime.'\n          )\n        );\n      }\n      return Promise.reject(error);\n    }\n  );\n};\n\nexport default handleError;\n","import axios from 'axios';\nimport { all, put, takeLatest } from '@redux-saga/core/effects';\n\nimport {\n  loadingAction,\n  showsAction,\n  toastAction,\n  userAction,\n} from '../actions';\n\nimport { actions, urls, utils } from '../constants';\n\nimport handleError from '../utils/errorHandler';\nimport { updateUserLoginInfo } from '../utils/users';\n\n/* -----------------------------------------\n *                 WORKERS\n * -----------------------------------------\n */\n\nfunction* loginSubmitWorker({ payload }) {\n  try {\n    handleError(axios);\n    const requestURL = urls.LOGIN_URL;\n\n    const body = payload;\n\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n\n    const response = yield axios.post(requestURL, body, { headers });\n\n    yield put(loadingAction.stopLoginLoading());\n\n    if (response && response.status === 200) {\n      const { data } = response;\n\n      const { message } = data;\n      const { user } = data.data;\n      updateUserLoginInfo(user);\n\n      yield put(\n        toastAction.requestToShowToast(utils.MESSAGE_VARIANTS.SUCCESS, message)\n      );\n\n      yield put(userAction.updateUserData(user));\n      yield put(showsAction.getAllShows({ userId: user._id }));\n    }\n  } catch (error) {\n    yield put(loadingAction.stopLoginLoading());\n  }\n}\n\n/* -----------------------------------------\n *                 WATCHERS\n * -----------------------------------------\n */\n\nfunction* loginSubmitWatcher() {\n  yield takeLatest(actions.LOGIN.SUBMIT_FOR_LOGIN, loginSubmitWorker);\n}\n\nexport default function* loginSaga() {\n  yield all([loginSubmitWatcher()]);\n}\n","import axios from 'axios';\nimport { all, debounce, put, takeLatest } from '@redux-saga/core/effects';\n\nimport {\n  loadingAction,\n  showsAction,\n  toastAction,\n  userAction,\n} from '../actions';\n\nimport { actions, urls, utils } from '../constants';\n\nimport handleError from '../utils/errorHandler';\nimport { updateUserLoginInfo } from '../utils/users';\n\n/* -----------------------------------------\n *                 WORKERS\n * -----------------------------------------\n */\n\nfunction* checkUsernameWorker({ payload }) {\n  try {\n    handleError(axios);\n\n    const { username } = payload;\n\n    const requestURL = urls.CHECK_USERNAME.replace(/<USER_NAME>/, username);\n\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n\n    const response = yield axios.get(requestURL, { headers });\n\n    yield put(loadingAction.stopCheckUsernameLoading());\n\n    if (response && response.status === 200) {\n      const { data } = response;\n      const { success } = data;\n      yield put(userAction.setUsernameStatus(success));\n    }\n  } catch (error) {\n    yield put(loadingAction.stopCheckUsernameLoading());\n  }\n}\n\nfunction* registerSubmitWorker({ payload }) {\n  try {\n    handleError(axios);\n    const requestURL = urls.REGISTER_URL;\n\n    const body = payload;\n\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n\n    const response = yield axios.post(requestURL, body, { headers });\n\n    yield put(loadingAction.stopRegisterLoading());\n\n    if (response && response.status === 201) {\n      const { data } = response;\n      const { message } = data;\n      const { user } = data.data;\n\n      updateUserLoginInfo(user);\n\n      yield put(\n        toastAction.requestToShowToast(utils.MESSAGE_VARIANTS.SUCCESS, message)\n      );\n\n      yield put(userAction.updateUserData(user));\n      yield put(showsAction.getAllShows({ userId: user._id }));\n    }\n  } catch (error) {\n    yield put(loadingAction.stopRegisterLoading());\n  }\n}\n\n/* -----------------------------------------\n *                 WATCHERS\n * -----------------------------------------\n */\n\nfunction* checkUsernameWatcher() {\n  yield debounce(1000, actions.REGISTER.CHECK_USERNAME, checkUsernameWorker);\n}\n\nfunction* registerSubmitWatcher() {\n  yield takeLatest(actions.REGISTER.REGISTER_USER, registerSubmitWorker);\n}\n\nexport default function* registerSaga() {\n  yield all([checkUsernameWatcher(), registerSubmitWatcher()]);\n}\n","import { createSelector } from 'reselect';\n\nconst selectLoadingState = state => state.loading;\n\nexport const getStaticsLoadingState = () =>\n  createSelector(\n    selectLoadingState,\n    loadingState => loadingState.isGetStaticsLoading\n  );\n\nexport const getAllShowsLoadingState = () =>\n  createSelector(\n    selectLoadingState,\n    loadingState => loadingState.isGetAllShowsLoading\n  );\n\nexport const getRegisterLoadingState = () =>\n  createSelector(\n    selectLoadingState,\n    loadingState => loadingState.isRegisterSubmitLoading\n  );\n\nexport const getLoginLoadingState = () =>\n  createSelector(\n    selectLoadingState,\n    loadingState => loadingState.isLoginSubmitLoading\n  );\n\nexport const getCheckUsernameLoadingState = () =>\n  createSelector(\n    selectLoadingState,\n    loadingState => loadingState.isCheckUsernameLoading\n  );\n","import { createSelector } from 'reselect';\n\nconst selectShowsState = state => state.shows;\n\nexport const getAllShows = () =>\n  createSelector(selectShowsState, showState => showState.shows);\n","import { createSelector } from 'reselect';\n\nconst selectStaticState = state => state.static;\n\nexport const getAllTypes = () =>\n  createSelector(selectStaticState, staticState => staticState.types);\n\nexport const getAllLanguages = () =>\n  createSelector(selectStaticState, staticState => staticState.languages);\n\nexport const getAllGenres = () =>\n  createSelector(selectStaticState, staticState => staticState.genres);\n","import { createSelector } from 'reselect';\n\nconst selectToastState = state => state.toast;\n\nexport const getToastState = () =>\n  createSelector(selectToastState, toastState => toastState.show);\n\nexport const getToastMessage = () =>\n  createSelector(selectToastState, toastState => toastState.message);\n\nexport const getToastVariant = () =>\n  createSelector(selectToastState, toastState => toastState.variant);\n","import { createSelector } from 'reselect';\n\nconst selectUserState = state => state.user;\n\nexport const isUserLoggedIn = () =>\n  createSelector(selectUserState, userState => userState.isLoggedIn);\n\nexport const getAuthToken = () =>\n  createSelector(\n    selectUserState,\n    userState =>\n      userState._id &&\n      userState.token &&\n      'Bearer ' + userState._id + ',' + userState.token\n  );\n\nexport const getCurrentUserId = () =>\n  createSelector(selectUserState, userState => userState._id);\n\nexport const getCurrentUsername = () =>\n  createSelector(selectUserState, userState => userState.username);\n\nexport const isValidUsername = () =>\n  createSelector(selectUserState, userState => userState.isValidUsername);\n","import axios from 'axios';\nimport {\n  all,\n  put,\n  select,\n  takeEvery,\n  takeLatest,\n} from '@redux-saga/core/effects';\n\nimport { loadingAction, showsAction, toastAction } from '../actions';\n\nimport { actions, urls, utils } from '../constants';\n\nimport { userSelector } from '../selectors';\n\nimport handleError from '../utils/errorHandler';\n\n/* -----------------------------------------\n *                 WORKERS\n * -----------------------------------------\n */\n\nfunction* getAllShowsWorker({ payload }) {\n  try {\n    handleError(axios);\n\n    const { userId, types, languages, genres } = payload;\n\n    const requestURL = urls.GET_ALL_SHOWS;\n\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n\n    const params = {\n      ...(userId && { user_id: userId }),\n      ...(types && types.length > 0 && { types: types.join(',') }),\n      ...(languages &&\n        languages.length > 0 && { languages: languages.join(',') }),\n      ...(genres && genres.length > 0 && { genres: genres.join(',') }),\n    };\n\n    const isFilterApiCall =\n      (types && types.length > 0) ||\n      (languages && languages.length > 0) ||\n      (genres && genres.length > 0);\n\n    const response = yield axios.get(requestURL, { headers, params });\n\n    console.log('ADD SHOW RESPONSE: ', response);\n\n    yield put(loadingAction.stopGetAllShowsLoading());\n\n    if (response && response.status === 200) {\n      const { data } = response;\n      const { shows } = data.data;\n\n      if (isFilterApiCall) {\n        yield put(showsAction.updateShows(shows));\n      } else {\n        yield put(showsAction.appendShows(shows));\n      }\n    }\n  } catch (error) {\n    yield put(loadingAction.stopGetAllShowsLoading());\n  }\n}\n\nfunction* addShowWorker({ payload }) {\n  try {\n    handleError(axios);\n    const userId = yield select(userSelector.getCurrentUserId());\n\n    const requestURL = urls.ADD_SHOWS.replace(/<USER_ID>/, userId);\n\n    const body = payload.show;\n\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n\n    const response = yield axios.post(requestURL, body, { headers });\n\n    console.log('ADD SHOW RESPONSE: ', response);\n\n    yield put(loadingAction.stopAddShowLoading());\n\n    if (response && response.status === 201) {\n      const { data } = response;\n      const { message } = data;\n      const { show } = data.data;\n\n      yield put(showsAction.appendShows([show]));\n\n      yield put(\n        toastAction.requestToShowToast(utils.MESSAGE_VARIANTS.SUCCESS, message)\n      );\n    }\n  } catch (error) {\n    yield put(loadingAction.stopAddShowLoading());\n  }\n}\n\n/* -----------------------------------------\n *                 WATCHERS\n * -----------------------------------------\n */\n\nfunction* getAllShowsWatcher() {\n  yield takeLatest(actions.SHOWS.GET_ALL_SHOWS, getAllShowsWorker);\n}\n\nfunction* addShowWatcher() {\n  yield takeEvery(actions.SHOWS.ADD_SHOW, addShowWorker);\n}\n\nexport default function* showsSaga() {\n  yield all([getAllShowsWatcher(), addShowWatcher()]);\n}\n","import axios from 'axios';\nimport { all, put, takeEvery } from '@redux-saga/core/effects';\n\nimport { loadingAction, staticAction } from '../actions';\n\nimport { actions, urls } from '../constants';\n\nimport handleError from '../utils/errorHandler';\n\n/* -----------------------------------------\n *                 WORKERS\n * -----------------------------------------\n */\n\nfunction* getAllStaticsWorker() {\n  try {\n    handleError(axios);\n\n    const requestURL = urls.GET_STATICS;\n\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n\n    const response = yield axios.get(requestURL, { headers });\n\n    yield put(loadingAction.stopGetStaticsLoading());\n\n    if (response && response.status === 200) {\n      const { data } = response;\n      let { types, languages, genres } = data.data;\n\n      yield put(staticAction.updateTypeData(types));\n      yield put(staticAction.updateLanguageData(languages));\n      yield put(staticAction.updateGenreData(genres));\n    }\n  } catch (error) {\n    yield put(loadingAction.stopGetStaticsLoading());\n  }\n}\n\n/* -----------------------------------------\n *                 WATCHERS\n * -----------------------------------------\n */\n\nfunction* getAllStaticsWatcher() {\n  yield takeEvery(actions.STATIC.GET_ALL_STATICS, getAllStaticsWorker);\n}\n\nexport default function* staticSaga() {\n  yield all([getAllStaticsWatcher()]);\n}\n","import { all, delay, put, select, takeEvery } from '@redux-saga/core/effects';\n\nimport { toastAction } from '../actions';\n\nimport { actions } from '../constants';\n\nimport { toastSelector } from '../selectors';\n\n/* -----------------------------------------\n *                 WORKERS\n * -----------------------------------------\n */\n\nfunction* showToastWorker() {\n  const toastVariant = yield select(toastSelector.getToastVariant());\n  const toastMessage = yield select(toastSelector.getToastMessage());\n\n  yield put(toastAction.hideToast());\n  yield delay(100);\n  yield put(toastAction.showToast(toastVariant, toastMessage));\n}\n\n/* -----------------------------------------\n *                 WATCHERS\n * -----------------------------------------\n */\n\nfunction* showToastWatcher() {\n  yield takeEvery(actions.TOAST.REQUEST_TO_SHOW_TOAST, showToastWorker);\n}\n\nexport default function* toastSaga() {\n  yield all([showToastWatcher()]);\n}\n","import { all, fork } from '@redux-saga/core/effects';\n\nimport loginSaga from './login.saga';\nimport registerSaga from './register.saga';\nimport showsSaga from './shows.saga';\nimport staticSaga from './static.saga';\nimport toastSaga from './toast.saga';\n\nexport default function* rootSaga() {\n  yield all([\n    fork(loginSaga),\n    fork(registerSaga),\n    fork(showsSaga),\n    fork(staticSaga),\n    fork(toastSaga),\n  ]);\n}\n","import { toastAction } from '../actions';\nimport { storage, utils } from '../constants';\nimport { checkIfUserIsLoggedIn, logoutUser } from './users';\n\nconst checkTokenExpiration = store => next => action => {\n  const tokenExpireAt = +localStorage.getItem(storage.USER.EXPIRE_AT);\n  const { isLoggedIn } = checkIfUserIsLoggedIn();\n\n  if (!isLoggedIn && tokenExpireAt) {\n    logoutUser();\n\n    store.dispatch(\n      toastAction.requestToShowToast(\n        utils.MESSAGE_VARIANTS.WARNING,\n        'Your session has expired. Please login again.'\n      )\n    );\n  }\n\n  next(action);\n};\n\nexport default checkTokenExpiration;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { routerMiddleware } from 'connected-react-router';\n\nimport history from './history';\nimport rootReducer from '../reducers';\nimport rootSaga from '../sagas';\n\nimport checkTokenExpiration from './token';\n\nconst sagaMiddleWare = createSagaMiddleware();\n\nconst composeEnhancers =\n  process.env.NODE_ENV !== 'production' &&\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        shouldHotReload: false,\n      })\n    : compose;\n\nconst enhancers = [\n  applyMiddleware(\n    sagaMiddleWare,\n    checkTokenExpiration,\n    routerMiddleware(history)\n  ),\n];\nconst store = createStore(rootReducer(history), composeEnhancers(...enhancers));\nsagaMiddleWare.run(rootSaga);\n\nexport default store;\n","import 'typeface-lato';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nconst CustomThemeObject = {\n  typography: {\n    fontFamily: '\"Lato\"',\n    fontSize: 14,\n    fontWeightLight: 300,\n    fontWeightRegular: 400,\n    fontWeightMedium: 500,\n  },\n};\n\nconst CustomTheme = createMuiTheme(CustomThemeObject);\n\nexport default CustomTheme;\n","const style = () => ({\n  filterArea: {\n    paddingTop: '.5rem',\n    paddingBottom: '.5rem',\n  },\n  expansionPanelHeading: {\n    borderBottom: '1px solid #C3C3C3',\n  },\n  expansionPanelBody: {\n    padding: 0,\n  },\n  filterListArea: {\n    width: '100%',\n    maxHeight: 150,\n    overflow: 'auto',\n  },\n});\n\nexport default style;\n","import React from 'react';\nimport clsx from 'clsx';\n\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport style from './style';\n\nconst ListFilters = props => {\n  const {\n    title,\n    values,\n    expanded,\n    handleExpansion,\n    handleOnCheckBoxClick,\n  } = props;\n\n  const classes = makeStyles(style)();\n\n  return (\n    <>\n      <Grid className={classes.filterArea} item xs={12}>\n        <ExpansionPanel square expanded={expanded}>\n          <ExpansionPanelSummary\n            className={clsx(expanded && classes.expansionPanelHeading)}\n            expandIcon={<ExpandMoreIcon />}\n            onClick={handleExpansion}\n          >\n            <Typography variant=\"h6\">{title}</Typography>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails className={classes.expansionPanelBody}>\n            <List className={classes.filterListArea}>\n              {Object.values(values).map(value => (\n                <ListItem\n                  key={value._id}\n                  role={undefined}\n                  dense\n                  button\n                  onClick={handleOnCheckBoxClick(value)}\n                >\n                  <ListItemIcon>\n                    <Checkbox\n                      edge=\"start\"\n                      checked={value.isChecked}\n                      tabIndex={-1}\n                      disableRipple\n                    />\n                  </ListItemIcon>\n                  <ListItemText primary={value.name} />\n                </ListItem>\n              ))}\n            </List>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n      </Grid>\n    </>\n  );\n};\n\nexport default ListFilters;\n","const style = theme => ({\n  filterArea: {\n    margin: theme.spacing(1),\n  },\n  filterChipsArea: {\n    marginTop: '.5rem',\n    marginBottom: '.5rem',\n    backgroundColor: '#F7F7F7',\n  },\n  chips: {\n    padding: '.25rem',\n    margin: '.5rem',\n  },\n  divider: {\n    marginTop: '1rem',\n    marginBottom: '1rem',\n  },\n});\n\nexport default style;\n","import React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Hidden from '@material-ui/core/Hidden';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ListFilters from '../ListFilters';\n\nimport style from './style';\n\nimport { utils } from '../../constants';\n\nconst FilterArea = props => {\n  const classes = makeStyles(style)();\n\n  const [allFilterValues, setFilterValues] = React.useState([]);\n\n  const [types, setTypes] = React.useState({});\n  const [languages, setLanguages] = React.useState({});\n  const [genres, setGenres] = React.useState({});\n\n  React.useEffect(() => {\n    setTypes(props.types);\n    setLanguages(props.languages);\n    setGenres(props.genres);\n  }, [props.types, props.languages, props.genres]);\n\n  const [typeExpanded, setTypeExpansion] = React.useState(true);\n  const [languageExpanded, setLanguageExpansion] = React.useState(false);\n  const [genreExpanded, setGenreExpansion] = React.useState(false);\n\n  const handleExpansion = type => {\n    if (type === utils.FILTER_TYPES.TYPE) {\n      setTypeExpansion(!typeExpanded);\n    } else if (type === utils.FILTER_TYPES.LANGUAGE) {\n      setLanguageExpansion(!languageExpanded);\n    } else if (type === utils.FILTER_TYPES.GENRE) {\n      setGenreExpansion(!genreExpanded);\n    }\n  };\n\n  const handleOnCheckBoxClick = currentValue => () => {\n    if (!currentValue.isChecked) {\n      setFilterValues([\n        ...allFilterValues,\n        { ...currentValue, isChecked: true },\n      ]);\n    } else {\n      const newFilterValues = [...allFilterValues].filter(\n        value =>\n          value._id !== currentValue._id || value.type !== currentValue.type\n      );\n      setFilterValues(newFilterValues);\n    }\n\n    if (currentValue.type === utils.FILTER_TYPES.TYPE) {\n      const newTypes = { ...types };\n      delete newTypes[currentValue._id];\n      setTypes(newTypes);\n    } else if (currentValue.type === utils.FILTER_TYPES.LANGUAGE) {\n      const newLanguages = { ...languages };\n      delete newLanguages[currentValue._id];\n      setLanguages(newLanguages);\n    } else if (currentValue.type === utils.FILTER_TYPES.GENRE) {\n      const newGenres = { ...genres };\n      delete newGenres[currentValue._id];\n      setGenres(newGenres);\n    }\n  };\n\n  const handleOnDeleteValue = currentValue => () => {\n    const newFilterValues = [...allFilterValues].filter(\n      value =>\n        value._id !== currentValue._id || value.type !== currentValue.type\n    );\n    setFilterValues(newFilterValues);\n\n    if (currentValue.type === utils.FILTER_TYPES.TYPE) {\n      const newTypes = {\n        ...types,\n        [currentValue._id]: { ...currentValue, isChecked: false },\n      };\n      setTypes(newTypes);\n    } else if (currentValue.type === utils.FILTER_TYPES.LANGUAGE) {\n      const newLanguages = {\n        ...languages,\n        [currentValue._id]: { ...currentValue, isChecked: false },\n      };\n      setLanguages(newLanguages);\n    } else if (currentValue.type === utils.FILTER_TYPES.GENRE) {\n      const newGenres = {\n        ...genres,\n        [currentValue._id]: { ...currentValue, isChecked: false },\n      };\n      setGenres(newGenres);\n    }\n  };\n\n  const handleResetFilter = () => {\n    setFilterValues([]);\n    setTypes(props.types || {});\n    setLanguages(props.languages || {});\n    setGenres(props.genres || {});\n  };\n\n  const applyFilter = () => {\n    const { getAllShows, userId } = props;\n\n    const typesList = [];\n    const languagesList = [];\n    const genresList = [];\n\n    for (let value of allFilterValues) {\n      if (value.type === utils.FILTER_TYPES.TYPE) {\n        typesList.push(value._id);\n      } else if (value.type === utils.FILTER_TYPES.LANGUAGE) {\n        languagesList.push(value._id);\n      } else if (value.type === utils.FILTER_TYPES.GENRE) {\n        genresList.push(value._id);\n      }\n    }\n\n    console.log('ON SUBMIT: ', typesList, languagesList, genresList, userId);\n\n    getAllShows({\n      userId,\n      types: typesList,\n      languages: languagesList,\n      genres: genresList,\n    });\n  };\n\n  const filterChipComponent = allFilterValues.map(value => (\n    <Chip\n      className={classes.chips}\n      key={value._id + ' ' + value.type}\n      color=\"primary\"\n      label={value.name}\n      onDelete={handleOnDeleteValue(value)}\n    />\n  ));\n\n  return (\n    <>\n      <Grid className={classes.filterArea}>\n        <Grid container justify=\"space-between\">\n          <Grid item xs>\n            <Typography variant=\"h6\">Filters</Typography>\n          </Grid>\n\n          {allFilterValues && allFilterValues.length > 0 && (\n            <Grid item xs={4}>\n              <Button\n                color=\"primary\"\n                fullWidth\n                disabled={allFilterValues && allFilterValues.length < 1}\n                onClick={handleResetFilter}\n              >\n                Clear All\n              </Button>\n            </Grid>\n          )}\n        </Grid>\n\n        <Paper className={classes.filterChipsArea} elevation={0}>\n          {filterChipComponent}\n        </Paper>\n\n        {allFilterValues && allFilterValues.length > 0 && (\n          <>\n            <Hidden smDown>\n              <Grid item md={5}>\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  fullWidth\n                  disabled={allFilterValues && allFilterValues.length < 1}\n                  onClick={applyFilter}\n                >\n                  Apply\n                </Button>\n              </Grid>\n            </Hidden>\n\n            <Hidden mdUp>\n              <Grid container justify=\"center\">\n                <Grid item xs={6}>\n                  <Button\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    fullWidth\n                    disabled={allFilterValues && allFilterValues.length < 1}\n                    onClick={applyFilter}\n                  >\n                    Apply\n                  </Button>\n                </Grid>\n              </Grid>\n            </Hidden>\n          </>\n        )}\n\n        <Divider className={classes.divider} />\n\n        <ListFilters\n          title=\"Types\"\n          values={types}\n          expanded={typeExpanded}\n          handleExpansion={() => handleExpansion(utils.FILTER_TYPES.TYPE)}\n          handleOnCheckBoxClick={handleOnCheckBoxClick}\n        />\n\n        <ListFilters\n          title=\"Languages\"\n          values={languages}\n          expanded={languageExpanded}\n          handleExpansion={() => handleExpansion(utils.FILTER_TYPES.LANGUAGE)}\n          handleOnCheckBoxClick={handleOnCheckBoxClick}\n        />\n\n        <ListFilters\n          title=\"Genres\"\n          values={genres}\n          expanded={genreExpanded}\n          handleExpansion={() => handleExpansion(utils.FILTER_TYPES.GENRE)}\n          handleOnCheckBoxClick={handleOnCheckBoxClick}\n        />\n      </Grid>\n    </>\n  );\n};\n\nexport default FilterArea;\n","import React from 'react';\n\nimport Slide from '@material-ui/core/Slide';\n\nconst SlideTransition = React.forwardRef((props, ref) => {\n  return (\n    <>\n      <Slide direction=\"up\" ref={ref} {...props} />;\n    </>\n  );\n});\n\nexport default SlideTransition;\n","import React from 'react';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\nimport FilterListRoundedIcon from '@material-ui/icons/FilterListRounded';\n\nimport FilterArea from '../FilterArea';\nimport SlideTransition from '../SlideTransition';\n\nconst FilterAreaMobile = props => {\n  const [openFilterArea, setFilterAreaState] = React.useState(false);\n\n  const handleOpenFilterArea = () => {\n    setFilterAreaState(true);\n  };\n\n  const handleCloseFilterArea = () => {\n    setFilterAreaState(false);\n  };\n\n  return (\n    <>\n      <Grid container justify=\"center\">\n        <Grid item xs={8}>\n          <Button\n            color=\"primary\"\n            size=\"large\"\n            startIcon={<FilterListRoundedIcon />}\n            onClick={handleOpenFilterArea}\n            fullWidth\n          >\n            Filter List\n          </Button>\n        </Grid>\n      </Grid>\n\n      <Dialog\n        open={openFilterArea}\n        TransitionComponent={SlideTransition}\n        fullScreen\n        maxWidth=\"sm\"\n        keepMounted={false}\n        onClose={handleCloseFilterArea}\n      >\n        <AppBar position=\"sticky\">\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              onClick={handleCloseFilterArea}\n            >\n              <CloseRoundedIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        <FilterArea {...props} />\n      </Dialog>\n    </>\n  );\n};\n\nexport default FilterAreaMobile;\n","const style = theme => ({\n  filterArea: {\n    margin: theme.spacing(3, 1),\n  },\n});\n\nexport default style;\n","import React from 'react';\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport FilterArea from '../FilterArea';\n\nimport style from './style';\n\nconst FilterAreaWeb = props => {\n  const classes = makeStyles(style)();\n\n  return (\n    <>\n      <Card className={classes.filterArea}>\n        <CardContent>\n          <FilterArea {...props} />\n        </CardContent>\n      </Card>\n    </>\n  );\n};\n\nexport default FilterAreaWeb;\n","import React from 'react';\n\nimport PacmanLoader from 'react-spinners/PacmanLoader';\n\nimport Grid from '@material-ui/core/Grid';\n\nconst Loading = ({ loading }) => {\n  return (\n    <Grid\n      container\n      justify=\"center\"\n      alignItems=\"center\"\n      style={{ height: '100vh' }}\n    >\n      <PacmanLoader color=\"#FFDF46\" size={50} loading={loading} />\n    </Grid>\n  );\n};\n\nexport default Loading;\n","const style = theme => ({\n  descriptionArea: {\n    paddingTop: '2rem',\n    paddingRight: '2rem',\n    [theme.breakpoints.down('sm')]: {\n      paddingRight: '1rem',\n    },\n    [theme.breakpoints.down('xs')]: {\n      paddingRight: '0rem',\n    },\n  },\n  titleArea: {\n    marginBottom: '1rem',\n  },\n  title: {\n    fontWeight: 700,\n    fontSize: 30,\n    color: '#424242',\n    [theme.breakpoints.down('sm')]: {\n      fontWeight: 600,\n      fontSize: 26,\n    },\n    [theme.breakpoints.down('xs')]: {\n      fontWeight: 600,\n      fontSize: 22,\n    },\n  },\n  watchButton: {\n    fontWeight: 600,\n    paddingRight: '2rem',\n    paddingLeft: '2rem',\n    [theme.breakpoints.down('xs')]: {\n      fontWeight: 500,\n      paddingRight: '1rem',\n      paddingLeft: '1rem',\n    },\n  },\n  metadataArea: {\n    marginTop: '.5rem',\n    marginBottom: '1rem',\n  },\n  tabArea: {\n    marginTop: '.5rem',\n  },\n  languageIcon: {\n    color: '#8097A4',\n  },\n  languageText: {\n    marginLeft: '.75rem',\n    fontSize: 16,\n    color: '#8097A4',\n  },\n  typeIcon: {\n    color: '#556B84',\n  },\n  typeText: {\n    marginLeft: '.75rem',\n    fontSize: 16,\n    color: '#556B84',\n  },\n  genreIcon: {\n    color: '#125BA2',\n  },\n  genreTab: {\n    marginLeft: '.75rem',\n  },\n});\n\nexport default style;\n","import React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nimport CameraRollRoundedIcon from '@material-ui/icons/CameraRollRounded';\nimport LanguageRoundedIcon from '@material-ui/icons/LanguageRounded';\nimport MovieRoundedIcon from '@material-ui/icons/MovieRounded';\nimport OpenInNewRoundedIcon from '@material-ui/icons/OpenInNewRounded';\n\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\n\nimport style from './style';\n\nconst MovieDescriptionCard = props => {\n  const classes = makeStyles(style)();\n  const theme = useTheme();\n  const isMobileView = useMediaQuery(theme.breakpoints.down('xs'));\n\n  const { name, url, language, type, genres } = props;\n\n  const genreComponent =\n    genres &&\n    genres.map((genre, index) => (\n      <Chip\n        key={index}\n        className={classes.genreTab}\n        variant=\"outlined\"\n        color=\"primary\"\n        size=\"small\"\n        label={genre}\n      />\n    ));\n\n  return (\n    <>\n      <Grid className={classes.descriptionArea}>\n        <Grid className={classes.titleArea} container justify=\"space-between\">\n          <Typography className={classes.title}>{name}</Typography>\n          {url && (\n            <Button\n              className={classes.watchButton}\n              variant=\"contained\"\n              color=\"default\"\n              endIcon={!isMobileView && <OpenInNewRoundedIcon />}\n              disableElevation\n              onClick={() => window.open(url, '_blank')}\n            >\n              {isMobileView ? <OpenInNewRoundedIcon /> : 'Watch'}\n            </Button>\n          )}\n        </Grid>\n\n        <Divider />\n\n        <Grid className={classes.metadataArea} container>\n          <Grid className={classes.tabArea} item xs={12} sm={3}>\n            <Grid container alignItems=\"center\">\n              <Grid item>\n                <LanguageRoundedIcon className={classes.languageIcon} />\n              </Grid>\n              <Grid item>\n                <Typography\n                  className={classes.languageText}\n                  variant=\"subtitle2\"\n                  display=\"inline\"\n                >\n                  {language}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid className={classes.tabArea} item xs={12} sm={3}>\n            <Grid container alignItems=\"center\">\n              <Grid item>\n                <CameraRollRoundedIcon className={classes.typeIcon} />\n              </Grid>\n              <Grid item>\n                <Typography\n                  className={classes.typeText}\n                  variant=\"subtitle2\"\n                  display=\"inline\"\n                >\n                  {type}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid className={classes.tabArea} item xs={12} sm>\n            <Grid container alignItems=\"center\">\n              <Grid item>\n                <MovieRoundedIcon className={classes.genreIcon} />\n              </Grid>\n              <Grid item>{genreComponent}</Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default MovieDescriptionCard;\n","const style = theme => ({\n  element: {\n    padding: '.25rem, 0rem',\n  },\n  icons: {\n    color: theme.palette.text.secondary,\n  },\n  upvoted: {\n    color: theme.palette.success.light,\n  },\n  downvoted: {\n    color: theme.palette.error.light,\n  },\n  vote: {\n    marginRight: '1rem',\n  },\n});\n\nexport default style;\n","import React from 'react';\nimport clsx from 'clsx';\n\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n\nimport ThumbUpRoundedIcon from '@material-ui/icons/ThumbUpRounded';\nimport ThumbDownRoundedIcon from '@material-ui/icons/ThumbDownRounded';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport style from './style';\n\nconst VoteArea = props => {\n  const classes = makeStyles(style)();\n\n  const { upvotes, downvotes, haveUpvoted, haveDownvoted } = props;\n\n  const votes = upvotes - downvotes;\n\n  return (\n    <>\n      <Grid className={classes.element} item xs={12}>\n        <Grid container justify=\"flex-end\">\n          <IconButton>\n            <ThumbUpRoundedIcon\n              fontSize=\"large\"\n              className={clsx(classes.icons, haveUpvoted && classes.upvoted)}\n            />\n          </IconButton>\n        </Grid>\n      </Grid>\n\n      <Grid className={classes.element} item xs={12}>\n        <Grid container justify=\"flex-end\">\n          <Typography className={classes.vote} variant=\"h6\">\n            {votes}\n          </Typography>\n        </Grid>\n      </Grid>\n\n      <Grid className={classes.element} item xs={12}>\n        <Grid container justify=\"flex-end\">\n          <IconButton>\n            <ThumbDownRoundedIcon\n              fontSize=\"large\"\n              className={clsx(\n                classes.icons,\n                !haveUpvoted && haveDownvoted && classes.downvoted\n              )}\n            />\n          </IconButton>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default VoteArea;\n","const style = theme => ({\n  cardArea: {\n    margin: theme.spacing(3, 1),\n  },\n  dividerArea: {\n    marginLeft: '1rem',\n    marginRight: '1rem',\n    [theme.breakpoints.down('sm')]: {\n      marginLeft: '0rem',\n      marginRight: '.75rem',\n    },\n  },\n});\n\nexport default style;\n","import React from 'react';\n\nimport Card from '@material-ui/core/Card';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\n\nimport MovieDescriptionCard from '../MovieDescriptionCard';\nimport VoteArea from '../VoteArea';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport style from './style';\n\nconst MovieDescription = props => {\n  const classes = makeStyles(style)();\n\n  return (\n    <>\n      <Card className={classes.cardArea}>\n        <Grid container alignItems=\"center\">\n          <Grid item xs={2} sm={1}>\n            <VoteArea {...props} />\n          </Grid>\n\n          <Divider\n            className={classes.dividerArea}\n            orientation=\"vertical\"\n            flexItem\n          />\n\n          <Grid item xs={9} sm>\n            <MovieDescriptionCard {...props} />\n          </Grid>\n        </Grid>\n      </Card>\n    </>\n  );\n};\n\nexport default MovieDescription;\n","const style = theme => ({\n  addShowElement: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n  multipleSelect: {\n    border: '1px solid #C3C3C3',\n    borderRadius: 4,\n  },\n  multipleSelectError: {\n    border: '1px solid red',\n    borderRadius: 4,\n  },\n  multipleSelectLabel: {\n    background: '#FFF',\n    paddingLeft: theme.spacing(0.5),\n    paddingRight: theme.spacing(1),\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: 2,\n    backgroundColor: theme.palette.primary,\n  },\n  lastElement: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(5),\n  },\n});\n\nexport default style;\n","import React from 'react';\nimport clsx from 'clsx';\n\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Grid from '@material-ui/core/Grid';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport style from './style';\n\nimport { regex } from '../../constants';\n\nconst AddShow = props => {\n  const {\n    onAddShowSubmit,\n    isAddShowSubmitLoading,\n    types,\n    languages,\n    genres,\n  } = props;\n\n  const classes = makeStyles(style)();\n\n  const [name, setNameValue] = React.useState('');\n\n  const [url, setUrlValue] = React.useState('');\n  const [urlError, setUrlError] = React.useState(false);\n\n  const [typeId, setTypeValue] = React.useState('');\n\n  const [languageId, setLanguageValue] = React.useState('');\n\n  const [genreIds, setGenresValue] = React.useState([]);\n  const [genreError, setGenreError] = React.useState(false);\n\n  const getStyles = genreId => ({\n    fontWeight: genreIds.indexOf(genreId) === -1 ? 500 : 700,\n  });\n\n  const handleNameTyping = event => {\n    setNameValue(event.target.value);\n  };\n\n  const handleUrlTyping = event => {\n    setUrlValue(event.target.value);\n  };\n\n  const checkUrlValue = event => {\n    if (regex.URL.test(event.target.value) || event.target.value === '') {\n      setUrlError(false);\n    } else {\n      setUrlError(true);\n    }\n  };\n\n  const handleTypeSelect = event => {\n    setTypeValue(event.target.value);\n  };\n\n  const handleLanguageSelect = event => {\n    setLanguageValue(event.target.value);\n  };\n\n  const handleGenresSelect = event => {\n    if (event.target.value.length > 3) {\n      setGenreError(true);\n    } else {\n      setGenreError(false);\n    }\n    setGenresValue(event.target.value);\n  };\n\n  const handleAddShowSubmit = event => {\n    event.preventDefault();\n    onAddShowSubmit({\n      name,\n      url,\n      type: typeId,\n      language: languageId,\n      genres: genreIds,\n    });\n  };\n\n  return (\n    <>\n      <Grid container spacing={1} justify=\"center\" alignContent=\"center\">\n        <Grid item xs={12} sm={10}>\n          <Grid container justify=\"center\" className={classes.addShowElement}>\n            <Typography variant=\"h4\">Add Show</Typography>\n          </Grid>\n          <form onSubmit={handleAddShowSubmit}>\n            <Grid container justify=\"center\" className={classes.addShowElement}>\n              <Grid item xs={12} sm={10}>\n                <TextField\n                  id=\"name\"\n                  variant=\"outlined\"\n                  label=\"Name\"\n                  placeholder=\"The Shawshank Redemption\"\n                  value={name}\n                  onChange={handleNameTyping}\n                  InputLabelProps={{ shrink: true }}\n                  autoFocus\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n\n            <Grid container justify=\"center\" className={classes.addShowElement}>\n              <Grid item xs={12} sm={10}>\n                <TextField\n                  id=\"url\"\n                  variant=\"outlined\"\n                  label=\"URL (Optional)\"\n                  placeholder=\"\"\n                  value={url}\n                  onChange={handleUrlTyping}\n                  onBlur={checkUrlValue}\n                  error={urlError}\n                  helperText={urlError && 'Invalid URL format.'}\n                  InputLabelProps={{ shrink: true }}\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n\n            <Grid container justify=\"center\" className={classes.addShowElement}>\n              <Grid item xs={12} sm={10}>\n                <FormControl variant=\"outlined\" fullWidth>\n                  <InputLabel id=\"select-type-label\">Type</InputLabel>\n                  <Select\n                    labelId=\"select-type-label\"\n                    id=\"select-type\"\n                    value={typeId}\n                    onChange={handleTypeSelect}\n                    labelWidth={35}\n                    fullWidth\n                  >\n                    {Object.values(types).map(type => (\n                      <MenuItem key={type._id} value={type._id}>\n                        {type.name}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n            </Grid>\n\n            <Grid container justify=\"center\" className={classes.addShowElement}>\n              <Grid item xs={12} sm={10}>\n                <FormControl variant=\"outlined\" fullWidth>\n                  <InputLabel id=\"select-language-label\">Language</InputLabel>\n                  <Select\n                    labelId=\"select-language-label\"\n                    id=\"select-language\"\n                    value={languageId}\n                    onChange={handleLanguageSelect}\n                    labelWidth={67}\n                    fullWidth\n                  >\n                    {Object.values(languages).map(language => (\n                      <MenuItem key={language._id} value={language._id}>\n                        {language.name}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n            </Grid>\n\n            <Grid container justify=\"center\" className={classes.addShowElement}>\n              <Grid item xs={12} sm={10}>\n                <FormControl variant=\"outlined\" fullWidth error={genreError}>\n                  <div\n                    className={clsx(\n                      genreError\n                        ? classes.multipleSelectError\n                        : classes.multipleSelect\n                    )}\n                  >\n                    <InputLabel\n                      className={classes.multipleSelectLabel}\n                      id=\"select-genres-chip-label\"\n                    >\n                      Genre (Max 3)\n                    </InputLabel>\n                    <Select\n                      labelId=\"select-genres-chip-label\"\n                      id=\"genres-chip\"\n                      value={genreIds}\n                      onChange={handleGenresSelect}\n                      labelWidth={67}\n                      input={<Input id=\"select-genres-chip\" />}\n                      renderValue={selected => (\n                        <Grid className={classes.chips}>\n                          {selected.map(value => (\n                            <Chip\n                              key={value}\n                              label={genres[value].name}\n                              className={classes.chip}\n                            />\n                          ))}\n                        </Grid>\n                      )}\n                      multiple\n                      fullWidth\n                    >\n                      {Object.values(genres).map(genre => (\n                        <MenuItem\n                          key={genre._id}\n                          value={genre._id}\n                          style={getStyles(genre._id)}\n                        >\n                          {genre.name}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </div>\n                  {genreError && (\n                    <FormHelperText>\n                      Can't add more than 3 genre.\n                    </FormHelperText>\n                  )}\n                </FormControl>\n              </Grid>\n            </Grid>\n\n            <Grid container justify=\"center\" className={classes.lastElement}>\n              <Grid item xs={12} sm={10}>\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  size=\"large\"\n                  disabled={urlError || name === ''}\n                  onClick={handleAddShowSubmit}\n                  fullWidth\n                >\n                  {!isAddShowSubmitLoading ? 'Add' : <CircularProgress />}\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default AddShow;\n","import React from 'react';\n\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\n\nconst ElevationScroll = props => {\n  const { children } = props;\n\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n  });\n\n  return React.cloneElement(children, {\n    style: trigger\n      ? { boxShadow: '0 5px 5px -5px #333' }\n      : { boxShadow: 'none' },\n  });\n};\n\nexport default ElevationScroll;\n","const style = theme => ({\n  loginElement: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n});\n\nexport default style;\n","import React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Link from '@material-ui/core/Link';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport style from './style';\n\nimport { regex } from '../../constants';\n\nconst Login = props => {\n  const {\n    handleOpenRegisterPopup,\n    handleCloseLoginPopup,\n    onLoginSubmit,\n    isSubmitLoginLoading,\n  } = props;\n\n  const classes = makeStyles(style)();\n\n  const [username, setUsernameValue] = React.useState('');\n  const [usernameError, setUsernameError] = React.useState(false);\n  const [password, setPasswordValue] = React.useState('');\n  const [passwordVisible, setPasswordVisibility] = React.useState(false);\n\n  const handleUsernameTyping = event => {\n    if (\n      regex.USERNAME_TYPING.test(event.target.value) ||\n      event.target.value === ''\n    ) {\n      setUsernameError(false);\n    } else {\n      setUsernameError(true);\n    }\n    setUsernameValue(event.target.value);\n  };\n\n  const checkUsername = event => {\n    if (regex.USERNAME.test(event.target.value) || event.target.value === '') {\n      setUsernameError(false);\n    } else {\n      setUsernameError(true);\n    }\n  };\n\n  const handlePasswordTyping = event => {\n    setPasswordValue(event.target.value);\n  };\n\n  const handleTogglePasswordVisibility = () => {\n    setPasswordVisibility(!passwordVisible);\n  };\n\n  const handleLoginSubmit = event => {\n    event.preventDefault();\n    onLoginSubmit(username, password);\n  };\n\n  const handleRegisterClick = event => {\n    event.preventDefault();\n    handleCloseLoginPopup();\n    setTimeout(handleOpenRegisterPopup, 500);\n  };\n\n  return (\n    <>\n      <Grid container spacing={1} justify=\"center\" alignContent=\"center\">\n        <Grid item xs={12} sm={10}>\n          <Grid container justify=\"center\" className={classes.loginElement}>\n            <Typography variant=\"h4\">Login</Typography>\n          </Grid>\n          <form onSubmit={handleLoginSubmit}>\n            <Grid container justify=\"center\" className={classes.loginElement}>\n              <Grid item xs={12} sm={10}>\n                <TextField\n                  id=\"email\"\n                  variant=\"outlined\"\n                  label=\"Username\"\n                  placeholder=\"rajnikanth\"\n                  value={username}\n                  onChange={handleUsernameTyping}\n                  onBlur={checkUsername}\n                  error={usernameError}\n                  helperText={usernameError && 'Invalid username format.'}\n                  InputLabelProps={{ shrink: true }}\n                  autoFocus\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n            <Grid container justify=\"center\" className={classes.loginElement}>\n              <Grid item xs={12} sm={10}>\n                <TextField\n                  id=\"password\"\n                  variant=\"outlined\"\n                  type={passwordVisible ? 'text' : 'password'}\n                  label=\"Password\"\n                  placeholder=\"●●●●●●●●\"\n                  value={password}\n                  onChange={handlePasswordTyping}\n                  InputLabelProps={{ shrink: true }}\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          aria-label=\"toggle password visibility\"\n                          edge=\"end\"\n                          onClick={handleTogglePasswordVisibility}\n                        >\n                          {passwordVisible ? <Visibility /> : <VisibilityOff />}\n                        </IconButton>\n                      </InputAdornment>\n                    ),\n                  }}\n                  autoComplete=\"true\"\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n            <Grid container justify=\"center\" className={classes.loginElement}>\n              <Grid item xs={12} sm={10}>\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  size=\"large\"\n                  disabled={usernameError || username === '' || password === ''}\n                  onClick={handleLoginSubmit}\n                  fullWidth\n                >\n                  {!isSubmitLoginLoading ? 'Login' : <CircularProgress />}\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Grid>\n        <Grid container justify=\"center\" className={classes.loginElement}>\n          <Grid item xs={12} sm={10}>\n            <Grid container justify=\"center\">\n              <Typography variant=\"subtitle1\">\n                Not our user yet?{' '}\n                <Link href=\"\" onClick={handleRegisterClick}>\n                  Register Here.\n                </Link>\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Login;\n","const style = theme => ({\n  registerElement: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n});\n\nexport default style;\n","import React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Link from '@material-ui/core/Link';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport style from './style';\n\nimport { regex } from '../../constants';\n\nconst Register = props => {\n  const {\n    handleOpenLoginPopup,\n    handleCloseRegisterPopup,\n    checkForUsername,\n    isCheckUsernameLoading,\n    isValidUsername,\n    onRegisterSubmit,\n    isRegisterSubmitLoading,\n  } = props;\n\n  const classes = makeStyles(style)();\n\n  const [username, setUsernameValue] = React.useState('');\n  const [usernameError, setUsernameError] = React.useState(false);\n  const [password, setPasswordValue] = React.useState('');\n  const [passwordVisible, setPasswordVisibility] = React.useState(false);\n\n  React.useEffect(() => {\n    if (username !== '' && !isValidUsername) {\n      setUsernameError('This username is already taken.');\n    } else {\n      setUsernameError(false);\n    }\n  }, [isValidUsername, username]);\n\n  const handleUsernameTyping = event => {\n    if (!isValidUsername) {\n      setUsernameError('This username is already taken.');\n    } else if (\n      regex.USERNAME_TYPING.test(event.target.value) ||\n      event.target.value === ''\n    ) {\n      setUsernameError(false);\n    } else {\n      setUsernameError('Invalid Username format');\n    }\n\n    setUsernameValue(event.target.value);\n\n    if (event.target.value !== '') {\n      checkForUsername(event.target.value);\n    }\n  };\n\n  const checkUsername = event => {\n    if (!isValidUsername) {\n      setUsernameError('This username is already taken.');\n    } else if (\n      regex.USERNAME.test(event.target.value) ||\n      event.target.value === ''\n    ) {\n      setUsernameError(false);\n    } else {\n      setUsernameError('Invalid Username format');\n    }\n\n    if (event.target.value !== '') {\n      checkForUsername(event.target.value);\n    }\n  };\n\n  const handlePasswordTyping = event => {\n    setPasswordValue(event.target.value);\n  };\n\n  const handleTogglePasswordVisibility = () => {\n    setPasswordVisibility(!passwordVisible);\n  };\n\n  const handleRegisterSubmit = event => {\n    event.preventDefault();\n    onRegisterSubmit(username, password);\n  };\n\n  const handleLoginClick = event => {\n    event.preventDefault();\n    handleCloseRegisterPopup();\n    setTimeout(handleOpenLoginPopup, 500);\n  };\n\n  return (\n    <>\n      <Grid container spacing={1} justify=\"center\" alignContent=\"center\">\n        <Grid item xs={12} sm={10}>\n          <Grid container justify=\"center\" className={classes.registerElement}>\n            <Typography variant=\"h4\">Register</Typography>\n          </Grid>\n          <form onSubmit={handleRegisterSubmit}>\n            <Grid\n              container\n              justify=\"center\"\n              className={classes.registerElement}\n            >\n              <Grid item xs={12} sm={10}>\n                <TextField\n                  id=\"email\"\n                  variant=\"outlined\"\n                  label=\"Username\"\n                  placeholder=\"rajnikanth\"\n                  value={username}\n                  onChange={handleUsernameTyping}\n                  onBlur={checkUsername}\n                  error={!!usernameError}\n                  helperText={!!usernameError && usernameError}\n                  InputLabelProps={{ shrink: true }}\n                  autoFocus\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n            <Grid\n              container\n              justify=\"center\"\n              className={classes.registerElement}\n            >\n              <Grid item xs={12} sm={10}>\n                <TextField\n                  id=\"password\"\n                  variant=\"outlined\"\n                  type={passwordVisible ? 'text' : 'password'}\n                  label=\"Password\"\n                  placeholder=\"●●●●●●●●\"\n                  value={password}\n                  onChange={handlePasswordTyping}\n                  InputLabelProps={{ shrink: true }}\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          aria-label=\"toggle password visibility\"\n                          edge=\"end\"\n                          onClick={handleTogglePasswordVisibility}\n                        >\n                          {passwordVisible ? <Visibility /> : <VisibilityOff />}\n                        </IconButton>\n                      </InputAdornment>\n                    ),\n                  }}\n                  autoComplete=\"true\"\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n            <Grid\n              container\n              justify=\"center\"\n              className={classes.registerElement}\n            >\n              <Grid item xs={12} sm={10}>\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  size=\"large\"\n                  disabled={\n                    isCheckUsernameLoading ||\n                    !!usernameError ||\n                    username === '' ||\n                    password === ''\n                  }\n                  onClick={handleRegisterSubmit}\n                  fullWidth\n                >\n                  {!isRegisterSubmitLoading ? 'Register' : <CircularProgress />}\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Grid>\n        <Grid container justify=\"center\" className={classes.registerElement}>\n          <Grid item xs={12} sm={10}>\n            <Grid container justify=\"center\">\n              <Typography variant=\"subtitle1\">\n                Already registered?{' '}\n                <Link href=\"\" onClick={handleLoginClick}>\n                  Login Here.\n                </Link>\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Register;\n","const style = () => ({\n  navbar: {\n    backgroundColor: '#F7F7F7',\n  },\n  logo: {\n    cursor: 'pointer',\n    height: '7vh',\n  },\n});\n\nexport default style;\n","import React from 'react';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\nimport ExitToAppRoundedIcon from '@material-ui/icons/ExitToAppRounded';\nimport LibraryAddRoundedIcon from '@material-ui/icons/LibraryAddRounded';\nimport PersonAddRoundedIcon from '@material-ui/icons/PersonAddRounded';\n\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\n\nimport AddShow from '../AddShow';\nimport ElevationScroll from '../ElevationScroll';\nimport Login from '../Login';\nimport Register from '../Register';\nimport SlideTransition from '../SlideTransition';\n\nimport style from './style';\n\nimport { utils } from '../../constants';\n\nconst Navbar = props => {\n  const {\n    redirectToPage,\n    requestToShowToast,\n    checkForUsername,\n    onRegisterSubmit,\n    onLoginSubmit,\n    onAddShowSubmit,\n    logoutUser,\n    isSubmitLoginLoading,\n    isCheckUsernameLoading,\n    isUserLoggedIn,\n    isValidUsername,\n    username,\n    types,\n    languages,\n    genres,\n  } = props;\n\n  const classes = makeStyles(style)();\n  const theme = useTheme();\n  const isMobileView = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const [loginPopupState, setLoginPopupState] = React.useState(false);\n  const [registerPopupState, setRegisterPopupState] = React.useState(false);\n  const [addShowPopupState, setAddShowPopupState] = React.useState(false);\n\n  React.useEffect(() => {\n    setLoginPopupState(false);\n    setRegisterPopupState(false);\n  }, [isUserLoggedIn]);\n\n  const handleLogout = () => {\n    logoutUser();\n  };\n\n  const handleOpenLoginPopup = () => {\n    setLoginPopupState(true);\n  };\n\n  const handleCloseLoginPopup = () => {\n    setLoginPopupState(false);\n  };\n\n  const handleOpenRegisterPopup = () => {\n    setRegisterPopupState(true);\n  };\n\n  const handleCloseRegisterPopup = () => {\n    setRegisterPopupState(false);\n  };\n\n  const handleOpenAddShowPopup = () => {\n    if (isUserLoggedIn) {\n      setAddShowPopupState(true);\n    } else {\n      requestToShowToast(\n        utils.MESSAGE_VARIANTS.INFO,\n        'You have to login first.'\n      );\n      setLoginPopupState(true);\n    }\n  };\n\n  const handleCloseAddShowPopup = () => {\n    if (isUserLoggedIn) {\n      setAddShowPopupState(false);\n    } else {\n      setLoginPopupState(false);\n    }\n  };\n\n  return (\n    <>\n      <ElevationScroll {...props}>\n        <AppBar className={classes.navbar} position=\"sticky\" elevation={0}>\n          <Toolbar>\n            <Grid container justify=\"space-between\" alignItems=\"center\">\n              <Grid item>\n                <img\n                  className={classes.logo}\n                  src={isMobileView ? '/bwg_mobile_logo.png' : '/bwg_logo.png'}\n                  alt=\"Binge Watcher's Guide\"\n                  onClick={() => redirectToPage('/')}\n                />\n              </Grid>\n              <Grid item>\n                <Grid container justify=\"space-between\" alignItems=\"center\">\n                  <Grid item xs>\n                    {isMobileView ? (\n                      <IconButton onClick={handleOpenAddShowPopup}>\n                        <LibraryAddRoundedIcon color=\"primary\" />\n                      </IconButton>\n                    ) : (\n                      <Grid container justify=\"center\" alignItems=\"center\">\n                        <Button\n                          color=\"primary\"\n                          size=\"large\"\n                          startIcon={<LibraryAddRoundedIcon />}\n                          onClick={handleOpenAddShowPopup}\n                        >\n                          Add your entry\n                        </Button>\n                      </Grid>\n                    )}\n                  </Grid>\n                  <Grid item xs>\n                    {isUserLoggedIn ? (\n                      <Grid container justify=\"center\" alignItems=\"center\">\n                        <Button\n                          color=\"primary\"\n                          size=\"large\"\n                          startIcon={<ExitToAppRoundedIcon />}\n                          onClick={handleLogout}\n                        >\n                          Logout ({username})\n                        </Button>\n                      </Grid>\n                    ) : isMobileView ? (\n                      <IconButton onClick={handleOpenLoginPopup}>\n                        <PersonAddRoundedIcon color=\"primary\" />\n                      </IconButton>\n                    ) : (\n                      <Grid container justify=\"center\" alignItems=\"center\">\n                        <Button\n                          color=\"primary\"\n                          size=\"large\"\n                          startIcon={<PersonAddRoundedIcon />}\n                          onClick={handleOpenLoginPopup}\n                        >\n                          Login\n                        </Button>\n                      </Grid>\n                    )}\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Toolbar>\n        </AppBar>\n      </ElevationScroll>\n      <Dialog\n        open={loginPopupState}\n        TransitionComponent={SlideTransition}\n        fullWidth\n        maxWidth=\"sm\"\n        keepMounted={false}\n        onClose={handleCloseLoginPopup}\n      >\n        <DialogContent>\n          <Grid container>\n            <Grid item xs={12}>\n              <Grid container justify=\"flex-end\">\n                <IconButton onClick={handleCloseLoginPopup}>\n                  <CloseRoundedIcon />\n                </IconButton>\n              </Grid>\n            </Grid>\n            <Grid item xs={12}>\n              <Login\n                onLoginSubmit={onLoginSubmit}\n                isSubmitLoginLoading={isSubmitLoginLoading}\n                handleOpenRegisterPopup={handleOpenRegisterPopup}\n                handleCloseLoginPopup={handleCloseLoginPopup}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n      </Dialog>\n      <Dialog\n        open={registerPopupState}\n        TransitionComponent={SlideTransition}\n        fullWidth\n        maxWidth=\"sm\"\n        keepMounted={false}\n        onClose={handleCloseRegisterPopup}\n      >\n        <DialogContent>\n          <Grid container>\n            <Grid item xs={12}>\n              <Grid container justify=\"flex-end\">\n                <IconButton onClick={handleCloseRegisterPopup}>\n                  <CloseRoundedIcon />\n                </IconButton>\n              </Grid>\n            </Grid>\n            <Grid item xs={12}>\n              <Register\n                checkForUsername={checkForUsername}\n                isCheckUsernameLoading={isCheckUsernameLoading}\n                isValidUsername={isValidUsername}\n                onRegisterSubmit={onRegisterSubmit}\n                handleOpenLoginPopup={handleOpenLoginPopup}\n                handleCloseRegisterPopup={handleCloseRegisterPopup}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n      </Dialog>\n      <Dialog\n        open={addShowPopupState}\n        TransitionComponent={SlideTransition}\n        fullWidth\n        maxWidth=\"sm\"\n        keepMounted={false}\n        onClose={handleCloseAddShowPopup}\n      >\n        <DialogContent>\n          <Grid container>\n            <Grid item xs={12}>\n              <Grid container justify=\"flex-end\">\n                <IconButton onClick={handleCloseAddShowPopup}>\n                  <CloseRoundedIcon />\n                </IconButton>\n              </Grid>\n            </Grid>\n            <Grid item xs={12}>\n              <AddShow\n                onAddShowSubmit={onAddShowSubmit}\n                types={types}\n                languages={languages}\n                genres={genres}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n};\n\nexport default Navbar;\n","import React, { Component } from 'react';\nimport { push } from 'connected-react-router';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport Grid from '@material-ui/core/Grid';\nimport Hidden from '@material-ui/core/Hidden';\n\nimport FilterAreaMobile from '../components/FilterAreaMobile';\nimport FilterAreaWeb from '../components/FilterAreaWeb';\nimport Loading from '../components/Loading';\nimport MovieDescription from '../components/MovieDescription';\nimport Navbar from '../components/Navbar';\n\nimport {\n  loadingAction,\n  loginAction,\n  registerAction,\n  showsAction,\n  staticAction,\n  toastAction,\n  userAction,\n} from '../actions';\nimport {\n  loadingSelector,\n  showsSelector,\n  staticSelector,\n  userSelector,\n} from '../selectors';\n\nimport { logoutUser } from '../utils/users';\n\nclass IndexPage extends Component {\n  componentDidMount() {\n    const { getAllStatics, getAllShows, userId } = this.props;\n\n    getAllStatics();\n    getAllShows({ userId });\n  }\n\n  render() {\n    const {\n      redirectToPage,\n      requestToShowToast,\n      getAllShows,\n      checkForUsername,\n      onRegisterSubmit,\n      onLoginSubmit,\n      onAddShowSubmit,\n      logoutUser,\n      isGetStaticsLoading,\n      isCheckUsernameLoading,\n      isSubmitLoginLoading,\n      isUserLoggedIn,\n      isValidUsername,\n      userId,\n      username,\n      types,\n      languages,\n      genres,\n      shows,\n    } = this.props;\n\n    return (\n      <>\n        {isGetStaticsLoading ? (\n          <Loading loading={isGetStaticsLoading} />\n        ) : (\n          <>\n            <>\n              <Navbar\n                redirectToPage={redirectToPage}\n                requestToShowToast={requestToShowToast}\n                checkForUsername={checkForUsername}\n                onRegisterSubmit={onRegisterSubmit}\n                onLoginSubmit={onLoginSubmit}\n                onAddShowSubmit={onAddShowSubmit}\n                logoutUser={logoutUser}\n                isSubmitLoginLoading={isSubmitLoginLoading}\n                isCheckUsernameLoading={isCheckUsernameLoading}\n                isUserLoggedIn={isUserLoggedIn}\n                isValidUsername={isValidUsername}\n                username={username}\n                types={types}\n                languages={languages}\n                genres={genres}\n              />\n            </>\n\n            <Grid container justify=\"flex-start\">\n              <Hidden mdUp>\n                <Grid item xs={12}>\n                  <FilterAreaMobile\n                    userId={userId}\n                    getAllShows={getAllShows}\n                    types={types}\n                    languages={languages}\n                    genres={genres}\n                  />\n                </Grid>\n              </Hidden>\n              <Grid item xs={12} md={8}>\n                {shows.map(show => (\n                  <MovieDescription\n                    key={show._id}\n                    {...show}\n                    type={types && types[show.type] && types[show.type].name}\n                    language={\n                      languages &&\n                      languages[show.language] &&\n                      languages[show.language].name\n                    }\n                    genres={show.genres.map(\n                      genreId =>\n                        genres && genres[genreId] && genres[genreId].name\n                    )}\n                  />\n                ))}\n              </Grid>\n              <Hidden smDown>\n                <Grid item md>\n                  <FilterAreaWeb\n                    userId={userId}\n                    getAllShows={getAllShows}\n                    types={types}\n                    languages={languages}\n                    genres={genres}\n                  />\n                </Grid>\n              </Hidden>\n            </Grid>\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  redirectToPage: url => {\n    return dispatch(push(url));\n  },\n  getAllStatics: () => {\n    dispatch(loadingAction.startGetStaticsLoading());\n    return dispatch(staticAction.getAllStatics());\n  },\n  getAllShows: filter => {\n    return dispatch(showsAction.getAllShows(filter));\n  },\n  requestToShowToast: (variant, message) => {\n    return dispatch(toastAction.requestToShowToast(variant, message));\n  },\n  checkForUsername: username => {\n    dispatch(loadingAction.startCheckUsernameLoading());\n    return dispatch(registerAction.checkUsername(username));\n  },\n  onRegisterSubmit: (username, password) => {\n    dispatch(loadingAction.startRegisterLoading());\n    return dispatch(registerAction.registerUser(username, password));\n  },\n  onLoginSubmit: (username, password) => {\n    dispatch(loadingAction.startLoginLoading());\n    return dispatch(loginAction.submitForLogin(username, password));\n  },\n  onAddShowSubmit: show => {\n    dispatch(loadingAction.startAddShowLoading());\n    return dispatch(showsAction.addShow(show));\n  },\n  logoutUser: () => {\n    logoutUser();\n    dispatch(showsAction.resetVotes());\n    return dispatch(userAction.resetUserData());\n  },\n});\n\nconst mapStateToProps = createStructuredSelector({\n  isGetStaticsLoading: loadingSelector.getStaticsLoadingState(),\n  isGetAllShowsLoading: loadingSelector.getAllShowsLoadingState(),\n  isCheckUsernameLoading: loadingSelector.getCheckUsernameLoadingState(),\n  isSubmitLoginLoading: loadingSelector.getLoginLoadingState(),\n  isUserLoggedIn: userSelector.isUserLoggedIn(),\n  isValidUsername: userSelector.isValidUsername(),\n  userId: userSelector.getCurrentUserId(),\n  username: userSelector.getCurrentUsername(),\n  types: staticSelector.getAllTypes(),\n  languages: staticSelector.getAllLanguages(),\n  genres: staticSelector.getAllGenres(),\n  shows: showsSelector.getAllShows(),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IndexPage);\n","import { amber, blue, green, red } from '@material-ui/core/colors';\n\nconst style = theme => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: red[500],\n  },\n  info: {\n    backgroundColor: blue[400],\n  },\n  warning: {\n    backgroundColor: amber[800],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n});\n\nexport default style;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport clsx from 'clsx';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport style from './style';\n\nimport { toastAction } from '../../actions';\nimport { toastSelector } from '../../selectors';\n\nclass Toast extends Component {\n  onClose = () => {\n    const { hideToast } = this.props;\n    hideToast();\n  };\n\n  render() {\n    const { toastState, toastMessage, toastVariant, classes } = this.props;\n    const toastPosition = { vertical: 'bottom', horizontal: 'left' };\n\n    const variantIcon = {\n      success: CheckCircleIcon,\n      warning: WarningIcon,\n      error: ErrorIcon,\n      info: InfoIcon,\n    };\n\n    const ToastIcon = variantIcon[toastVariant];\n\n    const toastIcon = toastVariant && (\n      <ToastIcon className={clsx(classes.icon, classes.iconVariant)} />\n    );\n\n    return (\n      <Snackbar\n        autoHideDuration={3000}\n        open={toastState}\n        anchorOrigin={toastPosition}\n        onClose={this.onClose}\n        transitionDuration={100}\n        action={[\n          <IconButton\n            key=\"close\"\n            aria-label=\"close\"\n            color=\"inherit\"\n            onClick={this.onClose}\n          >\n            <CloseIcon />\n          </IconButton>,\n        ]}\n      >\n        <SnackbarContent\n          className={clsx(classes[toastVariant], classes.icon)}\n          message={\n            <span id=\"snackbar-message\" className={classes.message}>\n              {toastIcon}\n              {toastMessage}\n            </span>\n          }\n          action={[\n            <IconButton\n              key=\"close\"\n              aria-label=\"close\"\n              color=\"inherit\"\n              onClick={this.onClose}\n            >\n              <CloseIcon className={classes.icon} />\n            </IconButton>,\n          ]}\n        />\n      </Snackbar>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  hideToast: () => dispatch(toastAction.hideToast()),\n});\n\nconst mapStateToProps = createStructuredSelector({\n  toastState: toastSelector.getToastState(),\n  toastMessage: toastSelector.getToastMessage(),\n  toastVariant: toastSelector.getToastVariant(),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(style)(Toast));\n","import React, { lazy, Suspense } from 'react';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { Helmet } from 'react-helmet';\nimport { Provider } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\n\nimport history from './utils/history';\nimport reduxStore from './utils/store';\nimport CustomTheme from './utils/theme';\n\nimport IndexPage from './pages/Index.page';\n\nimport Loading from './components/Loading';\nimport Toast from './components/Toast';\n\n// Lazy Load\nconst NotFoundPage = lazy(() => import('./pages/NotFound.page'));\n\nconst App = () => {\n  return (\n    <Provider store={reduxStore}>\n      <Helmet\n        titleTemplate=\"%s - Binge Watcher's Guide\"\n        defaultTitle=\"Binge Watcher's Guide - Complete Movie and Series Directory\"\n      >\n        <meta\n          name=\"description\"\n          content=\"Binge Watcher's Guide - Complete Movie and Series Directory\"\n        />\n      </Helmet>\n      <ConnectedRouter history={history}>\n        <Toast />\n        <ThemeProvider theme={CustomTheme}>\n          <Suspense fallback={<Loading />}>\n            <Switch>\n              <Route exact path=\"/\" component={IndexPage} />\n              <Route component={NotFoundPage} />\n            </Switch>\n          </Suspense>\n        </ThemeProvider>\n      </ConnectedRouter>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}