{"version":3,"sources":["utils/history.js","constants/actions.js","reducers/loading.reducer.js","reducers/shows.reducer.js","reducers/static.reducer.js","reducers/toast.reducer.js","constants/storage.js","utils/users.js","reducers/user.reducer.js","reducers/index.js","actions/loading.action.js","actions/shows.action.js","actions/static.action.js","actions/toast.action.js","constants/regex.js","constants/urls.js","constants/utils.js","utils/errorHandler.js","sagas/login.saga.js","sagas/register.saga.js","sagas/shows.saga.js","sagas/static.saga.js","selectors/shows.selector.js","selectors/static.selector.js","selectors/toast.selector.js","selectors/user.selector.js","sagas/toast.saga.js","sagas/index.js","utils/token.js","utils/store.js","utils/theme.js","components/ListFilters/style.js","components/ListFilters/index.js","components/FilterArea/style.js","components/FilterArea/index.js","components/SlideTransition/index.js","components/FilterAreaMobile/index.js","components/FilterAreaWeb/style.js","components/FilterAreaWeb/index.js","components/MovieDescriptionCard/style.js","components/MovieDescriptionCard/index.js","components/VoteArea/style.js","components/VoteArea/index.js","components/MovieDescription/style.js","components/MovieDescription/index.js","components/AddShow/style.js","components/AddShow/index.js","components/ElevationScroll/index.js","components/Login/style.js","components/Login/index.js","components/Register/style.js","components/Register/index.js","components/Navbar/style.js","components/Navbar/index.js","pages/Index.page.js","components/Loading/index.js","components/Toast/style.js","components/Toast/index.js","App.js","serviceWorker.js","index.js"],"names":["history","createBrowserHistory","LOADING","START_REGISTER_LOADING","STOP_REGISTER_LOADING","START_LOGIN_LOADING","STOP_LOGIN_LOADING","START_ADD_SHOW_LOADING","STOP_ADD_SHOW_LOADING","TOAST","REQUEST_TO_SHOW_TOAST","SHOW_TOAST","HIDE_TOAST","REGISTER","REGISTER_USER","LOGIN","SUBMIT_FOR_LOGIN","RESET_LOGIN_STATE","USER","UPDATE_USER_DATA","STATIC","GET_ALL_STATICS","UPDATE_TYPE_DATA","UPDATE_LANGUAGE_DATA","UPDATE_GENRE_DATA","SHOWS","GET_ALL_SHOWS","ADD_SHOWS","initialState","isRegisterSubmitLoading","isLoginSubmitLoading","isAddShowSubmitLoading","loadingReducer","state","action","type","shows","staticReducer","currentShows","newShows","payload","newShowIds","Set","map","show","_id","mergedShows","filter","has","types","languages","genres","message","variant","toastReducer","IS_LOGGED_IN","EXPIRE_AT","ID","TOKEN","USERNAME","updateUserLoginInfo","userInfo","decodedToken","decode","token","expiryEpoch","exp","localStorage","setItem","username","updateUserInfo","checkIfUserIsLoggedIn","isLoggedIn","getItem","expireAt","Date","logoutUser","removeItem","notLoggedInState","userReducer","RESET_USER_DATA","rootReducer","combineReducers","router","connectRouter","toast","loading","static","user","showsReducer","startRegisterLoading","stopRegisterLoading","startLoginLoading","stopLoginLoading","startAddShowLoading","stopAddShowLoading","getAllShows","addShows","getAllStatics","updateTypeData","updateLanguageData","updateGenreData","requestToShowToast","showToast","hideToast","USERNAME_TYPING","URL","BASE_URL","process","GET_ALL_ORGANISATIONS","REGISTER_URL","LOGIN_URL","FETCH_ALL_KUDOS","GIVE_KUDOS_TO_USER","GET_ALL_USERS_OF_CURRENT_ORGANISATION","MESSAGE_VARIANTS","SUCCESS","WARNING","INFO","ERROR","APPLICATION_ERROR_STATUS_CODES","INTERNAL_SERVER_ERROR","UNAUTHORIZED","FORBIDDEN","MISSING_PARAMS","NOT_FOUND","NOT_ALLOWED","FILTER_TYPES","TYPE","LANGUAGE","GENRE","handleError","axios","interceptors","response","use","error","status","data","utils","store","dispatch","toastAction","Promise","reject","loginSubmitWorker","loginSubmitWatcher","loginSaga","requestURL","urls","password","body","headers","post","put","loadingAction","takeLatest","actions","all","registerSubmitWorker","registerSubmitWatcher","registerSaga","userData","push","getAllShowsWorker","getAllShowsWatcher","showsSaga","name","url","language","genre","upvotes","downvotes","haveUpvoted","haveDownvoted","showsAction","takeEvery","getAllStaticsWorker","getAllStaticsWatcher","staticSaga","isChecked","staticAction","selectShowsState","createSelector","showState","selectStaticState","getAllTypes","staticState","getAllLanguages","getAllGenres","selectToastState","getToastState","toastState","getToastMessage","getToastVariant","selectUserState","isUserLoggedIn","userState","getAuthToken","getCurrentUserId","getCurrentUserInfo","showToastWorker","showToastWatcher","toastSaga","select","toastSelector","toastVariant","toastMessage","delay","rootSaga","fork","checkTokenExpiration","next","tokenExpireAt","storage","setTimeout","sagaMiddleWare","createSagaMiddleware","composeEnhancers","compose","enhancers","applyMiddleware","routerMiddleware","createStore","run","CustomTheme","createMuiTheme","typography","fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","style","filterArea","paddingTop","paddingBottom","expansionPanelHeading","borderBottom","expansionPanelBody","padding","filterListArea","width","maxHeight","overflow","ListFilters","props","title","values","expanded","handleExpansion","handleOnCheckBoxClick","classes","makeStyles","Grid","className","item","xs","ExpansionPanel","square","ExpansionPanelSummary","clsx","expandIcon","onClick","Typography","ExpansionPanelDetails","List","value","ListItem","key","role","undefined","dense","button","ListItemIcon","Checkbox","edge","checked","tabIndex","disableRipple","ListItemText","primary","theme","margin","spacing","filterChipsArea","marginTop","marginBottom","backgroundColor","chips","divider","FilterArea","React","useState","allFilterValues","setFilterValues","setTypes","setLanguages","setGenres","typeExpanded","setTypeExpansion","languageExpanded","setLanguageExpansion","genreExpanded","setGenreExpansion","currentValue","newFilterValues","newTypes","newLanguages","newGenres","filterChipComponent","Chip","color","label","onDelete","container","justify","length","Button","fullWidth","disabled","Paper","elevation","Hidden","smDown","md","mdUp","Divider","SlideTransition","forwardRef","ref","Slide","direction","FilterAreaMobile","openFilterArea","setFilterAreaState","handleCloseFilterArea","size","startIcon","Dialog","open","TransitionComponent","fullScreen","maxWidth","keepMounted","onClose","AppBar","position","Toolbar","IconButton","FilterAreaWeb","Card","CardContent","descriptionArea","paddingRight","breakpoints","down","titleArea","fontWeight","watchButton","paddingLeft","metadataArea","tabArea","languageIcon","languageText","marginLeft","typeIcon","typeText","genreIcon","genreTab","MovieDescriptionCard","useTheme","isMobileView","useMediaQuery","genreList","genreComponent","index","endIcon","disableElevation","window","sm","alignItems","display","element","icons","palette","text","secondary","upvoted","success","light","downvoted","vote","marginRight","VoteArea","votes","cardArea","dividerArea","MovieDescription","orientation","flexItem","addShowElement","multipleSelect","border","borderRadius","multipleSelectError","multipleSelectLabel","background","flexWrap","chip","lastElement","AddShow","onAddShowSubmit","setNameValue","setUrlValue","urlError","setUrlError","typeId","setTypeValue","languageId","setLanguageValue","genreIds","setGenresValue","genreError","setGenreError","handleAddShowSubmit","event","preventDefault","alignContent","onSubmit","TextField","id","placeholder","onChange","target","InputLabelProps","shrink","autoFocus","onBlur","regex","test","helperText","FormControl","InputLabel","Select","labelId","labelWidth","MenuItem","input","Input","renderValue","selected","find","multiple","genreId","indexOf","FormHelperText","CircularProgress","ElevationScroll","children","trigger","useScrollTrigger","disableHysteresis","threshold","cloneElement","boxShadow","loginElement","Login","handleOpenRegisterPopup","handleCloseLoginPopup","onLoginSubmit","setUsernameValue","usernameError","setUsernameError","setPasswordValue","passwordVisible","setPasswordVisibility","handleLoginSubmit","InputProps","endAdornment","InputAdornment","aria-label","autoComplete","Link","href","registerElement","Register","handleOpenLoginPopup","handleCloseRegisterPopup","onRegisterSubmit","handleRegisterSubmit","navbar","logo","cursor","height","Navbar","redirectToPage","loginPopupState","setLoginPopupState","registerPopupState","setRegisterPopupState","addShowPopupState","setAddShowPopupState","handleOpenAddShowPopup","handleCloseAddShowPopup","src","alt","DialogContent","IndexPage","this","Component","mapStateToProps","createStructuredSelector","userSelector","staticSelector","showsSelector","connect","Loading","green","red","info","blue","warning","amber","icon","iconVariant","opacity","Toast","ToastIcon","CheckCircleIcon","WarningIcon","ErrorIcon","InfoIcon","toastIcon","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","transitionDuration","SnackbarContent","withStyles","NotFoundPage","lazy","App","reduxStore","Helmet","titleTemplate","defaultTitle","content","ThemeProvider","fallback","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.97719aab.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport default history;\n","// ------------------ LOADING ACTIONS ------------------ //\nexport const LOADING = {\n  START_REGISTER_LOADING: 'bwg/Loading/START_REGISTER_LOADING',\n  STOP_REGISTER_LOADING: 'bwg/Loading/STOP_REGISTER_LOADING',\n  START_LOGIN_LOADING: 'bwg/Loading/START_LOGIN_LOADING',\n  STOP_LOGIN_LOADING: 'bwg/Loading/STOP_LOGIN_LOADING',\n  START_ADD_SHOW_LOADING: 'bwg/Loading/START_ADD_SHOW_LOADING',\n  STOP_ADD_SHOW_LOADING: 'bwg/Loading/STOP_ADD_SHOW_LOADING',\n};\n\n// ------------------ TOAST ACTIONS ------------------ //\nexport const TOAST = {\n  REQUEST_TO_SHOW_TOAST: 'bwg/Toast/REQUEST_TO_SHOW_TOAST',\n  SHOW_TOAST: 'bwg/Toast/SHOW_TOAST',\n  HIDE_TOAST: 'bwg/Toast/HIDE_TOAST',\n};\n\n// ------------------ REGISTER ACTIONS ------------------ //\nexport const REGISTER = {\n  REGISTER_USER: 'bwg/Register/REGISTER_USER',\n};\n\n// ------------------ LOGIN ACTIONS ------------------ //\nexport const LOGIN = {\n  SUBMIT_FOR_LOGIN: 'bwg/Login/SUBMIT_FOR_LOGIN',\n  RESET_LOGIN_STATE: 'bwg/Login/RESET_LOGIN_STATE',\n};\n\n// ------------------ USER ACTIONS ------------------ //\nexport const USER = {\n  UPDATE_USER_DATA: 'bwg/User/UPDATE_USER_DATA',\n};\n\n// ------------------ STATIC ACTIONS ------------------ //\nexport const STATIC = {\n  GET_ALL_STATICS: 'bwg/Static/GET_ALL_STATICS',\n  UPDATE_TYPE_DATA: 'bwg/Static/UPDATE_TYPE_DATA',\n  UPDATE_LANGUAGE_DATA: 'bwg/Static/UPDATE_LANGUAGE_DATA',\n  UPDATE_GENRE_DATA: 'bwg/Static/UPDATE_GENRE_DATA',\n};\n\n// ------------------ SHOWS ACTIONS ------------------ //\nexport const SHOWS = {\n  GET_ALL_SHOWS: 'bwg/Shows/GET_ALL_SHOWS',\n  ADD_SHOWS: 'bwg/Shows/ADD_SHOWS',\n};\n","import { LOADING } from '../constants/actions';\n\nconst initialState = {\n  isRegisterSubmitLoading: false,\n  isLoginSubmitLoading: false,\n  isAddShowSubmitLoading: false,\n};\n\nexport default function loadingReducer(state = initialState, action) {\n  switch (action.type) {\n    case LOADING.START_REGISTER_LOADING:\n      return {\n        ...state,\n        isRegisterSubmitLoading: true,\n      };\n\n    case LOADING.STOP_REGISTER_LOADING:\n      return {\n        ...state,\n        isRegisterSubmitLoading: false,\n      };\n\n    case LOADING.START_LOGIN_LOADING:\n      return {\n        ...state,\n        isLoginSubmitLoading: true,\n      };\n\n    case LOADING.STOP_LOGIN_LOADING:\n      return {\n        ...state,\n        isLoginSubmitLoading: false,\n      };\n\n    case LOADING.START_ADD_SHOW_LOADING:\n      return {\n        ...state,\n        isAddShowSubmitLoading: true,\n      };\n\n    case LOADING.STOP_ADD_SHOW_LOADING:\n      return {\n        ...state,\n        isAddShowSubmitLoading: false,\n      };\n\n    default:\n      return { ...state };\n  }\n}\n","import { SHOWS } from '../constants/actions';\n\nconst initialState = {\n  shows: [],\n};\n\nexport default function staticReducer(state = initialState, action) {\n  switch (action.type) {\n    case SHOWS.ADD_SHOWS: {\n      const currentShows = state.shows;\n      const newShows = action.payload.shows;\n      const newShowIds = new Set(newShows.map(show => show._id));\n      const mergedShows = [\n        ...newShows,\n        ...currentShows.filter(show => !newShowIds.has(show._id)),\n      ];\n\n      return {\n        ...state,\n        shows: [...mergedShows],\n      };\n    }\n\n    default:\n      return { ...state };\n  }\n}\n","import { STATIC } from '../constants/actions';\n\nconst initialState = {\n  types: [],\n  languages: [],\n  genres: [],\n};\n\nexport default function staticReducer(state = initialState, action) {\n  switch (action.type) {\n    case STATIC.UPDATE_TYPE_DATA:\n      return {\n        ...state,\n        types: [...action.payload.types],\n      };\n\n    case STATIC.UPDATE_LANGUAGE_DATA:\n      return {\n        ...state,\n        languages: [...action.payload.languages],\n      };\n\n    case STATIC.UPDATE_GENRE_DATA:\n      return {\n        ...state,\n        genres: [...action.payload.genres],\n      };\n\n    default:\n      return { ...state };\n  }\n}\n","import { TOAST } from '../constants/actions';\n\nconst initialState = {\n  show: false,\n  message: null,\n  variant: null,\n};\n\nexport default function toastReducer(state = initialState, action) {\n  switch (action.type) {\n    case TOAST.REQUEST_TO_SHOW_TOAST:\n      return {\n        ...state,\n        message: action.payload.message,\n        variant: action.payload.variant,\n      };\n\n    case TOAST.SHOW_TOAST:\n      return {\n        ...state,\n        show: true,\n        message: action.payload.message,\n        variant: action.payload.variant,\n      };\n\n    case TOAST.HIDE_TOAST:\n      return {\n        ...state,\n        show: false,\n        message: null,\n        variant: null,\n      };\n\n    default:\n      return { ...state };\n  }\n}\n","export const USER = {\n  IS_LOGGED_IN: 'U_i_l_i',\n  EXPIRE_AT: 'U_w_e_b',\n  ID: 'U_i',\n  TOKEN: 'U_p_k',\n  USERNAME: 'U_n',\n};\n","import { decode } from 'jsonwebtoken';\n\nimport { USER } from '../constants/storage';\n\nexport const updateUserInfo = userInfo => {\n  userInfo._id && localStorage.setItem(USER.ID, userInfo._id);\n  userInfo.token && localStorage.setItem(USER.TOKEN, userInfo.token);\n  userInfo.username && localStorage.setItem(USER.USERNAME, userInfo.username);\n};\n\nexport const updateUserLoginInfo = userInfo => {\n  const decodedToken = decode(userInfo.token);\n  const expiryEpoch = decodedToken && decodedToken.exp * 1000;\n\n  localStorage.setItem(USER.IS_LOGGED_IN, 1);\n  localStorage.setItem(USER.EXPIRE_AT, expiryEpoch);\n  updateUserInfo(userInfo);\n};\n\nexport const checkIfUserIsLoggedIn = () => {\n  const isLoggedIn = +localStorage.getItem(USER.IS_LOGGED_IN);\n  const expireAt = +localStorage.getItem(USER.EXPIRE_AT);\n\n  if (expireAt && isLoggedIn === 1 && new Date(expireAt) > new Date()) {\n    const userInfo = {};\n    userInfo.isLoggedIn = true;\n    userInfo.expireAt = +localStorage.getItem(USER.EXPIRE_AT);\n    userInfo._id = +localStorage.getItem(USER.ID);\n    userInfo.token = localStorage.getItem(USER.TOKEN);\n    userInfo.username = localStorage.getItem(USER.USERNAME);\n\n    return { isLoggedIn: true, userInfo };\n  }\n\n  return { isLoggedIn: false, userInfo: null };\n};\n\nexport const removeUserInfo = () => {\n  localStorage.removeItem(USER.IS_LOGGED_IN);\n  localStorage.removeItem(USER.EXPIRE_AT);\n  localStorage.removeItem(USER.ID);\n  localStorage.removeItem(USER.TOKEN);\n  localStorage.removeItem(USER.USERNAME);\n};\n\nexport const logoutUser = () => {\n  removeUserInfo();\n};\n","import { USER } from '../constants/actions';\nimport { checkIfUserIsLoggedIn } from '../utils/users';\n\nconst { isLoggedIn, userInfo } = checkIfUserIsLoggedIn();\n\nconst notLoggedInState = {\n  isLoggedIn: false,\n  _id: null,\n  username: null,\n  token: null,\n};\n\nconst initialState = isLoggedIn ? userInfo : notLoggedInState;\n\nexport default function userReducer(state = initialState, action) {\n  switch (action.type) {\n    case USER.UPDATE_USER_DATA:\n      return {\n        ...state,\n        isLoggedIn: true,\n        _id: action.payload.userInfo._id,\n        username: action.payload.userInfo.username,\n        token: action.payload.userInfo.token,\n      };\n\n    case USER.RESET_USER_DATA:\n      return {\n        ...notLoggedInState,\n      };\n\n    default:\n      return { ...state };\n  }\n}\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\n\nimport loadingReducer from './loading.reducer';\nimport showsReducer from './shows.reducer';\nimport staticReducer from './static.reducer';\nimport toastReducer from './toast.reducer';\nimport userReducer from './user.reducer';\n\nconst rootReducer = history =>\n  combineReducers({\n    router: connectRouter(history),\n    toast: toastReducer,\n    loading: loadingReducer,\n    static: staticReducer,\n    user: userReducer,\n    shows: showsReducer,\n  });\n\nexport default rootReducer;\n","import { LOADING } from '../constants/actions';\n\nexport function startRegisterLoading() {\n  return { type: LOADING.START_REGISTER_LOADING };\n}\n\nexport function stopRegisterLoading() {\n  return { type: LOADING.STOP_REGISTER_LOADING };\n}\n\nexport function startLoginLoading() {\n  return { type: LOADING.START_LOGIN_LOADING };\n}\n\nexport function stopLoginLoading() {\n  return { type: LOADING.STOP_LOGIN_LOADING };\n}\n\nexport function startAddShowLoading() {\n  return { type: LOADING.START_ADD_SHOW_LOADING };\n}\n\nexport function stopAddShowLoading() {\n  return { type: LOADING.STOP_ADD_SHOW_LOADING };\n}\n","import { SHOWS } from '../constants/actions';\n\nexport function getAllShows(types, languages, genres) {\n  return { type: SHOWS.GET_ALL_SHOWS, payload: { types, languages, genres } };\n}\n\nexport function addShows(shows) {\n  return { type: SHOWS.ADD_SHOWS, payload: { shows } };\n}\n","import { STATIC } from '../constants/actions';\n\nexport function getAllStatics() {\n  return { type: STATIC.GET_ALL_STATICS };\n}\n\nexport function updateTypeData(types) {\n  return { type: STATIC.UPDATE_TYPE_DATA, payload: { types } };\n}\n\nexport function updateLanguageData(languages) {\n  return { type: STATIC.UPDATE_LANGUAGE_DATA, payload: { languages } };\n}\n\nexport function updateGenreData(genres) {\n  return { type: STATIC.UPDATE_GENRE_DATA, payload: { genres } };\n}\n","import { TOAST } from '../constants/actions';\n\nexport function requestToShowToast(variant, message) {\n  return { type: TOAST.REQUEST_TO_SHOW_TOAST, payload: { variant, message } };\n}\n\nexport function showToast(variant, message) {\n  return { type: TOAST.SHOW_TOAST, payload: { variant, message } };\n}\n\nexport function hideToast() {\n  return { type: TOAST.HIDE_TOAST };\n}\n","export const USERNAME = /^[a-z][a-z'-_.]{2,}$/i;\nexport const USERNAME_TYPING = /^[a-z][a-z'-_.]*$/i;\n\nexport const URL = /[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)?/gi;\n","const BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nexport const GET_ALL_ORGANISATIONS = `${BASE_URL}/organisations`;\nexport const REGISTER_URL = `${BASE_URL}/users`;\nexport const LOGIN_URL = `${BASE_URL}/users/login`;\nexport const FETCH_ALL_KUDOS = `${BASE_URL}/users/<USER_ID>/kudos`;\nexport const GIVE_KUDOS_TO_USER = `${BASE_URL}/users/<USER_ID>/kudos`;\nexport const GET_ALL_USERS_OF_CURRENT_ORGANISATION = `${BASE_URL}/organisations/<ORGANISATION_ID>/users`;\n","export const MESSAGE_VARIANTS = {\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  INFO: 'info',\n  ERROR: 'error',\n};\n\nexport const APPLICATION_ERROR_STATUS_CODES = {\n  INTERNAL_SERVER_ERROR: 500,\n  UNAUTHORIZED: 401,\n  FORBIDDEN: 403,\n  MISSING_PARAMS: 422,\n  NOT_FOUND: 404,\n  NOT_ALLOWED: 409,\n};\n\nexport const FILTER_TYPES = {\n  TYPE: 'TYPE',\n  LANGUAGE: 'LANGUAGE',\n  GENRE: 'GENRE',\n};\n","import { toastAction } from '../actions';\nimport { utils } from '../constants';\n\nimport store from './store';\n\nconst handleError = axios => {\n  axios.interceptors.response.use(\n    response => response,\n    error => {\n      const { status, data } = error.response;\n      if (\n        status === utils.APPLICATION_ERROR_STATUS_CODES.UNAUTHORIZED ||\n        status === utils.APPLICATION_ERROR_STATUS_CODES.NOT_ALLOWED\n      ) {\n        const { message } = data;\n        store.dispatch(\n          toastAction.requestToShowToast(\n            utils.MESSAGE_VARIANTS.WARNING,\n            message\n          )\n        );\n      } else if (status === utils.APPLICATION_ERROR_STATUS_CODES.FORBIDDEN) {\n        store.dispatch(\n          toastAction.requestToShowToast(\n            utils.MESSAGE_VARIANTS.WARNING,\n            'You are not allowed to access this.'\n          )\n        );\n      } else if (\n        status === utils.APPLICATION_ERROR_STATUS_CODES.MISSING_PARAMS ||\n        status === utils.APPLICATION_ERROR_STATUS_CODES.NOT_FOUND\n      ) {\n        store.dispatch(\n          toastAction.requestToShowToast(\n            utils.MESSAGE_VARIANTS.WARNING,\n            'The request you sent looks incomplete. Please check and try again.'\n          )\n        );\n      } else if (\n        status === utils.APPLICATION_ERROR_STATUS_CODES.INTERNAL_SERVER_ERROR\n      ) {\n        store.dispatch(\n          toastAction.requestToShowToast(\n            utils.MESSAGE_VARIANTS.ERROR,\n            'Some issue occured with the server. Please try again in sometime.'\n          )\n        );\n      }\n      return Promise.reject(error);\n    }\n  );\n};\n\nexport default handleError;\n","import axios from 'axios';\nimport { all, put, takeLatest } from '@redux-saga/core/effects';\n\nimport { loadingAction, toastAction } from '../actions';\n\nimport { actions, urls, utils } from '../constants';\n\nimport handleError from '../utils/errorHandler';\nimport { updateUserLoginInfo } from '../utils/users';\n\n/* -----------------------------------------\n *                 WORKERS\n * -----------------------------------------\n */\n\nfunction* loginSubmitWorker({ payload }) {\n  try {\n    handleError(axios);\n    const requestURL = urls.LOGIN_URL;\n\n    const { username, password } = payload;\n\n    const body = {\n      username,\n      password,\n    };\n\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n\n    const response = yield axios.post(requestURL, body, { headers });\n\n    yield put(loadingAction.stopLoginLoading());\n\n    if (response && response.status === 200) {\n      const { data } = response;\n      const { message } = data;\n      const { user } = data.data;\n      updateUserLoginInfo(user);\n\n      yield put(\n        toastAction.requestToShowToast(utils.MESSAGE_VARIANTS.SUCCESS, message)\n      );\n\n      // yield put(userAction.updateBasicUserInfo(user));\n    }\n  } catch (error) {\n    yield put(loadingAction.stopLoginLoading());\n  }\n}\n\n/* -----------------------------------------\n *                 WATCHERS\n * -----------------------------------------\n */\n\nfunction* loginSubmitWatcher() {\n  yield takeLatest(actions.LOGIN.SUBMIT_FOR_LOGIN, loginSubmitWorker);\n}\n\nexport default function* loginSaga() {\n  yield all([loginSubmitWatcher()]);\n}\n","import axios from 'axios';\nimport { all, put, takeLatest } from '@redux-saga/core/effects';\nimport { push } from 'connected-react-router';\n\nimport { loadingAction, toastAction } from '../actions';\n\nimport { actions, urls, utils } from '../constants';\n\nimport handleError from '../utils/errorHandler';\nimport { updateUserLoginInfo } from '../utils/users';\n\n/* -----------------------------------------\n *                 WORKERS\n * -----------------------------------------\n */\n\nfunction* registerSubmitWorker({ payload }) {\n  try {\n    handleError(axios);\n    const requestURL = urls.REGISTER_URL;\n\n    const body = payload.userData;\n\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n\n    const response = yield axios.post(requestURL, body, { headers });\n\n    yield put(loadingAction.stopRegisterLoading());\n\n    if (response && response.status === 201) {\n      const { data } = response;\n      const { message } = data;\n      const { user } = data.data;\n\n      updateUserLoginInfo(user);\n\n      yield put(\n        toastAction.requestToShowToast(utils.MESSAGE_VARIANTS.SUCCESS, message)\n      );\n\n      // yield put(userAction.updateBasicUserInfo(user));\n      yield put(push('/'));\n    }\n  } catch (error) {\n    yield put(loadingAction.stopRegisterLoading());\n  }\n}\n\n/* -----------------------------------------\n *                 WATCHERS\n * -----------------------------------------\n */\n\nfunction* registerSubmitWatcher() {\n  yield takeLatest(actions.REGISTER.REGISTER_USER, registerSubmitWorker);\n}\n\nexport default function* registerSaga() {\n  yield all([registerSubmitWatcher()]);\n}\n","import { all, put, takeEvery } from '@redux-saga/core/effects';\n\nimport { showsAction } from '../actions';\n\nimport { actions } from '../constants';\n\nfunction* getAllShowsWorker() {\n  const shows = [\n    {\n      _id: '1',\n      name: 'Kumbalangi Nights',\n      url: 'https://www.primevideo.com/detail/0IIH4C2IQSRU9B8L3F4XOLI5WH/',\n      language: 'Malayalam',\n      type: 'Movie',\n      genre: ['Drama', 'Thriller'],\n      upvotes: 12,\n      downvotes: 2,\n      haveUpvoted: true,\n      haveDownvoted: false,\n    },\n    {\n      _id: '2',\n      name: 'The Prestige',\n      url:\n        'https://www.primevideo.com/region/eu/detail/0NHF8XHW3MHY857TGPSWTYCXTI/',\n      language: 'English',\n      type: 'Movie',\n      genre: ['Drama', 'Suspense'],\n      upvotes: 28,\n      downvotes: 4,\n      haveUpvoted: false,\n      haveDownvoted: true,\n    },\n    {\n      _id: '3',\n      name: 'Kumbalangi Nights',\n      url: 'https://www.primevideo.com/detail/0IIH4C2IQSRU9B8L3F4XOLI5WH/',\n      language: 'Malayalam',\n      type: 'Movie',\n      genre: ['Drama', 'Thriller'],\n      upvotes: 12,\n      downvotes: 2,\n      haveUpvoted: false,\n      haveDownvoted: false,\n    },\n    {\n      _id: '4',\n      name: 'The Prestige',\n      url:\n        'https://www.primevideo.com/region/eu/detail/0NHF8XHW3MHY857TGPSWTYCXTI/',\n      language: 'English',\n      type: 'Movie',\n      genre: ['Drama', 'Suspense'],\n      upvotes: 28,\n      downvotes: 4,\n      haveUpvoted: false,\n      haveDownvoted: true,\n    },\n    {\n      _id: '5',\n      name: 'Kumbalangi Nights',\n      url: 'https://www.primevideo.com/detail/0IIH4C2IQSRU9B8L3F4XOLI5WH/',\n      language: 'Malayalam',\n      type: 'Movie',\n      genre: ['Drama', 'Thriller'],\n      upvotes: 12,\n      downvotes: 2,\n      haveUpvoted: true,\n      haveDownvoted: false,\n    },\n    {\n      _id: '6',\n      name: 'The Prestige',\n      url:\n        'https://www.primevideo.com/region/eu/detail/0NHF8XHW3MHY857TGPSWTYCXTI/',\n      language: 'English',\n      type: 'Movie',\n      genre: ['Drama', 'Suspense'],\n      upvotes: 28,\n      downvotes: 4,\n      haveUpvoted: false,\n      haveDownvoted: true,\n    },\n  ];\n\n  yield put(showsAction.addShows(shows));\n}\n\nfunction* getAllShowsWatcher() {\n  yield takeEvery(actions.SHOWS.GET_ALL_SHOWS, getAllShowsWorker);\n}\n\nexport default function* showsSaga() {\n  yield all([getAllShowsWatcher()]);\n}\n","import { all, put, takeEvery } from '@redux-saga/core/effects';\n\nimport { staticAction } from '../actions';\n\nimport { actions, utils } from '../constants';\n\nfunction* getAllStaticsWorker() {\n  const types = [\n    {\n      _id: 1,\n      name: 'Movies',\n      type: utils.FILTER_TYPES.TYPE,\n      isChecked: false,\n    },\n    {\n      _id: 2,\n      name: 'Series',\n      type: utils.FILTER_TYPES.TYPE,\n      isChecked: false,\n    },\n    {\n      _id: 3,\n      name: 'Documentary',\n      type: utils.FILTER_TYPES.TYPE,\n      isChecked: false,\n    },\n  ];\n\n  const languages = [\n    {\n      _id: 1,\n      name: 'Malayalam',\n      type: utils.FILTER_TYPES.LANGUAGE,\n      isChecked: false,\n    },\n    {\n      _id: 2,\n      name: 'Tamil',\n      type: utils.FILTER_TYPES.LANGUAGE,\n      isChecked: false,\n    },\n    {\n      _id: 3,\n      name: 'Hindi',\n      type: utils.FILTER_TYPES.LANGUAGE,\n      isChecked: false,\n    },\n    {\n      _id: 4,\n      name: 'English',\n      type: utils.FILTER_TYPES.LANGUAGE,\n      isChecked: false,\n    },\n    {\n      _id: 5,\n      name: 'Others',\n      type: utils.FILTER_TYPES.LANGUAGE,\n      isChecked: false,\n    },\n  ];\n\n  const genres = [\n    {\n      _id: 1,\n      name: 'Drama',\n      type: utils.FILTER_TYPES.GENRE,\n      isChecked: false,\n    },\n    {\n      _id: 2,\n      name: 'Horror',\n      type: utils.FILTER_TYPES.GENRE,\n      isChecked: false,\n    },\n    {\n      _id: 3,\n      name: 'Sci-fi',\n      type: utils.FILTER_TYPES.GENRE,\n      isChecked: false,\n    },\n    {\n      _id: 4,\n      name: 'Thriller',\n      type: utils.FILTER_TYPES.GENRE,\n      isChecked: false,\n    },\n    {\n      _id: 5,\n      name: 'Comedy',\n      type: utils.FILTER_TYPES.GENRE,\n      isChecked: false,\n    },\n    {\n      _id: 6,\n      name: 'Romantic',\n      type: utils.FILTER_TYPES.GENRE,\n      isChecked: false,\n    },\n  ];\n\n  // const updatedTypes = types.map(typeObj => ({\n  //   ...typeObj,\n  //   type: utils.FILTER_TYPES.TYPE,\n  // }));\n\n  // const updatedLanguages = languages.map(languageObj => ({\n  //   ...languageObj,\n  //   type: utils.FILTER_TYPES.LANGUAGE,\n  // }));\n\n  // const updatedGenres = genres.map(genreObj => ({\n  //   ...genreObj,\n  //   type: utils.FILTER_TYPES.GENRE,\n  // }));\n\n  yield put(staticAction.updateTypeData(types));\n  yield put(staticAction.updateLanguageData(languages));\n  yield put(staticAction.updateGenreData(genres));\n}\n\nfunction* getAllStaticsWatcher() {\n  yield takeEvery(actions.STATIC.GET_ALL_STATICS, getAllStaticsWorker);\n}\n\nexport default function* staticSaga() {\n  yield all([getAllStaticsWatcher()]);\n}\n","import { createSelector } from 'reselect';\n\nconst selectShowsState = state => state.shows;\n\nexport const getAllShows = () =>\n  createSelector(selectShowsState, showState => showState.shows);\n","import { createSelector } from 'reselect';\n\nconst selectStaticState = state => state.static;\n\nexport const getAllTypes = () =>\n  createSelector(selectStaticState, staticState => staticState.types);\n\nexport const getAllLanguages = () =>\n  createSelector(selectStaticState, staticState => staticState.languages);\n\nexport const getAllGenres = () =>\n  createSelector(selectStaticState, staticState => staticState.genres);\n","import { createSelector } from 'reselect';\n\nconst selectToastState = state => state.toast;\n\nexport const getToastState = () =>\n  createSelector(selectToastState, toastState => toastState.show);\n\nexport const getToastMessage = () =>\n  createSelector(selectToastState, toastState => toastState.message);\n\nexport const getToastVariant = () =>\n  createSelector(selectToastState, toastState => toastState.variant);\n","import { createSelector } from 'reselect';\n\nconst selectUserState = state => state.user;\n\nexport const isUserLoggedIn = () =>\n  createSelector(selectUserState, userState => userState.isLoggedIn);\n\nexport const getAuthToken = () =>\n  createSelector(\n    selectUserState,\n    userState =>\n      userState._id &&\n      userState.token &&\n      'Bearer ' + userState._id + ',' + userState.token\n  );\n\nexport const getCurrentUserId = () =>\n  createSelector(selectUserState, userState => userState._id);\n\nexport const getCurrentUserInfo = () =>\n  createSelector(selectUserState, userState => userState);\n","import { all, delay, put, select, takeEvery } from '@redux-saga/core/effects';\n\nimport { toastAction } from '../actions';\n\nimport { actions } from '../constants';\n\nimport { toastSelector } from '../selectors';\n\nfunction* showToastWorker() {\n  const toastVariant = yield select(toastSelector.getToastVariant());\n  const toastMessage = yield select(toastSelector.getToastMessage());\n\n  yield put(toastAction.hideToast());\n  yield delay(100);\n  yield put(toastAction.showToast(toastVariant, toastMessage));\n}\n\nfunction* showToastWatcher() {\n  yield takeEvery(actions.TOAST.REQUEST_TO_SHOW_TOAST, showToastWorker);\n}\n\nexport default function* toastSaga() {\n  yield all([showToastWatcher()]);\n}\n","import { all, fork } from '@redux-saga/core/effects';\n\nimport loginSaga from './login.saga';\nimport registerSaga from './register.saga';\nimport showsSaga from './shows.saga';\nimport staticSaga from './static.saga';\nimport toastSaga from './toast.saga';\n\nexport default function* rootSaga() {\n  yield all([\n    fork(loginSaga),\n    fork(registerSaga),\n    fork(showsSaga),\n    fork(staticSaga),\n    fork(toastSaga),\n  ]);\n}\n","import { push } from 'connected-react-router';\n\nimport { toastAction } from '../actions';\nimport { storage, utils } from '../constants';\nimport { checkIfUserIsLoggedIn, logoutUser } from './users';\n\nconst checkTokenExpiration = store => next => action => {\n  const tokenExpireAt = +localStorage.getItem(storage.USER.EXPIRE_AT);\n  const { isLoggedIn } = checkIfUserIsLoggedIn();\n\n  if (!isLoggedIn && tokenExpireAt) {\n    logoutUser();\n\n    store.dispatch(\n      toastAction.requestToShowToast(\n        utils.MESSAGE_VARIANTS.WARNING,\n        'Your session has expired. Please login again.'\n      )\n    );\n\n    setTimeout(() => {\n      // store.dispatch(userAction.resetUserInfo());\n      store.dispatch(push('/login'));\n    }, 3000);\n  }\n\n  next(action);\n};\n\nexport default checkTokenExpiration;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { routerMiddleware } from 'connected-react-router';\n\nimport history from './history';\nimport rootReducer from '../reducers';\nimport rootSaga from '../sagas';\n\nimport checkTokenExpiration from './token';\n\nconst sagaMiddleWare = createSagaMiddleware();\n\nconst composeEnhancers =\n  process.env.NODE_ENV !== 'production' &&\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        shouldHotReload: false,\n      })\n    : compose;\n\nconst enhancers = [\n  applyMiddleware(\n    sagaMiddleWare,\n    checkTokenExpiration,\n    routerMiddleware(history)\n  ),\n];\nconst store = createStore(rootReducer(history), composeEnhancers(...enhancers));\nsagaMiddleWare.run(rootSaga);\n\nexport default store;\n","import 'typeface-lato';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nconst CustomThemeObject = {\n  typography: {\n    fontFamily: '\"Lato\"',\n    fontSize: 14,\n    fontWeightLight: 300,\n    fontWeightRegular: 400,\n    fontWeightMedium: 500,\n  },\n};\n\nconst CustomTheme = createMuiTheme(CustomThemeObject);\n\nexport default CustomTheme;\n","const style = () => ({\n  filterArea: {\n    paddingTop: '.5rem',\n    paddingBottom: '.5rem',\n  },\n  expansionPanelHeading: {\n    borderBottom: '1px solid #C3C3C3',\n  },\n  expansionPanelBody: {\n    padding: 0,\n  },\n  filterListArea: {\n    width: '100%',\n    maxHeight: 150,\n    overflow: 'auto',\n  },\n});\n\nexport default style;\n","import React from 'react';\nimport clsx from 'clsx';\n\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport style from './style';\n\nconst ListFilters = props => {\n  const {\n    title,\n    values,\n    expanded,\n    handleExpansion,\n    handleOnCheckBoxClick,\n  } = props;\n\n  const classes = makeStyles(style)();\n\n  return (\n    <>\n      <Grid className={classes.filterArea} item xs={12}>\n        <ExpansionPanel square expanded={expanded}>\n          <ExpansionPanelSummary\n            className={clsx(expanded && classes.expansionPanelHeading)}\n            expandIcon={<ExpandMoreIcon />}\n            onClick={handleExpansion}\n          >\n            <Typography variant=\"h6\">{title}</Typography>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails className={classes.expansionPanelBody}>\n            <List className={classes.filterListArea}>\n              {values.map(value => (\n                <ListItem\n                  key={value._id}\n                  role={undefined}\n                  dense\n                  button\n                  onClick={handleOnCheckBoxClick(value)}\n                >\n                  <ListItemIcon>\n                    <Checkbox\n                      edge=\"start\"\n                      checked={value.isChecked}\n                      tabIndex={-1}\n                      disableRipple\n                    />\n                  </ListItemIcon>\n                  <ListItemText primary={value.name} />\n                </ListItem>\n              ))}\n            </List>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n      </Grid>\n    </>\n  );\n};\n\nexport default ListFilters;\n","const style = theme => ({\n  filterArea: {\n    margin: theme.spacing(1),\n  },\n  filterChipsArea: {\n    marginTop: '.5rem',\n    marginBottom: '.5rem',\n    backgroundColor: '#F7F7F7',\n  },\n  chips: {\n    padding: '.25rem',\n    margin: '.5rem',\n  },\n  divider: {\n    marginTop: '1rem',\n    marginBottom: '1rem',\n  },\n});\n\nexport default style;\n","import React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Hidden from '@material-ui/core/Hidden';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ListFilters from '../ListFilters';\n\nimport style from './style';\n\nimport { utils } from '../../constants';\n\nconst FilterArea = props => {\n  const classes = makeStyles(style)();\n\n  const [allFilterValues, setFilterValues] = React.useState([]);\n\n  const [types, setTypes] = React.useState(props.types || []);\n  const [languages, setLanguages] = React.useState(props.languages || []);\n  const [genres, setGenres] = React.useState(props.genres || []);\n\n  const [typeExpanded, setTypeExpansion] = React.useState(true);\n  const [languageExpanded, setLanguageExpansion] = React.useState(false);\n  const [genreExpanded, setGenreExpansion] = React.useState(false);\n\n  const handleExpansion = type => {\n    if (type === utils.FILTER_TYPES.TYPE) {\n      setTypeExpansion(!typeExpanded);\n    } else if (type === utils.FILTER_TYPES.LANGUAGE) {\n      setLanguageExpansion(!languageExpanded);\n    } else if (type === utils.FILTER_TYPES.GENRE) {\n      setGenreExpansion(!genreExpanded);\n    }\n  };\n\n  const handleOnCheckBoxClick = currentValue => () => {\n    if (!currentValue.isChecked) {\n      setFilterValues([\n        ...allFilterValues,\n        { ...currentValue, isChecked: true },\n      ]);\n    } else {\n      const newFilterValues = [...allFilterValues].filter(\n        value =>\n          value._id !== currentValue._id || value.type !== currentValue.type\n      );\n      setFilterValues(newFilterValues);\n    }\n\n    if (currentValue.type === utils.FILTER_TYPES.TYPE) {\n      const newTypes = [...types].map(type =>\n        type._id === currentValue._id\n          ? { ...type, isChecked: !type.isChecked }\n          : type\n      );\n      setTypes(newTypes);\n    } else if (currentValue.type === utils.FILTER_TYPES.LANGUAGE) {\n      const newLanguages = [...languages].map(language =>\n        language._id === currentValue._id\n          ? { ...language, isChecked: !language.isChecked }\n          : language\n      );\n      setLanguages(newLanguages);\n    } else if (currentValue.type === utils.FILTER_TYPES.GENRE) {\n      const newGenres = [...genres].map(genre =>\n        genre._id === currentValue._id\n          ? { ...genre, isChecked: !genre.isChecked }\n          : genre\n      );\n      setGenres(newGenres);\n    }\n  };\n\n  const handleOnDeleteValue = currentValue => () => {\n    const newFilterValues = [...allFilterValues].filter(\n      value =>\n        value._id !== currentValue._id || value.type !== currentValue.type\n    );\n    setFilterValues(newFilterValues);\n\n    if (currentValue.type === utils.FILTER_TYPES.TYPE) {\n      const newTypes = [...types].map(type =>\n        type._id === currentValue._id ? { ...type, isChecked: false } : type\n      );\n      setTypes(newTypes);\n    } else if (currentValue.type === utils.FILTER_TYPES.LANGUAGE) {\n      const newLanguages = [...languages].map(language =>\n        language._id === currentValue._id\n          ? { ...language, isChecked: false }\n          : language\n      );\n      setLanguages(newLanguages);\n    } else if (currentValue.type === utils.FILTER_TYPES.GENRE) {\n      const newGenres = [...genres].map(genre =>\n        genre._id === currentValue._id ? { ...genre, isChecked: false } : genre\n      );\n      setGenres(newGenres);\n    }\n  };\n\n  const handleResetFilter = () => {\n    setFilterValues([]);\n    setTypes(props.types || []);\n    setLanguages(props.languages || []);\n    setGenres(props.genres || []);\n  };\n\n  const filterChipComponent = allFilterValues.map(value => (\n    <Chip\n      className={classes.chips}\n      key={value._id + ' ' + value.type}\n      color=\"primary\"\n      label={value.name}\n      onDelete={handleOnDeleteValue(value)}\n    />\n  ));\n\n  return (\n    <>\n      <Grid className={classes.filterArea}>\n        <Grid container justify=\"space-between\">\n          <Grid item xs>\n            <Typography variant=\"h6\">Filters</Typography>\n          </Grid>\n\n          {allFilterValues && allFilterValues.length > 0 && (\n            <Grid item xs={4}>\n              <Button\n                color=\"primary\"\n                fullWidth\n                disabled={allFilterValues && allFilterValues.length < 1}\n                onClick={handleResetFilter}\n              >\n                Clear All\n              </Button>\n            </Grid>\n          )}\n        </Grid>\n\n        <Paper className={classes.filterChipsArea} elevation={0}>\n          {filterChipComponent}\n        </Paper>\n\n        {allFilterValues && allFilterValues.length > 0 && (\n          <>\n            <Hidden smDown>\n              <Grid item md={5}>\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  fullWidth\n                  disabled={allFilterValues && allFilterValues.length < 1}\n                >\n                  Apply\n                </Button>\n              </Grid>\n            </Hidden>\n\n            <Hidden mdUp>\n              <Grid container justify=\"center\">\n                <Grid item xs={6}>\n                  <Button\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    fullWidth\n                    disabled={allFilterValues && allFilterValues.length < 1}\n                  >\n                    Apply\n                  </Button>\n                </Grid>\n              </Grid>\n            </Hidden>\n          </>\n        )}\n\n        <Divider className={classes.divider} />\n\n        <ListFilters\n          title=\"Types\"\n          values={types}\n          expanded={typeExpanded}\n          handleExpansion={() => handleExpansion(utils.FILTER_TYPES.TYPE)}\n          handleOnCheckBoxClick={handleOnCheckBoxClick}\n        />\n\n        <ListFilters\n          title=\"Languages\"\n          values={languages}\n          expanded={languageExpanded}\n          handleExpansion={() => handleExpansion(utils.FILTER_TYPES.LANGUAGE)}\n          handleOnCheckBoxClick={handleOnCheckBoxClick}\n        />\n\n        <ListFilters\n          title=\"Genres\"\n          values={genres}\n          expanded={genreExpanded}\n          handleExpansion={() => handleExpansion(utils.FILTER_TYPES.GENRE)}\n          handleOnCheckBoxClick={handleOnCheckBoxClick}\n        />\n      </Grid>\n    </>\n  );\n};\n\nexport default FilterArea;\n","import React from 'react';\n\nimport Slide from '@material-ui/core/Slide';\n\nconst SlideTransition = React.forwardRef((props, ref) => {\n  return (\n    <>\n      <Slide direction=\"up\" ref={ref} {...props} />;\n    </>\n  );\n});\n\nexport default SlideTransition;\n","import React from 'react';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\nimport FilterListRoundedIcon from '@material-ui/icons/FilterListRounded';\n\nimport FilterArea from '../FilterArea';\nimport SlideTransition from '../SlideTransition';\n\nconst FilterAreaMobile = props => {\n  const [openFilterArea, setFilterAreaState] = React.useState(false);\n\n  const handleOpenFilterArea = () => {\n    setFilterAreaState(true);\n  };\n\n  const handleCloseFilterArea = () => {\n    setFilterAreaState(false);\n  };\n\n  return (\n    <>\n      <Grid container justify=\"center\">\n        <Grid item xs={8}>\n          <Button\n            color=\"primary\"\n            size=\"large\"\n            startIcon={<FilterListRoundedIcon />}\n            onClick={handleOpenFilterArea}\n            fullWidth\n          >\n            Filter List\n          </Button>\n        </Grid>\n      </Grid>\n\n      <Dialog\n        open={openFilterArea}\n        TransitionComponent={SlideTransition}\n        fullScreen\n        maxWidth=\"sm\"\n        keepMounted={false}\n        onClose={handleCloseFilterArea}\n      >\n        <AppBar position=\"sticky\">\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              onClick={handleCloseFilterArea}\n            >\n              <CloseRoundedIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        <FilterArea {...props} />\n      </Dialog>\n    </>\n  );\n};\n\nexport default FilterAreaMobile;\n","const style = theme => ({\n  filterArea: {\n    margin: theme.spacing(3, 1),\n  },\n});\n\nexport default style;\n","import React from 'react';\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport FilterArea from '../FilterArea';\n\nimport style from './style';\n\nconst FilterAreaWeb = props => {\n  const classes = makeStyles(style)();\n\n  return (\n    <>\n      <Card className={classes.filterArea}>\n        <CardContent>\n          <FilterArea {...props} />\n        </CardContent>\n      </Card>\n    </>\n  );\n};\n\nexport default FilterAreaWeb;\n","const style = theme => ({\n  descriptionArea: {\n    paddingTop: '2rem',\n    paddingRight: '2rem',\n    [theme.breakpoints.down('sm')]: {\n      paddingRight: '1rem',\n    },\n    [theme.breakpoints.down('xs')]: {\n      paddingRight: '0rem',\n    },\n  },\n  titleArea: {\n    marginBottom: '1rem',\n  },\n  title: {\n    fontWeight: 700,\n    fontSize: 30,\n    color: '#424242',\n    [theme.breakpoints.down('sm')]: {\n      fontWeight: 600,\n      fontSize: 26,\n    },\n    [theme.breakpoints.down('xs')]: {\n      fontWeight: 600,\n      fontSize: 22,\n    },\n  },\n  watchButton: {\n    fontWeight: 600,\n    paddingRight: '2rem',\n    paddingLeft: '2rem',\n    [theme.breakpoints.down('xs')]: {\n      fontWeight: 500,\n      paddingRight: '1rem',\n      paddingLeft: '1rem',\n    },\n  },\n  metadataArea: {\n    marginTop: '.5rem',\n    marginBottom: '1rem',\n  },\n  tabArea: {\n    marginTop: '.5rem',\n  },\n  languageIcon: {\n    color: '#8097A4',\n  },\n  languageText: {\n    marginLeft: '.75rem',\n    fontSize: 16,\n    color: '#8097A4',\n  },\n  typeIcon: {\n    color: '#556B84',\n  },\n  typeText: {\n    marginLeft: '.75rem',\n    fontSize: 16,\n    color: '#556B84',\n  },\n  genreIcon: {\n    color: '#125BA2',\n  },\n  genreTab: {\n    marginLeft: '.75rem',\n  },\n});\n\nexport default style;\n","import React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nimport CameraRollRoundedIcon from '@material-ui/icons/CameraRollRounded';\nimport LanguageRoundedIcon from '@material-ui/icons/LanguageRounded';\nimport MovieRoundedIcon from '@material-ui/icons/MovieRounded';\nimport OpenInNewRoundedIcon from '@material-ui/icons/OpenInNewRounded';\n\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\n\nimport style from './style';\n\nconst MovieDescriptionCard = props => {\n  const classes = makeStyles(style)();\n  const theme = useTheme();\n  const isMobileView = useMediaQuery(theme.breakpoints.down('xs'));\n\n  const { name, url, language, type, genre: genreList } = props;\n\n  const genreComponent =\n    genreList &&\n    genreList.map((genre, index) => (\n      <Chip\n        key={index}\n        className={classes.genreTab}\n        variant=\"outlined\"\n        color=\"primary\"\n        size=\"small\"\n        label={genre}\n      />\n    ));\n\n  return (\n    <>\n      <Grid className={classes.descriptionArea}>\n        <Grid className={classes.titleArea} container justify=\"space-between\">\n          <Typography className={classes.title}>{name}</Typography>\n          {url && (\n            <Button\n              className={classes.watchButton}\n              variant=\"contained\"\n              color=\"default\"\n              endIcon={!isMobileView && <OpenInNewRoundedIcon />}\n              disableElevation\n              onClick={() => window.open(url, '_blank')}\n            >\n              {isMobileView ? <OpenInNewRoundedIcon /> : 'Watch'}\n            </Button>\n          )}\n        </Grid>\n\n        <Divider />\n\n        <Grid className={classes.metadataArea} container>\n          <Grid className={classes.tabArea} item xs={12} sm={3}>\n            <Grid container alignItems=\"center\">\n              <Grid item>\n                <LanguageRoundedIcon className={classes.languageIcon} />\n              </Grid>\n              <Grid item>\n                <Typography\n                  className={classes.languageText}\n                  variant=\"subtitle2\"\n                  display=\"inline\"\n                >\n                  {language}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid className={classes.tabArea} item xs={12} sm={3}>\n            <Grid container alignItems=\"center\">\n              <Grid item>\n                <CameraRollRoundedIcon className={classes.typeIcon} />\n              </Grid>\n              <Grid item>\n                <Typography\n                  className={classes.typeText}\n                  variant=\"subtitle2\"\n                  display=\"inline\"\n                >\n                  {type}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid className={classes.tabArea} item xs={12} sm>\n            <Grid container alignItems=\"center\">\n              <Grid item>\n                <MovieRoundedIcon className={classes.genreIcon} />\n              </Grid>\n              <Grid item>{genreComponent}</Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default MovieDescriptionCard;\n","const style = theme => ({\n  element: {\n    padding: '.25rem, 0rem',\n  },\n  icons: {\n    color: theme.palette.text.secondary,\n  },\n  upvoted: {\n    color: theme.palette.success.light,\n  },\n  downvoted: {\n    color: theme.palette.error.light,\n  },\n  vote: {\n    marginRight: '1rem',\n  },\n});\n\nexport default style;\n","import React from 'react';\nimport clsx from 'clsx';\n\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n\nimport ThumbUpRoundedIcon from '@material-ui/icons/ThumbUpRounded';\nimport ThumbDownRoundedIcon from '@material-ui/icons/ThumbDownRounded';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport style from './style';\n\nconst VoteArea = props => {\n  const classes = makeStyles(style)();\n\n  const { upvotes, downvotes, haveUpvoted, haveDownvoted } = props;\n\n  const votes = upvotes - downvotes;\n\n  return (\n    <>\n      <Grid className={classes.element} item xs={12}>\n        <Grid container justify=\"flex-end\">\n          <IconButton>\n            <ThumbUpRoundedIcon\n              fontSize=\"large\"\n              className={clsx(classes.icons, haveUpvoted && classes.upvoted)}\n            />\n          </IconButton>\n        </Grid>\n      </Grid>\n\n      <Grid className={classes.element} item xs={12}>\n        <Grid container justify=\"flex-end\">\n          <Typography className={classes.vote} variant=\"h6\">\n            {votes}\n          </Typography>\n        </Grid>\n      </Grid>\n\n      <Grid className={classes.element} item xs={12}>\n        <Grid container justify=\"flex-end\">\n          <IconButton>\n            <ThumbDownRoundedIcon\n              fontSize=\"large\"\n              className={clsx(\n                classes.icons,\n                !haveUpvoted && haveDownvoted && classes.downvoted\n              )}\n            />\n          </IconButton>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default VoteArea;\n","const style = theme => ({\n  cardArea: {\n    margin: theme.spacing(3, 1),\n  },\n  dividerArea: {\n    marginLeft: '1rem',\n    marginRight: '1rem',\n    [theme.breakpoints.down('sm')]: {\n      marginLeft: '0rem',\n      marginRight: '.75rem',\n    },\n  },\n});\n\nexport default style;\n","import React from 'react';\n\nimport Card from '@material-ui/core/Card';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\n\nimport MovieDescriptionCard from '../MovieDescriptionCard';\nimport VoteArea from '../VoteArea';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport style from './style';\n\nconst MovieDescription = props => {\n  const classes = makeStyles(style)();\n\n  return (\n    <>\n      <Card className={classes.cardArea}>\n        <Grid container alignItems=\"center\">\n          <Grid item xs={2} sm={1}>\n            <VoteArea {...props} />\n          </Grid>\n\n          <Divider\n            className={classes.dividerArea}\n            orientation=\"vertical\"\n            flexItem\n          />\n\n          <Grid item xs={9} sm>\n            <MovieDescriptionCard {...props} />\n          </Grid>\n        </Grid>\n      </Card>\n    </>\n  );\n};\n\nexport default MovieDescription;\n","const style = theme => ({\n  addShowElement: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n  multipleSelect: {\n    border: '1px solid #C3C3C3',\n    borderRadius: 4,\n  },\n  multipleSelectError: {\n    border: '1px solid red',\n    borderRadius: 4,\n  },\n  multipleSelectLabel: {\n    background: '#FFF',\n    paddingLeft: theme.spacing(0.5),\n    paddingRight: theme.spacing(1),\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: 2,\n    backgroundColor: theme.palette.primary,\n  },\n  lastElement: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(5),\n  },\n});\n\nexport default style;\n","import React from 'react';\nimport clsx from 'clsx';\n\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Grid from '@material-ui/core/Grid';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport style from './style';\n\nimport { regex } from '../../constants';\n\nconst AddShow = props => {\n  const {\n    onAddShowSubmit,\n    isAddShowSubmitLoading,\n    types,\n    languages,\n    genres,\n  } = props;\n\n  const classes = makeStyles(style)();\n\n  const [name, setNameValue] = React.useState('');\n\n  const [url, setUrlValue] = React.useState('');\n  const [urlError, setUrlError] = React.useState(false);\n\n  const [typeId, setTypeValue] = React.useState('');\n\n  const [languageId, setLanguageValue] = React.useState('');\n\n  const [genreIds, setGenresValue] = React.useState([]);\n  const [genreError, setGenreError] = React.useState(false);\n\n  const getStyles = genreId => ({\n    fontWeight: genreIds.indexOf(genreId) === -1 ? 500 : 700,\n  });\n\n  const handleNameTyping = event => {\n    setNameValue(event.target.value);\n  };\n\n  const handleUrlTyping = event => {\n    setUrlValue(event.target.value);\n  };\n\n  const checkUrlValue = event => {\n    if (regex.URL.test(event.target.value) || event.target.value === '') {\n      setUrlError(false);\n    } else {\n      setUrlError(true);\n    }\n  };\n\n  const handleTypeSelect = event => {\n    setTypeValue(event.target.value);\n  };\n\n  const handleLanguageSelect = event => {\n    setLanguageValue(event.target.value);\n  };\n\n  const handleGenresSelect = event => {\n    if (event.target.value.length > 3) {\n      setGenreError(true);\n    } else {\n      setGenreError(false);\n    }\n    setGenresValue(event.target.value);\n  };\n\n  const handleAddShowSubmit = event => {\n    event.preventDefault();\n    onAddShowSubmit(name, url, typeId, languageId, genreIds);\n  };\n\n  return (\n    <>\n      <Grid container spacing={1} justify=\"center\" alignContent=\"center\">\n        <Grid item xs={12} sm={10}>\n          <Grid container justify=\"center\" className={classes.addShowElement}>\n            <Typography variant=\"h4\">Add Show</Typography>\n          </Grid>\n          <form onSubmit={handleAddShowSubmit}>\n            <Grid container justify=\"center\" className={classes.addShowElement}>\n              <Grid item xs={12} sm={10}>\n                <TextField\n                  id=\"name\"\n                  variant=\"outlined\"\n                  label=\"Name\"\n                  placeholder=\"The Shawshank Redemption\"\n                  value={name}\n                  onChange={handleNameTyping}\n                  InputLabelProps={{ shrink: true }}\n                  autoFocus\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n\n            <Grid container justify=\"center\" className={classes.addShowElement}>\n              <Grid item xs={12} sm={10}>\n                <TextField\n                  id=\"url\"\n                  variant=\"outlined\"\n                  label=\"URL (Optional)\"\n                  placeholder=\"\"\n                  value={url}\n                  onChange={handleUrlTyping}\n                  onBlur={checkUrlValue}\n                  error={urlError}\n                  helperText={urlError && 'Invalid URL format.'}\n                  InputLabelProps={{ shrink: true }}\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n\n            <Grid container justify=\"center\" className={classes.addShowElement}>\n              <Grid item xs={12} sm={10}>\n                <FormControl variant=\"outlined\" fullWidth>\n                  <InputLabel id=\"select-type-label\">Type</InputLabel>\n                  <Select\n                    labelId=\"select-type-label\"\n                    id=\"select-type\"\n                    value={typeId}\n                    onChange={handleTypeSelect}\n                    labelWidth={35}\n                    fullWidth\n                  >\n                    {types.map(type => (\n                      <MenuItem key={type._id} value={type._id}>\n                        {type.name}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n            </Grid>\n\n            <Grid container justify=\"center\" className={classes.addShowElement}>\n              <Grid item xs={12} sm={10}>\n                <FormControl variant=\"outlined\" fullWidth>\n                  <InputLabel id=\"select-language-label\">Language</InputLabel>\n                  <Select\n                    labelId=\"select-language-label\"\n                    id=\"select-language\"\n                    value={languageId}\n                    onChange={handleLanguageSelect}\n                    labelWidth={67}\n                    fullWidth\n                  >\n                    {languages.map(language => (\n                      <MenuItem key={language._id} value={language._id}>\n                        {language.name}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n            </Grid>\n\n            <Grid container justify=\"center\" className={classes.addShowElement}>\n              <Grid item xs={12} sm={10}>\n                <FormControl variant=\"outlined\" fullWidth error={genreError}>\n                  <div\n                    className={clsx(\n                      genreError\n                        ? classes.multipleSelectError\n                        : classes.multipleSelect\n                    )}\n                  >\n                    <InputLabel\n                      className={classes.multipleSelectLabel}\n                      id=\"select-genres-chip-label\"\n                    >\n                      Genre (Max 3)\n                    </InputLabel>\n                    <Select\n                      labelId=\"select-genres-chip-label\"\n                      id=\"genres-chip\"\n                      value={genreIds}\n                      onChange={handleGenresSelect}\n                      labelWidth={67}\n                      input={<Input id=\"select-genres-chip\" />}\n                      renderValue={selected => (\n                        <Grid className={classes.chips}>\n                          {selected.map(value => (\n                            <Chip\n                              key={value}\n                              label={\n                                genres.find(genre => genre._id === value).name\n                              }\n                              className={classes.chip}\n                            />\n                          ))}\n                        </Grid>\n                      )}\n                      multiple\n                      fullWidth\n                    >\n                      {genres.map(genre => (\n                        <MenuItem\n                          key={genre._id}\n                          value={genre._id}\n                          style={getStyles(genre._id)}\n                        >\n                          {genre.name}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </div>\n                  {genreError && (\n                    <FormHelperText>\n                      Can't add more than 3 genre.\n                    </FormHelperText>\n                  )}\n                </FormControl>\n              </Grid>\n            </Grid>\n\n            <Grid container justify=\"center\" className={classes.lastElement}>\n              <Grid item xs={12} sm={10}>\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  size=\"large\"\n                  disabled={urlError || name === ''}\n                  onClick={handleAddShowSubmit}\n                  fullWidth\n                >\n                  {!isAddShowSubmitLoading ? 'Add' : <CircularProgress />}\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default AddShow;\n","import React from 'react';\n\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\n\nconst ElevationScroll = props => {\n  const { children } = props;\n\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n  });\n\n  return React.cloneElement(children, {\n    style: trigger\n      ? { boxShadow: '0 5px 5px -5px #333' }\n      : { boxShadow: 'none' },\n  });\n};\n\nexport default ElevationScroll;\n","const style = theme => ({\n  loginElement: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n});\n\nexport default style;\n","import React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Link from '@material-ui/core/Link';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport style from './style';\n\nimport { regex } from '../../constants';\n\nconst Login = props => {\n  const {\n    handleOpenRegisterPopup,\n    handleCloseLoginPopup,\n    onLoginSubmit,\n    isLoginSubmitLoading,\n  } = props;\n\n  const classes = makeStyles(style)();\n\n  const [username, setUsernameValue] = React.useState('');\n  const [usernameError, setUsernameError] = React.useState(false);\n  const [password, setPasswordValue] = React.useState('');\n  const [passwordVisible, setPasswordVisibility] = React.useState(false);\n\n  const handleUsernameTyping = event => {\n    if (\n      regex.USERNAME_TYPING.test(event.target.value) ||\n      event.target.value === ''\n    ) {\n      setUsernameError(false);\n    } else {\n      setUsernameError(true);\n    }\n    setUsernameValue(event.target.value);\n  };\n\n  const checkUsername = event => {\n    if (regex.USERNAME.test(event.target.value) || event.target.value === '') {\n      setUsernameError(false);\n    } else {\n      setUsernameError(true);\n    }\n  };\n\n  const handlePasswordTyping = event => {\n    setPasswordValue(event.target.value);\n  };\n\n  const handleTogglePasswordVisibility = () => {\n    setPasswordVisibility(!passwordVisible);\n  };\n\n  const handleLoginSubmit = event => {\n    event.preventDefault();\n    onLoginSubmit(username, password);\n  };\n\n  const handleRegisterClick = event => {\n    event.preventDefault();\n    handleCloseLoginPopup();\n    setTimeout(handleOpenRegisterPopup, 500);\n  };\n\n  return (\n    <>\n      <Grid container spacing={1} justify=\"center\" alignContent=\"center\">\n        <Grid item xs={12} sm={10}>\n          <Grid container justify=\"center\" className={classes.loginElement}>\n            <Typography variant=\"h4\">Login</Typography>\n          </Grid>\n          <form onSubmit={handleLoginSubmit}>\n            <Grid container justify=\"center\" className={classes.loginElement}>\n              <Grid item xs={12} sm={10}>\n                <TextField\n                  id=\"email\"\n                  variant=\"outlined\"\n                  label=\"Username\"\n                  placeholder=\"rajnikanth\"\n                  value={username}\n                  onChange={handleUsernameTyping}\n                  onBlur={checkUsername}\n                  error={usernameError}\n                  helperText={usernameError && 'Invalid username format.'}\n                  InputLabelProps={{ shrink: true }}\n                  autoFocus\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n            <Grid container justify=\"center\" className={classes.loginElement}>\n              <Grid item xs={12} sm={10}>\n                <TextField\n                  id=\"password\"\n                  variant=\"outlined\"\n                  type={passwordVisible ? 'text' : 'password'}\n                  label=\"Password\"\n                  placeholder=\"●●●●●●●●\"\n                  value={password}\n                  onChange={handlePasswordTyping}\n                  InputLabelProps={{ shrink: true }}\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          aria-label=\"toggle password visibility\"\n                          edge=\"end\"\n                          onClick={handleTogglePasswordVisibility}\n                        >\n                          {passwordVisible ? <Visibility /> : <VisibilityOff />}\n                        </IconButton>\n                      </InputAdornment>\n                    ),\n                  }}\n                  autoComplete=\"true\"\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n            <Grid container justify=\"center\" className={classes.loginElement}>\n              <Grid item xs={12} sm={10}>\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  size=\"large\"\n                  disabled={usernameError || username === '' || password === ''}\n                  onClick={handleLoginSubmit}\n                  fullWidth\n                >\n                  {!isLoginSubmitLoading ? 'Login' : <CircularProgress />}\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Grid>\n        <Grid container justify=\"center\" className={classes.loginElement}>\n          <Grid item xs={12} sm={10}>\n            <Grid container justify=\"center\">\n              <Typography variant=\"subtitle1\">\n                Not our user yet?{' '}\n                <Link href=\"\" onClick={handleRegisterClick}>\n                  Register Here.\n                </Link>\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Login;\n","const style = theme => ({\n  registerElement: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n});\n\nexport default style;\n","import React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Link from '@material-ui/core/Link';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport style from './style';\n\nimport { regex } from '../../constants';\n\nconst Register = props => {\n  const {\n    handleOpenLoginPopup,\n    handleCloseRegisterPopup,\n    onRegisterSubmit,\n    isRegisterSubmitLoading,\n  } = props;\n\n  const classes = makeStyles(style)();\n\n  const [username, setUsernameValue] = React.useState('');\n  const [usernameError, setUsernameError] = React.useState(false);\n  const [password, setPasswordValue] = React.useState('');\n  const [passwordVisible, setPasswordVisibility] = React.useState(false);\n\n  const handleUsernameTyping = event => {\n    if (\n      regex.USERNAME_TYPING.test(event.target.value) ||\n      event.target.value === ''\n    ) {\n      setUsernameError(false);\n    } else {\n      setUsernameError(true);\n    }\n    setUsernameValue(event.target.value);\n  };\n\n  const checkUsername = event => {\n    if (regex.USERNAME.test(event.target.value) || event.target.value === '') {\n      setUsernameError(false);\n    } else {\n      setUsernameError(true);\n    }\n  };\n\n  const handlePasswordTyping = event => {\n    setPasswordValue(event.target.value);\n  };\n\n  const handleTogglePasswordVisibility = () => {\n    setPasswordVisibility(!passwordVisible);\n  };\n\n  const handleRegisterSubmit = event => {\n    event.preventDefault();\n    onRegisterSubmit(username, password);\n  };\n\n  const handleLoginClick = event => {\n    event.preventDefault();\n    handleCloseRegisterPopup();\n    setTimeout(handleOpenLoginPopup, 500);\n  };\n\n  return (\n    <>\n      <Grid container spacing={1} justify=\"center\" alignContent=\"center\">\n        <Grid item xs={12} sm={10}>\n          <Grid container justify=\"center\" className={classes.registerElement}>\n            <Typography variant=\"h4\">Register</Typography>\n          </Grid>\n          <form onSubmit={handleRegisterSubmit}>\n            <Grid\n              container\n              justify=\"center\"\n              className={classes.registerElement}\n            >\n              <Grid item xs={12} sm={10}>\n                <TextField\n                  id=\"email\"\n                  variant=\"outlined\"\n                  label=\"Username\"\n                  placeholder=\"rajnikanth\"\n                  value={username}\n                  onChange={handleUsernameTyping}\n                  onBlur={checkUsername}\n                  error={usernameError}\n                  helperText={usernameError && 'Invalid username format.'}\n                  InputLabelProps={{ shrink: true }}\n                  autoFocus\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n            <Grid\n              container\n              justify=\"center\"\n              className={classes.registerElement}\n            >\n              <Grid item xs={12} sm={10}>\n                <TextField\n                  id=\"password\"\n                  variant=\"outlined\"\n                  type={passwordVisible ? 'text' : 'password'}\n                  label=\"Password\"\n                  placeholder=\"●●●●●●●●\"\n                  value={password}\n                  onChange={handlePasswordTyping}\n                  InputLabelProps={{ shrink: true }}\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          aria-label=\"toggle password visibility\"\n                          edge=\"end\"\n                          onClick={handleTogglePasswordVisibility}\n                        >\n                          {passwordVisible ? <Visibility /> : <VisibilityOff />}\n                        </IconButton>\n                      </InputAdornment>\n                    ),\n                  }}\n                  autoComplete=\"true\"\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n            <Grid\n              container\n              justify=\"center\"\n              className={classes.registerElement}\n            >\n              <Grid item xs={12} sm={10}>\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  size=\"large\"\n                  disabled={usernameError || username === '' || password === ''}\n                  onClick={handleRegisterSubmit}\n                  fullWidth\n                >\n                  {!isRegisterSubmitLoading ? 'Register' : <CircularProgress />}\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Grid>\n        <Grid container justify=\"center\" className={classes.registerElement}>\n          <Grid item xs={12} sm={10}>\n            <Grid container justify=\"center\">\n              <Typography variant=\"subtitle1\">\n                Already registered?{' '}\n                <Link href=\"\" onClick={handleLoginClick}>\n                  Login Here.\n                </Link>\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Register;\n","const style = () => ({\n  navbar: {\n    backgroundColor: '#F7F7F7',\n  },\n  logo: {\n    cursor: 'pointer',\n    height: '7vh',\n  },\n});\n\nexport default style;\n","import React from 'react';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\nimport LibraryAddRoundedIcon from '@material-ui/icons/LibraryAddRounded';\nimport PersonAddRoundedIcon from '@material-ui/icons/PersonAddRounded';\n\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\n\nimport AddShow from '../AddShow';\nimport ElevationScroll from '../ElevationScroll';\nimport Login from '../Login';\nimport Register from '../Register';\nimport SlideTransition from '../SlideTransition';\n\nimport style from './style';\n\nimport { utils } from '../../constants';\n\nconst Navbar = props => {\n  const {\n    redirectToPage,\n    requestToShowToast,\n    isUserLoggedIn,\n    types,\n    languages,\n    genres,\n  } = props;\n\n  const classes = makeStyles(style)();\n  const theme = useTheme();\n  const isMobileView = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const [loginPopupState, setLoginPopupState] = React.useState(false);\n  const [registerPopupState, setRegisterPopupState] = React.useState(false);\n  const [addShowPopupState, setAddShowPopupState] = React.useState(false);\n\n  const handleOpenLoginPopup = () => {\n    setLoginPopupState(true);\n  };\n\n  const handleCloseLoginPopup = () => {\n    setLoginPopupState(false);\n  };\n\n  const handleOpenRegisterPopup = () => {\n    setRegisterPopupState(true);\n  };\n\n  const handleCloseRegisterPopup = () => {\n    setRegisterPopupState(false);\n  };\n\n  const handleOpenAddShowPopup = () => {\n    if (!isUserLoggedIn) {\n      setAddShowPopupState(true);\n    } else {\n      requestToShowToast(\n        utils.MESSAGE_VARIANTS.INFO,\n        'You have to login first.'\n      );\n      setLoginPopupState(true);\n    }\n  };\n\n  const handleCloseAddShowPopup = () => {\n    if (!isUserLoggedIn) {\n      setAddShowPopupState(false);\n    } else {\n      setLoginPopupState(false);\n    }\n  };\n\n  return (\n    <>\n      <ElevationScroll {...props}>\n        <AppBar className={classes.navbar} position=\"sticky\" elevation={0}>\n          <Toolbar>\n            <Grid container justify=\"space-between\" alignItems=\"center\">\n              <Grid item>\n                <img\n                  className={classes.logo}\n                  src={isMobileView ? '/bwg_mobile_logo.png' : '/bwg_logo.png'}\n                  alt=\"Binge Watcher's Guide\"\n                  onClick={() => redirectToPage('/')}\n                />\n              </Grid>\n              <Grid item>\n                <Grid container justify=\"space-between\" alignItems=\"center\">\n                  <Grid item xs={8}>\n                    {isMobileView ? (\n                      <IconButton onClick={handleOpenAddShowPopup}>\n                        <LibraryAddRoundedIcon color=\"primary\" />\n                      </IconButton>\n                    ) : (\n                      <Grid container justify=\"center\" alignItems=\"center\">\n                        <Button\n                          color=\"primary\"\n                          size=\"large\"\n                          startIcon={<LibraryAddRoundedIcon />}\n                          onClick={handleOpenAddShowPopup}\n                        >\n                          Add your entry\n                        </Button>\n                      </Grid>\n                    )}\n                  </Grid>\n                  <Grid item xs={4}>\n                    {isMobileView ? (\n                      <IconButton onClick={handleOpenLoginPopup}>\n                        <PersonAddRoundedIcon color=\"primary\" />\n                      </IconButton>\n                    ) : (\n                      <Grid container justify=\"center\" alignItems=\"center\">\n                        <Button\n                          color=\"primary\"\n                          size=\"large\"\n                          startIcon={<PersonAddRoundedIcon />}\n                          onClick={handleOpenLoginPopup}\n                        >\n                          Login\n                        </Button>\n                      </Grid>\n                    )}\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Toolbar>\n        </AppBar>\n      </ElevationScroll>\n      <Dialog\n        open={loginPopupState}\n        TransitionComponent={SlideTransition}\n        fullWidth\n        maxWidth=\"sm\"\n        keepMounted={false}\n        onClose={handleCloseLoginPopup}\n      >\n        <DialogContent>\n          <Grid container>\n            <Grid item xs={12}>\n              <Grid container justify=\"flex-end\">\n                <IconButton onClick={handleCloseLoginPopup}>\n                  <CloseRoundedIcon />\n                </IconButton>\n              </Grid>\n            </Grid>\n            <Grid item xs={12}>\n              <Login\n                handleOpenRegisterPopup={handleOpenRegisterPopup}\n                handleCloseLoginPopup={handleCloseLoginPopup}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n      </Dialog>\n      <Dialog\n        open={registerPopupState}\n        TransitionComponent={SlideTransition}\n        fullWidth\n        maxWidth=\"sm\"\n        keepMounted={false}\n        onClose={handleCloseRegisterPopup}\n      >\n        <DialogContent>\n          <Grid container>\n            <Grid item xs={12}>\n              <Grid container justify=\"flex-end\">\n                <IconButton onClick={handleCloseRegisterPopup}>\n                  <CloseRoundedIcon />\n                </IconButton>\n              </Grid>\n            </Grid>\n            <Grid item xs={12}>\n              <Register\n                handleOpenLoginPopup={handleOpenLoginPopup}\n                handleCloseRegisterPopup={handleCloseRegisterPopup}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n      </Dialog>\n      <Dialog\n        open={addShowPopupState}\n        TransitionComponent={SlideTransition}\n        fullWidth\n        maxWidth=\"sm\"\n        keepMounted={false}\n        onClose={handleCloseAddShowPopup}\n      >\n        <DialogContent>\n          <Grid container>\n            <Grid item xs={12}>\n              <Grid container justify=\"flex-end\">\n                <IconButton onClick={handleCloseAddShowPopup}>\n                  <CloseRoundedIcon />\n                </IconButton>\n              </Grid>\n            </Grid>\n            <Grid item xs={12}>\n              <AddShow types={types} languages={languages} genres={genres} />\n            </Grid>\n          </Grid>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n};\n\nexport default Navbar;\n","import React, { Component } from 'react';\nimport { push } from 'connected-react-router';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport Grid from '@material-ui/core/Grid';\nimport Hidden from '@material-ui/core/Hidden';\n\nimport FilterAreaMobile from '../components/FilterAreaMobile';\nimport FilterAreaWeb from '../components/FilterAreaWeb';\nimport MovieDescription from '../components/MovieDescription';\nimport Navbar from '../components/Navbar';\n\nimport { staticAction, toastAction, showsAction } from '../actions';\nimport { showsSelector, staticSelector, userSelector } from '../selectors';\n\nclass IndexPage extends Component {\n  componentDidMount() {\n    const { getAllStatics, getAllShows } = this.props;\n\n    getAllStatics();\n    getAllShows();\n  }\n\n  render() {\n    const {\n      redirectToPage,\n      requestToShowToast,\n      isUserLoggedIn,\n      types,\n      languages,\n      genres,\n      shows,\n    } = this.props;\n\n    return (\n      <>\n        <>\n          <Navbar\n            redirectToPage={redirectToPage}\n            requestToShowToast={requestToShowToast}\n            isUserLoggedIn={isUserLoggedIn}\n            types={types}\n            languages={languages}\n            genres={genres}\n          />\n        </>\n        <Grid container justify=\"flex-start\">\n          <Hidden mdUp>\n            <Grid item xs={12}>\n              <FilterAreaMobile\n                types={types}\n                languages={languages}\n                genres={genres}\n              />\n            </Grid>\n          </Hidden>\n          <Grid item xs={12} md={8}>\n            {shows.map(show => (\n              <MovieDescription key={show._id} {...show} />\n            ))}\n          </Grid>\n          <Hidden smDown>\n            <Grid item md>\n              <FilterAreaWeb\n                types={types}\n                languages={languages}\n                genres={genres}\n              />\n            </Grid>\n          </Hidden>\n        </Grid>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  redirectToPage: url => {\n    return dispatch(push(url));\n  },\n  getAllStatics: () => {\n    return dispatch(staticAction.getAllStatics());\n  },\n  getAllShows: () => {\n    return dispatch(showsAction.getAllShows());\n  },\n  requestToShowToast: (variant, message) => {\n    return dispatch(toastAction.requestToShowToast(variant, message));\n  },\n});\n\nconst mapStateToProps = createStructuredSelector({\n  isUserLoggedIn: userSelector.isUserLoggedIn(),\n  types: staticSelector.getAllTypes(),\n  languages: staticSelector.getAllLanguages(),\n  genres: staticSelector.getAllGenres(),\n  shows: showsSelector.getAllShows(),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IndexPage);\n","import React from 'react';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\n\nconst Loading = () => {\n  return (\n    <Grid container justify=\"center\">\n      <CircularProgress />\n    </Grid>\n  );\n};\n\nexport default Loading;\n","import { amber, blue, green, red } from '@material-ui/core/colors';\n\nconst style = theme => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: red[500],\n  },\n  info: {\n    backgroundColor: blue[400],\n  },\n  warning: {\n    backgroundColor: amber[800],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n});\n\nexport default style;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport clsx from 'clsx';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport style from './style';\n\nimport { toastAction } from '../../actions';\nimport { toastSelector } from '../../selectors';\n\nclass Toast extends Component {\n  onClose = () => {\n    const { hideToast } = this.props;\n    hideToast();\n  };\n\n  render() {\n    const { toastState, toastMessage, toastVariant, classes } = this.props;\n    const toastPosition = { vertical: 'bottom', horizontal: 'left' };\n\n    const variantIcon = {\n      success: CheckCircleIcon,\n      warning: WarningIcon,\n      error: ErrorIcon,\n      info: InfoIcon,\n    };\n\n    const ToastIcon = variantIcon[toastVariant];\n\n    const toastIcon = toastVariant && (\n      <ToastIcon className={clsx(classes.icon, classes.iconVariant)} />\n    );\n\n    return (\n      <Snackbar\n        autoHideDuration={3000}\n        open={toastState}\n        anchorOrigin={toastPosition}\n        onClose={this.onClose}\n        transitionDuration={100}\n        action={[\n          <IconButton\n            key=\"close\"\n            aria-label=\"close\"\n            color=\"inherit\"\n            onClick={this.onClose}\n          >\n            <CloseIcon />\n          </IconButton>,\n        ]}\n      >\n        <SnackbarContent\n          className={clsx(classes[toastVariant], classes.icon)}\n          message={\n            <span id=\"snackbar-message\" className={classes.message}>\n              {toastIcon}\n              {toastMessage}\n            </span>\n          }\n          action={[\n            <IconButton\n              key=\"close\"\n              aria-label=\"close\"\n              color=\"inherit\"\n              onClick={this.onClose}\n            >\n              <CloseIcon className={classes.icon} />\n            </IconButton>,\n          ]}\n        />\n      </Snackbar>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  hideToast: () => dispatch(toastAction.hideToast()),\n});\n\nconst mapStateToProps = createStructuredSelector({\n  toastState: toastSelector.getToastState(),\n  toastMessage: toastSelector.getToastMessage(),\n  toastVariant: toastSelector.getToastVariant(),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(style)(Toast));\n","import React, { lazy, Suspense } from 'react';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { Helmet } from 'react-helmet';\nimport { Provider } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\n\nimport history from './utils/history';\nimport reduxStore from './utils/store';\nimport CustomTheme from './utils/theme';\n\nimport IndexPage from './pages/Index.page';\n\nimport Loading from './components/Loading';\nimport Toast from './components/Toast';\n\n// Lazy Load\nconst NotFoundPage = lazy(() => import('./pages/NotFound.page'));\n\nconst App = () => {\n  return (\n    <Provider store={reduxStore}>\n      <Helmet\n        titleTemplate=\"%s - Binge Watcher's Guide\"\n        defaultTitle=\"Binge Watcher's Guide - Complete Movie and Series Directory\"\n      >\n        <meta\n          name=\"description\"\n          content=\"Binge Watcher's Guide - Complete Movie and Series Directory\"\n        />\n      </Helmet>\n      <ConnectedRouter history={history}>\n        <Toast />\n        <ThemeProvider theme={CustomTheme}>\n          <Suspense fallback={<Loading />}>\n            <Switch>\n              <Route exact path=\"/\" component={IndexPage} />\n              <Route component={NotFoundPage} />\n            </Switch>\n          </Suspense>\n        </ThemeProvider>\n      </ConnectedRouter>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}